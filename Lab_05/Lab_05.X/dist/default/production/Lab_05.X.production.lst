

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 18 04:33:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	strings
   294  0217                     __pstrings:
   295  0217                     stringtab:
   296  0217                     __stringtab:
   297                           
   298                           ;	String table - string pointers are 1 byte each
   299  0217  1BFF               	btfsc	btemp+1,7
   300  0218  2A21               	ljmp	stringcode
   301  0219  1383               	bcf	3,7
   302  021A  187F               	btfsc	btemp+1,0
   303  021B  1783               	bsf	3,7
   304  021C  0800               	movf	0,w
   305  021D  0A84               	incf	4,f
   306  021E  1903               	skipnz
   307  021F  0AFF               	incf	btemp+1,f
   308  0220  0008               	return
   309  0221                     stringcode:
   310  0221                     stringdir:
   311  0221  3002               	movlw	high stringdir
   312  0222  008A               	movwf	10
   313  0223  0804               	movf	4,w
   314  0224  0A84               	incf	4,f
   315  0225  0782               	addwf	2,f
   316  0226                     __stringbase:
   317  0226  3400               	retlw	0
   318  0227                     __end_of__stringtab:
   319  0227                     _dpowers:
   320  0227  3401               	retlw	1
   321  0228  3400               	retlw	0
   322  0229  340A               	retlw	10
   323  022A  3400               	retlw	0
   324  022B  3464               	retlw	100
   325  022C  3400               	retlw	0
   326  022D  34E8               	retlw	232
   327  022E  3403               	retlw	3
   328  022F  3410               	retlw	16
   329  0230  3427               	retlw	39
   330  0231                     __end_of_dpowers:
   331  0007                     _PORTCbits	set	7
   332  0019                     _TXREG	set	25
   333  001E                     _ADRESH	set	30
   334  000C                     _PIR1bits	set	12
   335  000B                     _INTCONbits	set	11
   336  001F                     _ADCON0bits	set	31
   337  0001                     _TMR0	set	1
   338  000B                     _INTCON	set	11
   339  0009                     _PORTE	set	9
   340  0008                     _PORTD	set	8
   341  0007                     _PORTC	set	7
   342  0006                     _PORTB	set	6
   343  001A                     _RCREG	set	26
   344  0005                     _PORTA	set	5
   345  0028                     _RA0	set	40
   346  00C4                     _CREN	set	196
   347  00C7                     _SPEN	set	199
   348  0066                     _ADIF	set	102
   349  005B                     _RBIE	set	91
   350  0048                     _RE0	set	72
   351  0065                     _RCIF	set	101
   352  0031                     _RB1	set	49
   353  0030                     _RB0	set	48
   354  0058                     _RBIF	set	88
   355  0086                     _TRISB	set	134
   356  0087                     _TRISC	set	135
   357  0099                     _SPBRG	set	153
   358  008C                     _PIE1bits	set	140
   359  009F                     _ADCON1bits	set	159
   360  0095                     _WPUBbits	set	149
   361  0081                     _OPTION_REGbits	set	129
   362  0088                     _TRISD	set	136
   363  0089                     _TRISE	set	137
   364  0085                     _TRISA	set	133
   365  04C4                     _SYNC	set	1220
   366  04C5                     _TXEN	set	1221
   367  04B1                     _IOCB1	set	1201
   368  04B0                     _IOCB0	set	1200
   369  040B                     _PSA	set	1035
   370  040D                     _T0CS	set	1037
   371  040A                     _PS2	set	1034
   372  0409                     _PS1	set	1033
   373  0408                     _PS0	set	1032
   374  047E                     _IRCF2	set	1150
   375  047D                     _IRCF1	set	1149
   376  047C                     _IRCF0	set	1148
   377  0189                     _ANSELH	set	393
   378  0188                     _ANSEL	set	392
   379  0231                     STR_2:
   380  0231  3450               	retlw	80	;'P'
   381  0232  344F               	retlw	79	;'O'
   382  0233  3454               	retlw	84	;'T'
   383  0234  3420               	retlw	32	;' '
   384  0235  3431               	retlw	49	;'1'
   385  0236  343A               	retlw	58	;':'
   386  0237  3420               	retlw	32	;' '
   387  0238  3400               	retlw	0
   388  0239                     STR_3:
   389  0239  3450               	retlw	80	;'P'
   390  023A  344F               	retlw	79	;'O'
   391  023B  3454               	retlw	84	;'T'
   392  023C  3420               	retlw	32	;' '
   393  023D  3432               	retlw	50	;'2'
   394  023E  343A               	retlw	58	;':'
   395  023F  3420               	retlw	32	;' '
   396  0240  3400               	retlw	0
   397  0241                     STR_1:
   398  0241  3425               	retlw	37	;'%'
   399  0242  3464               	retlw	100	;'d'
   400  0243  3400               	retlw	0
   401                           
   402                           	psect	cinit
   403  000F                     start_initialization:	
   404                           ; #config settings
   405                           
   406  000F                     __initialization:
   407                           
   408                           ; Clear objects allocated to BANK0
   409  000F  1383               	bcf	3,7	;select IRP bank0
   410  0010  3034               	movlw	low __pbssBANK0
   411  0011  0084               	movwf	4
   412  0012  3047               	movlw	low (__pbssBANK0+19)
   413  0013  120A  118A  229C  120A  118A  	fcall	clear_ram0
   414  0018                     end_of_initialization:	
   415                           ;End of C runtime variable initialization code
   416                           
   417  0018                     __end_of__initialization:
   418  0018  0183               	clrf	3
   419  0019  120A  118A  2906   	ljmp	_main	;jump to C main() function
   420                           
   421                           	psect	bssBANK0
   422  0034                     __pbssBANK0:
   423  0034                     _Contador:
   424  0034                     	ds	1
   425  0035                     _Boton_1:
   426  0035                     	ds	1
   427  0036                     _Boton_0:
   428  0036                     	ds	1
   429  0037                     _text:
   430  0037                     	ds	16
   431                           
   432                           	psect	clrtext
   433  029C                     clear_ram0:	
   434                           ;	Called with FSR containing the base address, and
   435                           ;	W with the last address+1
   436                           
   437  029C  0064               	clrwdt	;clear the watchdog before getting into this loop
   438  029D                     clrloop0:
   439  029D  0180               	clrf	0	;clear RAM location pointed to by FSR
   440  029E  0A84               	incf	4,f	;increment pointer
   441  029F  0604               	xorwf	4,w	;XOR with final address
   442  02A0  1903               	btfsc	3,2	;have we reached the end yet?
   443  02A1  3400               	retlw	0	;all done for this memory range, return
   444  02A2  0604               	xorwf	4,w	;XOR again to restore value
   445  02A3  2A9D               	goto	clrloop0	;do the next byte
   446                           
   447                           	psect	cstackCOMMON
   448  0070                     __pcstackCOMMON:
   449  0070                     ?_config:
   450  0070                     ?_Config_Oscilador:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_Config_USART:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_Config_PORTB:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_isr:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ??_isr:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0070                     	ds	2
   471  0072                     ??_config:
   472  0072                     ??_Config_Oscilador:	
   473                           ; 1 bytes @ 0x2
   474                           
   475  0072                     ??_Config_USART:	
   476                           ; 1 bytes @ 0x2
   477                           
   478  0072                     ??_Config_PORTB:	
   479                           ; 1 bytes @ 0x2
   480                           
   481  0072                     ?_Texto_USART:	
   482                           ; 1 bytes @ 0x2
   483                           
   484  0072                     ?___lwdiv:	
   485                           ; 1 bytes @ 0x2
   486                           
   487  0072                     Texto_USART@texto:	
   488                           ; 2 bytes @ 0x2
   489                           
   490  0072                     ___lwdiv@divisor:	
   491                           ; 2 bytes @ 0x2
   492                           
   493                           
   494                           ; 2 bytes @ 0x2
   495  0072                     	ds	2
   496  0074                     ??_Texto_USART:
   497  0074                     ___lwdiv@dividend:	
   498                           ; 1 bytes @ 0x4
   499                           
   500                           
   501                           ; 2 bytes @ 0x4
   502  0074                     	ds	2
   503  0076                     ??___lwdiv:
   504  0076                     Texto_USART@i:	
   505                           ; 1 bytes @ 0x6
   506                           
   507                           
   508                           ; 1 bytes @ 0x6
   509  0076                     	ds	1
   510  0077                     ___lwdiv@quotient:
   511                           
   512                           ; 2 bytes @ 0x7
   513  0077                     	ds	2
   514  0079                     ___lwdiv@counter:
   515                           
   516                           ; 1 bytes @ 0x9
   517  0079                     	ds	1
   518  007A                     ??___lwmod:
   519                           
   520                           ; 1 bytes @ 0xA
   521  007A                     	ds	1
   522  007B                     ___lwmod@counter:
   523                           
   524                           ; 1 bytes @ 0xB
   525  007B                     	ds	1
   526                           
   527                           	psect	cstackBANK0
   528  0020                     __pcstackBANK0:
   529  0020                     ?___lwmod:
   530  0020                     ___lwmod@divisor:	
   531                           ; 2 bytes @ 0x0
   532                           
   533                           
   534                           ; 2 bytes @ 0x0
   535  0020                     	ds	2
   536  0022                     ___lwmod@dividend:
   537                           
   538                           ; 2 bytes @ 0x2
   539  0022                     	ds	2
   540  0024                     ?_sprintf:
   541  0024                     sprintf@f:	
   542                           ; 2 bytes @ 0x4
   543                           
   544                           
   545                           ; 1 bytes @ 0x4
   546  0024                     	ds	3
   547  0027                     ??_sprintf:
   548                           
   549                           ; 1 bytes @ 0x7
   550  0027                     	ds	3
   551  002A                     sprintf@ap:
   552                           
   553                           ; 1 bytes @ 0xA
   554  002A                     	ds	1
   555  002B                     sprintf@flag:
   556                           
   557                           ; 1 bytes @ 0xB
   558  002B                     	ds	1
   559  002C                     sprintf@prec:
   560                           
   561                           ; 1 bytes @ 0xC
   562  002C                     	ds	1
   563  002D                     sprintf@val:
   564                           
   565                           ; 2 bytes @ 0xD
   566  002D                     	ds	2
   567  002F                     sprintf@sp:
   568                           
   569                           ; 1 bytes @ 0xF
   570  002F                     	ds	1
   571  0030                     sprintf@c:
   572                           
   573                           ; 1 bytes @ 0x10
   574  0030                     	ds	1
   575  0031                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x11
   578  0031                     	ds	3
   579                           
   580                           	psect	maintext
   581  0106                     __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 86 in file "Lab_05.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : B00/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       3       0       0       0
   604 ;;      Totals:         0       3       0       0       0
   605 ;;Total ram usage:        3 bytes
   606 ;; Hardware stack levels required when called: 3
   607 ;; This function calls:
   608 ;;		_Config_Oscilador
   609 ;;		_Config_PORTB
   610 ;;		_Config_USART
   611 ;;		_Texto_USART
   612 ;;		_config
   613 ;;		_sprintf
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           
   620                           ;psect for function _main
   621  0106                     _main:
   622  0106                     l1362:	
   623                           ;incstack = 0
   624                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   625                           
   626  0106  120A  118A  227E  120A  118A  	fcall	_config
   627  010B                     l1364:
   628  010B  120A  118A  22A4  120A  118A  	fcall	_Config_Oscilador
   629  0110                     l1366:
   630  0110  120A  118A  2269  120A  118A  	fcall	_Config_USART
   631  0115  120A  118A  228F  120A  118A  	fcall	_Config_PORTB
   632  011A                     l1368:
   633  011A  1283               	bcf	3,5	;RP0=0, select bank0
   634  011B  1303               	bcf	3,6	;RP1=0, select bank0
   635  011C  0336               	decf	_Boton_0,w
   636  011D  1D03               	btfss	3,2
   637  011E  2920               	goto	u661
   638  011F  2921               	goto	u660
   639  0120                     u661:
   640  0120  292C               	goto	l1378
   641  0121                     u660:
   642  0121                     l1370:
   643  0121  1C06               	btfss	6,0	;volatile
   644  0122  2924               	goto	u671
   645  0123  2925               	goto	u670
   646  0124                     u671:
   647  0124  292C               	goto	l1378
   648  0125                     u670:
   649  0125                     l1372:
   650  0125  3001               	movlw	1
   651  0126  00B1               	movwf	??_main
   652  0127  0831               	movf	??_main,w
   653  0128  07B4               	addwf	_Contador,f
   654  0129                     l1374:
   655  0129  01B6               	clrf	_Boton_0
   656  012A                     l1376:
   657  012A  01B5               	clrf	_Boton_1
   658  012B  2938               	goto	l1388
   659  012C                     l1378:
   660  012C  0335               	decf	_Boton_1,w
   661  012D  1D03               	btfss	3,2
   662  012E  2930               	goto	u681
   663  012F  2931               	goto	u680
   664  0130                     u681:
   665  0130  2938               	goto	l1388
   666  0131                     u680:
   667  0131                     l1380:
   668  0131  1C86               	btfss	6,1	;volatile
   669  0132  2934               	goto	u691
   670  0133  2935               	goto	u690
   671  0134                     u691:
   672  0134  2938               	goto	l1388
   673  0135                     u690:
   674  0135                     l1382:
   675  0135  3001               	movlw	1
   676  0136  02B4               	subwf	_Contador,f
   677  0137  2929               	goto	l1374
   678  0138                     l1388:
   679  0138  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   680  0139  00B1               	movwf	??_main
   681  013A  0831               	movf	??_main,w
   682  013B  00A4               	movwf	sprintf@f
   683  013C  0834               	movf	_Contador,w
   684  013D  00B2               	movwf	??_main+1
   685  013E  01B3               	clrf	??_main+2
   686  013F  0832               	movf	??_main+1,w
   687  0140  00A5               	movwf	?_sprintf+1
   688  0141  0833               	movf	??_main+2,w
   689  0142  00A6               	movwf	?_sprintf+2
   690  0143  3037               	movlw	(low (_text| 0))& (0+255)
   691  0144  120A  118A  201C  120A  118A  	fcall	_sprintf
   692  0149                     l1390:
   693  0149  3037               	movlw	(low (_text| 0))& (0+255)
   694  014A  00F2               	movwf	Texto_USART@texto
   695  014B  3000               	movlw	0
   696  014C  00F3               	movwf	Texto_USART@texto+1
   697  014D  120A  118A  21E5  120A  118A  	fcall	_Texto_USART
   698  0152                     l1392:
   699  0152  3003               	movlw	3
   700  0153  1283               	bcf	3,5	;RP0=0, select bank0
   701  0154  1303               	bcf	3,6	;RP1=0, select bank0
   702  0155  00B3               	movwf	??_main+2
   703  0156  3008               	movlw	8
   704  0157  00B2               	movwf	??_main+1
   705  0158  3076               	movlw	118
   706  0159  00B1               	movwf	??_main
   707  015A                     u707:
   708  015A  0BB1               	decfsz	??_main,f
   709  015B  295A               	goto	u707
   710  015C  0BB2               	decfsz	??_main+1,f
   711  015D  295A               	goto	u707
   712  015E  0BB3               	decfsz	??_main+2,f
   713  015F  295A               	goto	u707
   714  0160  0000               	nop
   715  0161  291A               	goto	l1368
   716  0162  120A  118A  280C   	ljmp	start
   717  0165                     __end_of_main:
   718                           
   719                           	psect	text1
   720  001C                     __ptext1:	
   721 ;; *************** function _sprintf *****************
   722 ;; Defined at:
   723 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  sp              1    wreg     PTR unsigned char 
   726 ;;		 -> text(16), 
   727 ;;  f               1    4[BANK0 ] PTR const unsigned char 
   728 ;;		 -> STR_1(3), 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  sp              1   15[BANK0 ] PTR unsigned char 
   731 ;;		 -> text(16), 
   732 ;;  tmpval          4    0        struct .
   733 ;;  val             2   13[BANK0 ] unsigned int 
   734 ;;  cp              2    0        PTR const unsigned char 
   735 ;;  len             2    0        unsigned int 
   736 ;;  c               1   16[BANK0 ] unsigned char 
   737 ;;  prec            1   12[BANK0 ] char 
   738 ;;  flag            1   11[BANK0 ] unsigned char 
   739 ;;  ap              1   10[BANK0 ] PTR void [1]
   740 ;;		 -> ?_sprintf(2), 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  2    4[BANK0 ] int 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       3       0       0       0
   751 ;;      Locals:         0       7       0       0       0
   752 ;;      Temps:          0       3       0       0       0
   753 ;;      Totals:         0      13       0       0       0
   754 ;;Total ram usage:       13 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 2
   757 ;; This function calls:
   758 ;;		___lwdiv
   759 ;;		___lwmod
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _sprintf
   767  001C                     _sprintf:
   768                           
   769                           ;incstack = 0
   770                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   771                           ;sprintf@sp stored from wreg
   772  001C  1283               	bcf	3,5	;RP0=0, select bank0
   773  001D  1303               	bcf	3,6	;RP1=0, select bank0
   774  001E  00AF               	movwf	sprintf@sp
   775  001F                     l1274:
   776                           
   777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   778  001F  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   779  0020  00A7               	movwf	??_sprintf
   780  0021  0827               	movf	??_sprintf,w
   781  0022  00AA               	movwf	sprintf@ap
   782                           
   783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   784  0023  28EF               	goto	l1326
   785  0024                     l1276:
   786                           
   787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   788  0024  3025               	movlw	37
   789  0025  0630               	xorwf	sprintf@c,w
   790  0026  1903               	btfsc	3,2
   791  0027  2829               	goto	u541
   792  0028  282A               	goto	u540
   793  0029                     u541:
   794  0029  2836               	goto	l1282
   795  002A                     u540:
   796  002A                     l1278:
   797                           
   798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   799  002A  0830               	movf	sprintf@c,w
   800  002B  00A7               	movwf	??_sprintf
   801  002C  082F               	movf	sprintf@sp,w
   802  002D  0084               	movwf	4
   803  002E  0827               	movf	??_sprintf,w
   804  002F  1383               	bcf	3,7	;select IRP bank0
   805  0030  0080               	movwf	0
   806  0031                     l1280:
   807  0031  3001               	movlw	1
   808  0032  00A7               	movwf	??_sprintf
   809  0033  0827               	movf	??_sprintf,w
   810  0034  07AF               	addwf	sprintf@sp,f
   811                           
   812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
   813  0035  28EF               	goto	l1326
   814  0036                     l1282:
   815                           
   816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   817  0036  01AB               	clrf	sprintf@flag
   818  0037                     l1286:	
   819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   820                           
   821  0037  3001               	movlw	1
   822  0038  07A4               	addwf	sprintf@f,f
   823  0039  30FF               	movlw	-1
   824  003A  0724               	addwf	sprintf@f,w
   825  003B  0084               	movwf	4
   826  003C  120A  118A  2221  120A  118A  	fcall	stringdir
   827  0041  00B0               	movwf	sprintf@c
   828  0042  00A7               	movwf	??_sprintf
   829  0043  01A8               	clrf	??_sprintf+1
   830                           
   831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   832                           ; Switch size 1, requested type "simple"
   833                           ; Number of cases is 1, Range of values is 0 to 0
   834                           ; switch strategies available:
   835                           ; Name         Instructions Cycles
   836                           ; simple_byte            4     3 (average)
   837                           ; direct_byte           11     8 (fixed)
   838                           ; jumptable            260     6 (fixed)
   839                           ;	Chosen strategy is simple_byte
   840  0044  0828               	movf	??_sprintf+1,w
   841  0045  3A00               	xorlw	0	; case 0
   842  0046  1903               	skipnz
   843  0047  2849               	goto	l1438
   844  0048  28EF               	goto	l1326
   845  0049                     l1438:
   846                           
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 3, Range of values is 0 to 105
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte           10     6 (average)
   852                           ; jumptable            260     6 (fixed)
   853                           ;	Chosen strategy is simple_byte
   854  0049  0827               	movf	??_sprintf,w
   855  004A  3A00               	xorlw	0	; case 0
   856  004B  1903               	skipnz
   857  004C  2901               	goto	l1328
   858  004D  3A64               	xorlw	100	; case 100
   859  004E  1903               	skipnz
   860  004F  2854               	goto	l1288
   861  0050  3A0D               	xorlw	13	; case 105
   862  0051  1903               	skipnz
   863  0052  2854               	goto	l1288
   864  0053  28EF               	goto	l1326
   865  0054                     l1288:
   866                           
   867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   868  0054  082A               	movf	sprintf@ap,w
   869  0055  0084               	movwf	4
   870  0056  1383               	bcf	3,7	;select IRP bank0
   871  0057  0800               	movf	0,w
   872  0058  00AD               	movwf	sprintf@val
   873  0059  0A84               	incf	4,f
   874  005A  0800               	movf	0,w
   875  005B  00AE               	movwf	sprintf@val+1
   876  005C                     l1290:
   877  005C  3002               	movlw	2
   878  005D  00A7               	movwf	??_sprintf
   879  005E  0827               	movf	??_sprintf,w
   880  005F  07AA               	addwf	sprintf@ap,f
   881  0060                     l1292:
   882                           
   883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   884  0060  1FAE               	btfss	sprintf@val+1,7
   885  0061  2863               	goto	u551
   886  0062  2864               	goto	u550
   887  0063                     u551:
   888  0063  286D               	goto	l1298
   889  0064                     u550:
   890  0064                     l1294:
   891                           
   892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   893  0064  3003               	movlw	3
   894  0065  00A7               	movwf	??_sprintf
   895  0066  0827               	movf	??_sprintf,w
   896  0067  04AB               	iorwf	sprintf@flag,f
   897  0068                     l1296:
   898                           
   899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   900  0068  09AD               	comf	sprintf@val,f
   901  0069  09AE               	comf	sprintf@val+1,f
   902  006A  0AAD               	incf	sprintf@val,f
   903  006B  1903               	skipnz
   904  006C  0AAE               	incf	sprintf@val+1,f
   905  006D                     l1298:
   906                           
   907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   908  006D  01B0               	clrf	sprintf@c
   909  006E  0AB0               	incf	sprintf@c,f
   910  006F                     l1304:
   911                           
   912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   913  006F  0830               	movf	sprintf@c,w
   914  0070  00A7               	movwf	??_sprintf
   915  0071  0727               	addwf	??_sprintf,w
   916  0072  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   917  0073  0084               	movwf	4
   918  0074  120A  118A  2221  120A  118A  	fcall	stringdir
   919  0079  00A8               	movwf	??_sprintf+1
   920  007A  120A  118A  2221  120A  118A  	fcall	stringdir
   921  007F  00A9               	movwf	??_sprintf+2
   922  0080  0829               	movf	??_sprintf+2,w
   923  0081  022E               	subwf	sprintf@val+1,w
   924  0082  1D03               	skipz
   925  0083  2886               	goto	u565
   926  0084  0828               	movf	??_sprintf+1,w
   927  0085  022D               	subwf	sprintf@val,w
   928  0086                     u565:
   929  0086  1803               	skipnc
   930  0087  2889               	goto	u561
   931  0088  288A               	goto	u560
   932  0089                     u561:
   933  0089  288B               	goto	l1308
   934  008A                     u560:
   935  008A  2895               	goto	l1310
   936  008B                     l1308:
   937  008B  3001               	movlw	1
   938  008C  00A7               	movwf	??_sprintf
   939  008D  0827               	movf	??_sprintf,w
   940  008E  07B0               	addwf	sprintf@c,f
   941  008F  3005               	movlw	5
   942  0090  0630               	xorwf	sprintf@c,w
   943  0091  1D03               	btfss	3,2
   944  0092  2894               	goto	u571
   945  0093  2895               	goto	u570
   946  0094                     u571:
   947  0094  286F               	goto	l1304
   948  0095                     u570:
   949  0095                     l1310:
   950                           
   951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   952  0095  082B               	movf	sprintf@flag,w
   953  0096  3903               	andlw	3
   954  0097  1903               	btfsc	3,2
   955  0098  289A               	goto	u581
   956  0099  289B               	goto	u580
   957  009A                     u581:
   958  009A  28A6               	goto	l1316
   959  009B                     u580:
   960  009B                     l1312:
   961                           
   962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
   963  009B  302D               	movlw	45
   964  009C  00A7               	movwf	??_sprintf
   965  009D  082F               	movf	sprintf@sp,w
   966  009E  0084               	movwf	4
   967  009F  0827               	movf	??_sprintf,w
   968  00A0  1383               	bcf	3,7	;select IRP bank0
   969  00A1  0080               	movwf	0
   970  00A2                     l1314:
   971  00A2  3001               	movlw	1
   972  00A3  00A7               	movwf	??_sprintf
   973  00A4  0827               	movf	??_sprintf,w
   974  00A5  07AF               	addwf	sprintf@sp,f
   975  00A6                     l1316:
   976                           
   977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
   978  00A6  0830               	movf	sprintf@c,w
   979  00A7  00A7               	movwf	??_sprintf
   980  00A8  0827               	movf	??_sprintf,w
   981  00A9  00AC               	movwf	sprintf@prec
   982                           
   983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
   984  00AA  28E6               	goto	l1324
   985  00AB                     l1318:
   986                           
   987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
   988  00AB  300A               	movlw	10
   989  00AC  00A0               	movwf	___lwmod@divisor
   990  00AD  3000               	movlw	0
   991  00AE  00A1               	movwf	___lwmod@divisor+1
   992  00AF  082C               	movf	sprintf@prec,w
   993  00B0  00A7               	movwf	??_sprintf
   994  00B1  0727               	addwf	??_sprintf,w
   995  00B2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   996  00B3  0084               	movwf	4
   997  00B4  120A  118A  2221  120A  118A  	fcall	stringdir
   998  00B9  00F2               	movwf	___lwdiv@divisor
   999  00BA  120A  118A  2221  120A  118A  	fcall	stringdir
  1000  00BF  00F3               	movwf	___lwdiv@divisor+1
  1001  00C0  082E               	movf	sprintf@val+1,w
  1002  00C1  00F5               	movwf	___lwdiv@dividend+1
  1003  00C2  082D               	movf	sprintf@val,w
  1004  00C3  00F4               	movwf	___lwdiv@dividend
  1005  00C4  120A  118A  2165  120A  118A  	fcall	___lwdiv
  1006  00C9  0873               	movf	?___lwdiv+1,w
  1007  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1008  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1009  00CC  00A3               	movwf	___lwmod@dividend+1
  1010  00CD  0872               	movf	?___lwdiv,w
  1011  00CE  00A2               	movwf	___lwmod@dividend
  1012  00CF  120A  118A  21A9  120A  118A  	fcall	___lwmod
  1013  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1014  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1015  00D6  0820               	movf	?___lwmod,w
  1016  00D7  3E30               	addlw	48
  1017  00D8  00A8               	movwf	??_sprintf+1
  1018  00D9  0828               	movf	??_sprintf+1,w
  1019  00DA  00B0               	movwf	sprintf@c
  1020  00DB                     l1320:
  1021                           
  1022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1023  00DB  0830               	movf	sprintf@c,w
  1024  00DC  00A7               	movwf	??_sprintf
  1025  00DD  082F               	movf	sprintf@sp,w
  1026  00DE  0084               	movwf	4
  1027  00DF  0827               	movf	??_sprintf,w
  1028  00E0  1383               	bcf	3,7	;select IRP bank0
  1029  00E1  0080               	movwf	0
  1030  00E2                     l1322:
  1031  00E2  3001               	movlw	1
  1032  00E3  00A7               	movwf	??_sprintf
  1033  00E4  0827               	movf	??_sprintf,w
  1034  00E5  07AF               	addwf	sprintf@sp,f
  1035  00E6                     l1324:
  1036                           
  1037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1038  00E6  30FF               	movlw	255
  1039  00E7  00A7               	movwf	??_sprintf
  1040  00E8  0827               	movf	??_sprintf,w
  1041  00E9  07AC               	addwf	sprintf@prec,f
  1042  00EA  0A2C               	incf	sprintf@prec,w
  1043  00EB  1D03               	btfss	3,2
  1044  00EC  28EE               	goto	u591
  1045  00ED  28EF               	goto	u590
  1046  00EE                     u591:
  1047  00EE  28AB               	goto	l1318
  1048  00EF                     u590:
  1049  00EF                     l1326:
  1050                           
  1051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1052  00EF  3001               	movlw	1
  1053  00F0  07A4               	addwf	sprintf@f,f
  1054  00F1  30FF               	movlw	-1
  1055  00F2  0724               	addwf	sprintf@f,w
  1056  00F3  0084               	movwf	4
  1057  00F4  120A  118A  2221  120A  118A  	fcall	stringdir
  1058  00F9  00A7               	movwf	??_sprintf
  1059  00FA  0827               	movf	??_sprintf,w
  1060  00FB  00B0               	movwf	sprintf@c
  1061  00FC  0830               	movf	sprintf@c,w
  1062  00FD  1D03               	btfss	3,2
  1063  00FE  2900               	goto	u601
  1064  00FF  2901               	goto	u600
  1065  0100                     u601:
  1066  0100  2824               	goto	l1276
  1067  0101                     u600:
  1068  0101                     l1328:
  1069                           
  1070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1071  0101  082F               	movf	sprintf@sp,w
  1072  0102  0084               	movwf	4
  1073  0103  1383               	bcf	3,7	;select IRP bank0
  1074  0104  0180               	clrf	0
  1075  0105                     l346:
  1076  0105  0008               	return
  1077  0106                     __end_of_sprintf:
  1078                           
  1079                           	psect	text2
  1080  01A9                     __ptext2:	
  1081 ;; *************** function ___lwmod *****************
  1082 ;; Defined at:
  1083 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  divisor         2    0[BANK0 ] unsigned int 
  1086 ;;  dividend        2    2[BANK0 ] unsigned int 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  counter         1   11[COMMON] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2    0[BANK0 ] unsigned int 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       4       0       0       0
  1099 ;;      Locals:         1       0       0       0       0
  1100 ;;      Temps:          1       0       0       0       0
  1101 ;;      Totals:         2       4       0       0       0
  1102 ;;Total ram usage:        6 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_sprintf
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function ___lwmod
  1114  01A9                     ___lwmod:
  1115  01A9                     l1240:	
  1116                           ;incstack = 0
  1117                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1118                           
  1119  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1120  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1121  01AB  0820               	movf	___lwmod@divisor,w
  1122  01AC  0421               	iorwf	___lwmod@divisor+1,w
  1123  01AD  1903               	btfsc	3,2
  1124  01AE  29B0               	goto	u481
  1125  01AF  29B1               	goto	u480
  1126  01B0                     u481:
  1127  01B0  29E0               	goto	l1258
  1128  01B1                     u480:
  1129  01B1                     l1242:
  1130  01B1  01FB               	clrf	___lwmod@counter
  1131  01B2  0AFB               	incf	___lwmod@counter,f
  1132  01B3  29BF               	goto	l1248
  1133  01B4                     l1244:
  1134  01B4  3001               	movlw	1
  1135  01B5                     u495:
  1136  01B5  1003               	clrc
  1137  01B6  0DA0               	rlf	___lwmod@divisor,f
  1138  01B7  0DA1               	rlf	___lwmod@divisor+1,f
  1139  01B8  3EFF               	addlw	-1
  1140  01B9  1D03               	skipz
  1141  01BA  29B5               	goto	u495
  1142  01BB                     l1246:
  1143  01BB  3001               	movlw	1
  1144  01BC  00FA               	movwf	??___lwmod
  1145  01BD  087A               	movf	??___lwmod,w
  1146  01BE  07FB               	addwf	___lwmod@counter,f
  1147  01BF                     l1248:
  1148  01BF  1FA1               	btfss	___lwmod@divisor+1,7
  1149  01C0  29C2               	goto	u501
  1150  01C1  29C3               	goto	u500
  1151  01C2                     u501:
  1152  01C2  29B4               	goto	l1244
  1153  01C3                     u500:
  1154  01C3                     l1250:
  1155  01C3  0821               	movf	___lwmod@divisor+1,w
  1156  01C4  0223               	subwf	___lwmod@dividend+1,w
  1157  01C5  1D03               	skipz
  1158  01C6  29C9               	goto	u515
  1159  01C7  0820               	movf	___lwmod@divisor,w
  1160  01C8  0222               	subwf	___lwmod@dividend,w
  1161  01C9                     u515:
  1162  01C9  1C03               	skipc
  1163  01CA  29CC               	goto	u511
  1164  01CB  29CD               	goto	u510
  1165  01CC                     u511:
  1166  01CC  29D3               	goto	l1254
  1167  01CD                     u510:
  1168  01CD                     l1252:
  1169  01CD  0820               	movf	___lwmod@divisor,w
  1170  01CE  02A2               	subwf	___lwmod@dividend,f
  1171  01CF  0821               	movf	___lwmod@divisor+1,w
  1172  01D0  1C03               	skipc
  1173  01D1  03A3               	decf	___lwmod@dividend+1,f
  1174  01D2  02A3               	subwf	___lwmod@dividend+1,f
  1175  01D3                     l1254:
  1176  01D3  3001               	movlw	1
  1177  01D4                     u525:
  1178  01D4  1003               	clrc
  1179  01D5  0CA1               	rrf	___lwmod@divisor+1,f
  1180  01D6  0CA0               	rrf	___lwmod@divisor,f
  1181  01D7  3EFF               	addlw	-1
  1182  01D8  1D03               	skipz
  1183  01D9  29D4               	goto	u525
  1184  01DA                     l1256:
  1185  01DA  3001               	movlw	1
  1186  01DB  02FB               	subwf	___lwmod@counter,f
  1187  01DC  1D03               	btfss	3,2
  1188  01DD  29DF               	goto	u531
  1189  01DE  29E0               	goto	u530
  1190  01DF                     u531:
  1191  01DF  29C3               	goto	l1250
  1192  01E0                     u530:
  1193  01E0                     l1258:
  1194  01E0  0823               	movf	___lwmod@dividend+1,w
  1195  01E1  00A1               	movwf	?___lwmod+1
  1196  01E2  0822               	movf	___lwmod@dividend,w
  1197  01E3  00A0               	movwf	?___lwmod
  1198  01E4                     l632:
  1199  01E4  0008               	return
  1200  01E5                     __end_of___lwmod:
  1201                           
  1202                           	psect	text3
  1203  0165                     __ptext3:	
  1204 ;; *************** function ___lwdiv *****************
  1205 ;; Defined at:
  1206 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  divisor         2    2[COMMON] unsigned int 
  1209 ;;  dividend        2    4[COMMON] unsigned int 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  quotient        2    7[COMMON] unsigned int 
  1212 ;;  counter         1    9[COMMON] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  2    2[COMMON] unsigned int 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         4       0       0       0       0
  1223 ;;      Locals:         3       0       0       0       0
  1224 ;;      Temps:          1       0       0       0       0
  1225 ;;      Totals:         8       0       0       0       0
  1226 ;;Total ram usage:        8 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_sprintf
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function ___lwdiv
  1238  0165                     ___lwdiv:
  1239  0165                     l1214:	
  1240                           ;incstack = 0
  1241                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1242                           
  1243  0165  01F7               	clrf	___lwdiv@quotient
  1244  0166  01F8               	clrf	___lwdiv@quotient+1
  1245  0167                     l1216:
  1246  0167  0872               	movf	___lwdiv@divisor,w
  1247  0168  0473               	iorwf	___lwdiv@divisor+1,w
  1248  0169  1903               	btfsc	3,2
  1249  016A  296C               	goto	u411
  1250  016B  296D               	goto	u410
  1251  016C                     u411:
  1252  016C  29A4               	goto	l1236
  1253  016D                     u410:
  1254  016D                     l1218:
  1255  016D  01F9               	clrf	___lwdiv@counter
  1256  016E  0AF9               	incf	___lwdiv@counter,f
  1257  016F  297B               	goto	l1224
  1258  0170                     l1220:
  1259  0170  3001               	movlw	1
  1260  0171                     u425:
  1261  0171  1003               	clrc
  1262  0172  0DF2               	rlf	___lwdiv@divisor,f
  1263  0173  0DF3               	rlf	___lwdiv@divisor+1,f
  1264  0174  3EFF               	addlw	-1
  1265  0175  1D03               	skipz
  1266  0176  2971               	goto	u425
  1267  0177                     l1222:
  1268  0177  3001               	movlw	1
  1269  0178  00F6               	movwf	??___lwdiv
  1270  0179  0876               	movf	??___lwdiv,w
  1271  017A  07F9               	addwf	___lwdiv@counter,f
  1272  017B                     l1224:
  1273  017B  1FF3               	btfss	___lwdiv@divisor+1,7
  1274  017C  297E               	goto	u431
  1275  017D  297F               	goto	u430
  1276  017E                     u431:
  1277  017E  2970               	goto	l1220
  1278  017F                     u430:
  1279  017F                     l1226:
  1280  017F  3001               	movlw	1
  1281  0180                     u445:
  1282  0180  1003               	clrc
  1283  0181  0DF7               	rlf	___lwdiv@quotient,f
  1284  0182  0DF8               	rlf	___lwdiv@quotient+1,f
  1285  0183  3EFF               	addlw	-1
  1286  0184  1D03               	skipz
  1287  0185  2980               	goto	u445
  1288  0186  0873               	movf	___lwdiv@divisor+1,w
  1289  0187  0275               	subwf	___lwdiv@dividend+1,w
  1290  0188  1D03               	skipz
  1291  0189  298C               	goto	u455
  1292  018A  0872               	movf	___lwdiv@divisor,w
  1293  018B  0274               	subwf	___lwdiv@dividend,w
  1294  018C                     u455:
  1295  018C  1C03               	skipc
  1296  018D  298F               	goto	u451
  1297  018E  2990               	goto	u450
  1298  018F                     u451:
  1299  018F  2997               	goto	l1232
  1300  0190                     u450:
  1301  0190                     l1228:
  1302  0190  0872               	movf	___lwdiv@divisor,w
  1303  0191  02F4               	subwf	___lwdiv@dividend,f
  1304  0192  0873               	movf	___lwdiv@divisor+1,w
  1305  0193  1C03               	skipc
  1306  0194  03F5               	decf	___lwdiv@dividend+1,f
  1307  0195  02F5               	subwf	___lwdiv@dividend+1,f
  1308  0196                     l1230:
  1309  0196  1477               	bsf	___lwdiv@quotient,0
  1310  0197                     l1232:
  1311  0197  3001               	movlw	1
  1312  0198                     u465:
  1313  0198  1003               	clrc
  1314  0199  0CF3               	rrf	___lwdiv@divisor+1,f
  1315  019A  0CF2               	rrf	___lwdiv@divisor,f
  1316  019B  3EFF               	addlw	-1
  1317  019C  1D03               	skipz
  1318  019D  2998               	goto	u465
  1319  019E                     l1234:
  1320  019E  3001               	movlw	1
  1321  019F  02F9               	subwf	___lwdiv@counter,f
  1322  01A0  1D03               	btfss	3,2
  1323  01A1  29A3               	goto	u471
  1324  01A2  29A4               	goto	u470
  1325  01A3                     u471:
  1326  01A3  297F               	goto	l1226
  1327  01A4                     u470:
  1328  01A4                     l1236:
  1329  01A4  0878               	movf	___lwdiv@quotient+1,w
  1330  01A5  00F3               	movwf	?___lwdiv+1
  1331  01A6  0877               	movf	___lwdiv@quotient,w
  1332  01A7  00F2               	movwf	?___lwdiv
  1333  01A8                     l622:
  1334  01A8  0008               	return
  1335  01A9                     __end_of___lwdiv:
  1336                           
  1337                           	psect	text4
  1338  027E                     __ptext4:	
  1339 ;; *************** function _config *****************
  1340 ;; Defined at:
  1341 ;;		line 113 in file "Lab_05.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		status,2
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _config
  1371  027E                     _config:
  1372  027E                     l1262:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _config: [status,2]
  1375                           
  1376  027E  1683               	bsf	3,5	;RP0=1, select bank1
  1377  027F  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0280  0185               	clrf	5	;volatile
  1379  0281  0189               	clrf	9	;volatile
  1380  0282  0188               	clrf	8	;volatile
  1381  0283  1683               	bsf	3,5	;RP0=1, select bank3
  1382  0284  1703               	bsf	3,6	;RP1=1, select bank3
  1383  0285  0188               	clrf	8	;volatile
  1384  0286  0189               	clrf	9	;volatile
  1385  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0289  0185               	clrf	5	;volatile
  1388  028A  0186               	clrf	6	;volatile
  1389  028B  0187               	clrf	7	;volatile
  1390  028C  0188               	clrf	8	;volatile
  1391  028D  0189               	clrf	9	;volatile
  1392  028E                     l77:
  1393  028E  0008               	return
  1394  028F                     __end_of_config:
  1395                           
  1396                           	psect	text5
  1397  01E5                     __ptext5:	
  1398 ;; *************** function _Texto_USART *****************
  1399 ;; Defined at:
  1400 ;;		line 160 in file "../../LIB/LIB.X/LIB.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  texto           2    2[COMMON] PTR unsigned char 
  1403 ;;		 -> STR_3(8), STR_2(8), text(16), 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  i               1    6[COMMON] unsigned char 
  1406 ;;  temp            1    0        unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         2       0       0       0       0
  1417 ;;      Locals:         1       0       0       0       0
  1418 ;;      Temps:          2       0       0       0       0
  1419 ;;      Totals:         5       0       0       0       0
  1420 ;;Total ram usage:        5 bytes
  1421 ;; Hardware stack levels used: 2
  1422 ;; Hardware stack levels required when called: 1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;;		_texto_Programa
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function _Texto_USART
  1433  01E5                     _Texto_USART:
  1434  01E5                     l1336:	
  1435                           ;incstack = 0
  1436                           ; Regs used in _Texto_USART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1437                           
  1438  01E5                     l1338:
  1439                           
  1440                           ;../../LIB/LIB.X/LIB.c: 162:     char i = 0;
  1441  01E5  01F6               	clrf	Texto_USART@i
  1442                           
  1443                           ;../../LIB/LIB.X/LIB.c: 163:     while(texto[i] != '\0'){
  1444  01E6  2A01               	goto	l1346
  1445  01E7                     l1340:
  1446                           
  1447                           ;../../LIB/LIB.X/LIB.c: 164:         TXREG = texto[i];
  1448  01E7  0876               	movf	Texto_USART@i,w
  1449  01E8  0772               	addwf	Texto_USART@texto,w
  1450  01E9  0084               	movwf	4
  1451  01EA  0873               	movf	Texto_USART@texto+1,w
  1452  01EB  1803               	skipnc
  1453  01EC  0A73               	incf	Texto_USART@texto+1,w
  1454  01ED  00FF               	movwf	btemp+1
  1455  01EE  120A  118A  2217  120A  118A  	fcall	stringtab
  1456  01F3  0099               	movwf	25	;volatile
  1457  01F4                     l1342:
  1458                           
  1459                           ;../../LIB/LIB.X/LIB.c: 165:         i++;
  1460  01F4  3001               	movlw	1
  1461  01F5  00F4               	movwf	??_Texto_USART
  1462  01F6  0874               	movf	??_Texto_USART,w
  1463  01F7  07F6               	addwf	Texto_USART@i,f
  1464  01F8                     l1344:
  1465                           
  1466                           ;../../LIB/LIB.X/LIB.c: 166:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1467  01F8  300D               	movlw	13
  1468  01F9  00F5               	movwf	??_Texto_USART+1
  1469  01FA  30FB               	movlw	251
  1470  01FB  00F4               	movwf	??_Texto_USART
  1471  01FC                     u717:
  1472  01FC  0BF4               	decfsz	??_Texto_USART,f
  1473  01FD  29FC               	goto	u717
  1474  01FE  0BF5               	decfsz	??_Texto_USART+1,f
  1475  01FF  29FC               	goto	u717
  1476  0200  2A01               	nop2
  1477  0201                     l1346:
  1478                           
  1479                           ;../../LIB/LIB.X/LIB.c: 163:     while(texto[i] != '\0'){
  1480  0201  0876               	movf	Texto_USART@i,w
  1481  0202  0772               	addwf	Texto_USART@texto,w
  1482  0203  0084               	movwf	4
  1483  0204  0873               	movf	Texto_USART@texto+1,w
  1484  0205  1803               	skipnc
  1485  0206  0A73               	incf	Texto_USART@texto+1,w
  1486  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0209  00FF               	movwf	btemp+1
  1489  020A  120A  118A  2217  120A  118A  	fcall	stringtab
  1490  020F  3A00               	xorlw	0
  1491  0210  1D03               	skipz
  1492  0211  2A13               	goto	u611
  1493  0212  2A14               	goto	u610
  1494  0213                     u611:
  1495  0213  29E7               	goto	l1340
  1496  0214                     u610:
  1497  0214                     l1348:
  1498                           
  1499                           ;../../LIB/LIB.X/LIB.c: 169:     TXREG = '\n';
  1500  0214  300A               	movlw	10
  1501  0215  0099               	movwf	25	;volatile
  1502  0216                     l225:
  1503  0216  0008               	return
  1504  0217                     __end_of_Texto_USART:
  1505                           
  1506                           	psect	text6
  1507  0269                     __ptext6:	
  1508 ;; *************** function _Config_USART *****************
  1509 ;; Defined at:
  1510 ;;		line 69 in file "../../LIB/LIB.X/LIB.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 1
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _Config_USART
  1540  0269                     _Config_USART:
  1541  0269                     l1268:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _Config_USART: [wreg]
  1544                           
  1545                           
  1546                           ;../../LIB/LIB.X/LIB.c: 71:     TXEN = 1;
  1547  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1548  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1549  026B  1698               	bsf	24,5	;volatile
  1550                           
  1551                           ;../../LIB/LIB.X/LIB.c: 72:     SYNC = 0;
  1552  026C  1218               	bcf	24,4	;volatile
  1553                           
  1554                           ;../../LIB/LIB.X/LIB.c: 73:     SPEN = 1;
  1555  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1556  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1557  026F  1798               	bsf	24,7	;volatile
  1558                           
  1559                           ;../../LIB/LIB.X/LIB.c: 76:     CREN = 1;
  1560  0270  1618               	bsf	24,4	;volatile
  1561                           
  1562                           ;../../LIB/LIB.X/LIB.c: 77:     PIE1bits.RCIE = 1;
  1563  0271  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0272  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0273  168C               	bsf	12,5	;volatile
  1566                           
  1567                           ;../../LIB/LIB.X/LIB.c: 78:     PIR1bits.RCIF = 0;
  1568  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0276  128C               	bcf	12,5	;volatile
  1571  0277                     l1270:
  1572                           
  1573                           ;../../LIB/LIB.X/LIB.c: 79:     SPBRG=12;
  1574  0277  300C               	movlw	12
  1575  0278  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0279  1303               	bcf	3,6	;RP1=0, select bank1
  1577  027A  0099               	movwf	25	;volatile
  1578                           
  1579                           ;../../LIB/LIB.X/LIB.c: 80:     TRISC = 0b10000000;
  1580  027B  3080               	movlw	128
  1581  027C  0087               	movwf	7	;volatile
  1582  027D                     l188:
  1583  027D  0008               	return
  1584  027E                     __end_of_Config_USART:
  1585                           
  1586                           	psect	text7
  1587  028F                     __ptext7:	
  1588 ;; *************** function _Config_PORTB *****************
  1589 ;; Defined at:
  1590 ;;		line 28 in file "../../LIB/LIB.X/LIB.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		None
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0
  1607 ;;      Totals:         0       0       0       0       0
  1608 ;;Total ram usage:        0 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _Config_PORTB
  1620  028F                     _Config_PORTB:
  1621  028F                     l1272:	
  1622                           ;incstack = 0
  1623                           ; Regs used in _Config_PORTB: []
  1624                           
  1625                           
  1626                           ;../../LIB/LIB.X/LIB.c: 30:     OPTION_REGbits.nRBPU = 0;
  1627  028F  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0290  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0291  1381               	bcf	1,7	;volatile
  1630                           
  1631                           ;../../LIB/LIB.X/LIB.c: 31:     WPUBbits.WPUB0=1;
  1632  0292  1415               	bsf	21,0	;volatile
  1633                           
  1634                           ;../../LIB/LIB.X/LIB.c: 32:     WPUBbits.WPUB1=1;
  1635  0293  1495               	bsf	21,1	;volatile
  1636                           
  1637                           ;../../LIB/LIB.X/LIB.c: 35:     IOCB0 = 1;
  1638  0294  1416               	bsf	22,0	;volatile
  1639                           
  1640                           ;../../LIB/LIB.X/LIB.c: 36:     IOCB1 = 1;
  1641  0295  1496               	bsf	22,1	;volatile
  1642                           
  1643                           ;../../LIB/LIB.X/LIB.c: 37:     RB0 = 0;
  1644  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0298  1006               	bcf	6,0	;volatile
  1647                           
  1648                           ;../../LIB/LIB.X/LIB.c: 38:     RB1 = 0;
  1649  0299  1086               	bcf	6,1	;volatile
  1650                           
  1651                           ;../../LIB/LIB.X/LIB.c: 39:     RBIE = 1;
  1652  029A  158B               	bsf	11,3	;volatile
  1653  029B                     l182:
  1654  029B  0008               	return
  1655  029C                     __end_of_Config_PORTB:
  1656                           
  1657                           	psect	text8
  1658  02A4                     __ptext8:	
  1659 ;; *************** function _Config_Oscilador *****************
  1660 ;; Defined at:
  1661 ;;		line 7 in file "../../LIB/LIB.X/LIB.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _Config_Oscilador
  1691  02A4                     _Config_Oscilador:
  1692  02A4                     l1264:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _Config_Oscilador: [wreg]
  1695                           
  1696                           
  1697                           ;../../LIB/LIB.X/LIB.c: 9:     IRCF0 = 1;
  1698  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  1699  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  1700  02A6  160F               	bsf	15,4	;volatile
  1701                           
  1702                           ;../../LIB/LIB.X/LIB.c: 10:     IRCF1 = 1;
  1703  02A7  168F               	bsf	15,5	;volatile
  1704                           
  1705                           ;../../LIB/LIB.X/LIB.c: 11:     IRCF2 = 1;
  1706  02A8  170F               	bsf	15,6	;volatile
  1707  02A9                     l1266:
  1708                           
  1709                           ;../../LIB/LIB.X/LIB.c: 12:     INTCON = 0b11101000;
  1710  02A9  30E8               	movlw	232
  1711  02AA  008B               	movwf	11	;volatile
  1712  02AB                     l176:
  1713  02AB  0008               	return
  1714  02AC                     __end_of_Config_Oscilador:
  1715                           
  1716                           	psect	text9
  1717  0244                     __ptext9:	
  1718 ;; *************** function _isr *****************
  1719 ;; Defined at:
  1720 ;;		line 64 in file "Lab_05.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0
  1736 ;;      Temps:          2       0       0       0       0
  1737 ;;      Totals:         2       0       0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		Interrupt level 1
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _isr
  1749  0244                     _isr:
  1750  0244                     i1l1350:
  1751                           
  1752                           ;Lab_05.c: 66: 
  1753  0244  1C0B               	btfss	11,0	;volatile
  1754  0245  2A47               	goto	u62_21
  1755  0246  2A48               	goto	u62_20
  1756  0247                     u62_21:
  1757  0247  2A57               	goto	i1l59
  1758  0248                     u62_20:
  1759  0248                     i1l1352:
  1760                           
  1761                           ;Lab_05.c: 67: 
  1762  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1764  024A  1806               	btfsc	6,0	;volatile
  1765  024B  2A4D               	goto	u63_21
  1766  024C  2A4E               	goto	u63_20
  1767  024D                     u63_21:
  1768  024D  2A50               	goto	i1l60
  1769  024E                     u63_20:
  1770  024E                     i1l1354:
  1771                           
  1772                           ;Lab_05.c: 68:     TRISE = 0;
  1773  024E  01B6               	clrf	_Boton_0
  1774  024F  0AB6               	incf	_Boton_0,f
  1775  0250                     i1l60:	
  1776                           ;Lab_05.c: 69:     TRISD = 0;
  1777                           
  1778                           
  1779                           ;Lab_05.c: 70: 
  1780  0250  1886               	btfsc	6,1	;volatile
  1781  0251  2A53               	goto	u64_21
  1782  0252  2A54               	goto	u64_20
  1783  0253                     u64_21:
  1784  0253  2A56               	goto	i1l61
  1785  0254                     u64_20:
  1786  0254                     i1l1356:
  1787                           
  1788                           ;Lab_05.c: 71:     ANSEL = 0;
  1789  0254  01B5               	clrf	_Boton_1
  1790  0255  0AB5               	incf	_Boton_1,f
  1791  0256                     i1l61:	
  1792                           ;Lab_05.c: 72:     ANSELH = 0;
  1793                           
  1794                           
  1795                           ;Lab_05.c: 73: 
  1796  0256  100B               	bcf	11,0	;volatile
  1797  0257                     i1l59:	
  1798                           ;Lab_05.c: 74: 
  1799                           
  1800                           
  1801                           ;Lab_05.c: 77:     PORTC = 0;
  1802  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0259  1E8C               	btfss	12,5	;volatile
  1805  025A  2A5C               	goto	u65_21
  1806  025B  2A5D               	goto	u65_20
  1807  025C                     u65_21:
  1808  025C  2A62               	goto	i1l63
  1809  025D                     u65_20:
  1810  025D                     i1l1358:
  1811                           
  1812                           ;Lab_05.c: 79:     PORTE = 0;
  1813  025D  081A               	movf	26,w	;volatile
  1814  025E  0085               	movwf	5	;volatile
  1815                           
  1816                           ;Lab_05.c: 80: }
  1817  025F  3001               	movlw	1
  1818  0260  0689               	xorwf	9,f
  1819  0261                     i1l1360:
  1820  0261  128C               	bcf	12,5	;volatile
  1821  0262                     i1l63:
  1822  0262  0871               	movf	??_isr+1,w
  1823  0263  008A               	movwf	10
  1824  0264  0E70               	swapf	??_isr,w
  1825  0265  0083               	movwf	3
  1826  0266  0EFE               	swapf	btemp,f
  1827  0267  0E7E               	swapf	btemp,w
  1828  0268  0009               	retfie
  1829  0269                     __end_of_isr:
  1830  007E                     btemp	set	126	;btemp
  1831  007E                     wtemp0	set	126
  1832                           
  1833                           	psect	intentry
  1834  0004                     __pintentry:	
  1835                           ;incstack = 0
  1836                           ; Regs used in _isr: [wreg]
  1837                           
  1838  0004                     interrupt_function:
  1839  007E                     saved_w	set	btemp
  1840  0004  00FE               	movwf	btemp
  1841  0005  0E03               	swapf	3,w
  1842  0006  00F0               	movwf	??_isr
  1843  0007  080A               	movf	10,w
  1844  0008  00F1               	movwf	??_isr+1
  1845  0009  120A  118A  2A44   	ljmp	_isr
  1846                           
  1847                           	psect	config
  1848                           
  1849                           ;Config register CONFIG1 @ 0x2007
  1850                           ;	Oscillator Selection bits
  1851                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1852                           ;	Watchdog Timer Enable bit
  1853                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1854                           ;	Power-up Timer Enable bit
  1855                           ;	PWRTE = OFF, PWRT disabled
  1856                           ;	RE3/MCLR pin function select bit
  1857                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1858                           ;	Code Protection bit
  1859                           ;	CP = OFF, Program memory code protection is disabled
  1860                           ;	Data Code Protection bit
  1861                           ;	CPD = OFF, Data memory code protection is disabled
  1862                           ;	Brown Out Reset Selection bits
  1863                           ;	BOREN = OFF, BOR disabled
  1864                           ;	Internal External Switchover bit
  1865                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1866                           ;	Fail-Safe Clock Monitor Enabled bit
  1867                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1868                           ;	Low Voltage Programming Enable bit
  1869                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1870                           ;	In-Circuit Debugger Mode bit
  1871                           ;	DEBUG = 0x1, unprogrammed default
  1872  2007                     	org	8199
  1873  2007  20D4               	dw	8404
  1874                           
  1875                           ;Config register CONFIG2 @ 0x2008
  1876                           ;	Brown-out Reset Selection bit
  1877                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1878                           ;	Flash Program Memory Self Write Enable bits
  1879                           ;	WRT = OFF, Write protection off
  1880  2008                     	org	8200
  1881  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    10
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     20      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> text(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Texto_USART@texto	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[8]), STR_2(CODE[8]), text(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1530
                                             17 BANK0      3     3      0
                   _Config_Oscilador
                       _Config_PORTB
                       _Config_USART
                        _Texto_USART
                             _config
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Texto_USART                                          6     4      2     319
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_PORTB                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Oscilador                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Oscilador
   _Config_PORTB
   _Config_USART
   _Texto_USART
   _config
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 18 04:33:49 2021

                        pc 0002                         l77 028E                         fsr 0004  
                      l225 0216                        l182 029B                        l176 02AB  
                      l346 0105                        l188 027D                        l622 01A8  
                      l632 01E4                        _RA0 0028                        _RB0 0030  
                      _RB1 0031                        _RE0 0048                        u410 016D  
                      u411 016C                        u500 01C3                        u501 01C2  
                      u430 017F                        u510 01CD                        _PS0 0408  
                      u431 017E                        u511 01CC                        _PS1 0409  
                      u600 0101                        _PS2 040A                        u425 0171  
                      u601 0100                        u610 0214                        u450 0190  
                      u530 01E0                        u611 0213                        u451 018F  
                      u531 01DF                        u515 01C9                        u540 002A  
                      u445 0180                        u525 01D4                        u541 0029  
                      u470 01A4                        u550 0064                        u471 01A3  
                      u455 018C                        u551 0063                        u480 01B1  
                      u560 008A                        u465 0198                        u481 01B0  
                      u561 0089                        u570 0095                        u571 0094  
                      u707 015A                        u580 009B                        u660 0121  
                      u717 01FC                        u581 009A                        u565 0086  
                      u661 0120                        u590 00EF                        u670 0125  
                      u495 01B5                        u591 00EE                        u671 0124  
                      _PSA 040B                        u680 0131                        u681 0130  
                      u690 0135                        u691 0134                        _isr 0244  
                      fsr0 0004                        indf 0000                       l1220 0170  
                     l1230 0196                       l1222 0177                       l1214 0165  
                     l1310 0095                       l1232 0197                       l1224 017B  
                     l1216 0167                       l1240 01A9                       l1320 00DB  
                     l1312 009B                       l1304 006F                       l1234 019E  
                     l1226 017F                       l1218 016D                       l1250 01C3  
                     l1242 01B1                       l1322 00E2                       l1314 00A2  
                     l1340 01E7                       l1228 0190                       l1236 01A4  
                     l1252 01CD                       l1244 01B4                       l1324 00E6  
                     l1316 00A6                       l1308 008B                       l1270 0277  
                     l1342 01F4                       l1262 027E                       l1254 01D3  
                     l1246 01BB                       l1318 00AB                       l1326 00EF  
                     l1264 02A4                       l1272 028F                       l1344 01F8  
                     l1336 01E5                       l1256 01DA                       l1248 01BF  
                     l1328 0101                       l1280 0031                       l1266 02A9  
                     l1346 0201                       l1338 01E5                       l1258 01E0  
                     l1290 005C                       l1282 0036                       l1274 001F  
                     l1370 0121                       l1362 0106                       l1268 0269  
                     l1348 0214                       l1292 0060                       l1276 0024  
                     l1380 0131                       l1372 0125                       l1364 010B  
                     l1294 0064                       l1438 0049                       l1286 0037  
                     l1278 002A                       l1390 0149                       l1382 0135  
                     l1374 0129                       l1366 0110                       l1296 0068  
                     l1288 0054                       l1392 0152                       l1376 012A  
                     l1368 011A                       l1298 006D                       l1378 012C  
                     l1388 0138                       _ADIF 0066                       ?_isr 0070  
                     STR_1 0241                       STR_2 0231                       STR_3 0239  
                     _CREN 00C4                       _T0CS 040D                       _RBIE 005B  
                     _RBIF 0058                       i1l60 0250                       _RCIF 0065  
                     i1l61 0256                       i1l63 0262                       i1l59 0257  
                     _TMR0 0001                       _SPEN 00C7                       _TXEN 04C5  
                     _SYNC 04C4                       _main 0106                       _text 0037  
                     btemp 007E                       start 000C                      ??_isr 0070  
                    ?_main 0070                      _ANSEL 0188                      _IOCB0 04B0  
                    _IOCB1 04B1                      _IRCF0 047C                      _IRCF1 047D  
                    _IRCF2 047E            __end_of___lwdiv 01A9            __end_of___lwmod 01E5  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u62_20 0248                      u62_21 0247  
                    u63_20 024E                      u63_21 024D                      u64_20 0254  
                    u64_21 0253                      u65_20 025D                      u65_21 025C  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
          __end_of_dpowers 0231                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0106       __end_of_Config_PORTB 029C  
     __end_of_Config_USART 027E            __initialization 000F               __end_of_main 0165  
                   ??_main 0031                     _ADRESH 001E                     _ANSELH 0189  
                   i1l1350 0244                     i1l1360 0261                     i1l1352 0248  
                   i1l1354 024E                     i1l1356 0254                     i1l1358 025D  
                   _INTCON 000B   __end_of_Config_Oscilador 02AC                  ??___lwdiv 0076  
                ??___lwmod 007A                     _config 027E                     saved_w 007E  
                ??_sprintf 0027    __end_of__initialization 0018              ??_Texto_USART 0074  
           __pcstackCOMMON 0070             _OPTION_REGbits 0081                 __pbssBANK0 0034  
    __size_of_Config_PORTB 000D      __size_of_Config_USART 0015                 __pmaintext 0106  
      __end_of_Texto_USART 0217                 __pintentry 0004                    ?_config 0070  
             _Config_PORTB 028F               _Config_USART 0269                 __stringtab 0217  
                  _Boton_0 0036                    _Boton_1 0035                    ___lwdiv 0165  
                  ___lwmod 01A9            __size_of_config 0011                    __ptext1 001C  
                  __ptext2 01A9                    __ptext3 0165                    __ptext4 027E  
                  __ptext5 01E5                    __ptext6 0269                    __ptext7 028F  
                  __ptext8 02A4                    __ptext9 0244                    _dpowers 0227  
         Texto_USART@texto 0072               __size_of_isr 0025                    _sprintf 001C  
                  clrloop0 029D       end_of_initialization 0018                _Texto_USART 01E5  
        ?_Config_Oscilador 0070                  _PORTCbits 0007         ??_Config_Oscilador 0072  
           __end_of_config 028F        start_initialization 000F                __end_of_isr 0269  
                 ??_config 0072                  ___latbits 0002              __pcstackBANK0 0020  
              sprintf@flag 002B                sprintf@prec 002C           ___lwdiv@dividend 0074  
                 ?___lwdiv 0072                   ?___lwmod 0020                  __pstrings 0217  
         ___lwdiv@quotient 0077                   ?_sprintf 0024          interrupt_function 0004  
             ?_Texto_USART 0072                  clear_ram0 029C                   _PIE1bits 008C  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 0226  
               _ADCON1bits 009F                   _WPUBbits 0095  __size_of_Config_Oscilador 0008  
                 _Contador 0034           __size_of___lwdiv 0044           __size_of___lwmod 003C  
       __end_of__stringtab 0227                 sprintf@val 002D            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079           __size_of_sprintf 00EA              __size_of_main 005F  
               _INTCONbits 000B              ?_Config_PORTB 0070              ?_Config_USART 0070  
                 intlevel1 0000                  sprintf@ap 002A                  sprintf@sp 002F  
         ___lwmod@dividend 0022                  stringcode 0221       __size_of_Texto_USART 0032  
                 sprintf@c 0030                   sprintf@f 0024            ___lwmod@divisor 0020  
           ??_Config_PORTB 0072             ??_Config_USART 0072            ___lwmod@counter 007B  
             Texto_USART@i 0076                   stringdir 0221                   stringtab 0217  
         _Config_Oscilador 02A4  
