

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 18 13:44:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	strings
   294  0216                     __pstrings:
   295  0216                     stringtab:
   296  0216                     __stringtab:
   297                           
   298                           ;	String table - string pointers are 1 byte each
   299  0216  1BFF               	btfsc	btemp+1,7
   300  0217  2A20               	ljmp	stringcode
   301  0218  1383               	bcf	3,7
   302  0219  187F               	btfsc	btemp+1,0
   303  021A  1783               	bsf	3,7
   304  021B  0800               	movf	0,w
   305  021C  0A84               	incf	4,f
   306  021D  1903               	skipnz
   307  021E  0AFF               	incf	btemp+1,f
   308  021F  0008               	return
   309  0220                     stringcode:
   310  0220                     stringdir:
   311  0220  3002               	movlw	high stringdir
   312  0221  008A               	movwf	10
   313  0222  0804               	movf	4,w
   314  0223  0A84               	incf	4,f
   315  0224  0782               	addwf	2,f
   316  0225                     __stringbase:
   317  0225  3400               	retlw	0
   318  0226                     __end_of__stringtab:
   319  0226                     _dpowers:
   320  0226  3401               	retlw	1
   321  0227  3400               	retlw	0
   322  0228  340A               	retlw	10
   323  0229  3400               	retlw	0
   324  022A  3464               	retlw	100
   325  022B  3400               	retlw	0
   326  022C  34E8               	retlw	232
   327  022D  3403               	retlw	3
   328  022E  3410               	retlw	16
   329  022F  3427               	retlw	39
   330  0230                     __end_of_dpowers:
   331  0007                     _PORTCbits	set	7
   332  0019                     _TXREG	set	25
   333  001E                     _ADRESH	set	30
   334  000C                     _PIR1bits	set	12
   335  000B                     _INTCONbits	set	11
   336  001F                     _ADCON0bits	set	31
   337  0001                     _TMR0	set	1
   338  000B                     _INTCON	set	11
   339  0009                     _PORTE	set	9
   340  0008                     _PORTD	set	8
   341  0007                     _PORTC	set	7
   342  0006                     _PORTB	set	6
   343  001A                     _RCREG	set	26
   344  0005                     _PORTA	set	5
   345  0028                     _RA0	set	40
   346  00C4                     _CREN	set	196
   347  00C7                     _SPEN	set	199
   348  0066                     _ADIF	set	102
   349  005B                     _RBIE	set	91
   350  0048                     _RE0	set	72
   351  0065                     _RCIF	set	101
   352  0031                     _RB1	set	49
   353  0030                     _RB0	set	48
   354  0058                     _RBIF	set	88
   355  0086                     _TRISB	set	134
   356  0087                     _TRISC	set	135
   357  0099                     _SPBRG	set	153
   358  008C                     _PIE1bits	set	140
   359  009F                     _ADCON1bits	set	159
   360  0095                     _WPUBbits	set	149
   361  0081                     _OPTION_REGbits	set	129
   362  0088                     _TRISD	set	136
   363  0089                     _TRISE	set	137
   364  0085                     _TRISA	set	133
   365  04C4                     _SYNC	set	1220
   366  04C5                     _TXEN	set	1221
   367  04B1                     _IOCB1	set	1201
   368  04B0                     _IOCB0	set	1200
   369  040B                     _PSA	set	1035
   370  040D                     _T0CS	set	1037
   371  040A                     _PS2	set	1034
   372  0409                     _PS1	set	1033
   373  0408                     _PS0	set	1032
   374  047E                     _IRCF2	set	1150
   375  047D                     _IRCF1	set	1149
   376  047C                     _IRCF0	set	1148
   377  0189                     _ANSELH	set	393
   378  0188                     _ANSEL	set	392
   379  0230                     STR_2:
   380  0230  3450               	retlw	80	;'P'
   381  0231  344F               	retlw	79	;'O'
   382  0232  3454               	retlw	84	;'T'
   383  0233  3420               	retlw	32	;' '
   384  0234  3431               	retlw	49	;'1'
   385  0235  343A               	retlw	58	;':'
   386  0236  3420               	retlw	32	;' '
   387  0237  3400               	retlw	0
   388  0238                     STR_3:
   389  0238  3450               	retlw	80	;'P'
   390  0239  344F               	retlw	79	;'O'
   391  023A  3454               	retlw	84	;'T'
   392  023B  3420               	retlw	32	;' '
   393  023C  3432               	retlw	50	;'2'
   394  023D  343A               	retlw	58	;':'
   395  023E  3420               	retlw	32	;' '
   396  023F  3400               	retlw	0
   397  0240                     STR_1:
   398  0240  3425               	retlw	37	;'%'
   399  0241  3464               	retlw	100	;'d'
   400  0242  3400               	retlw	0
   401                           
   402                           	psect	cinit
   403  000F                     start_initialization:	
   404                           ; #config settings
   405                           
   406  000F                     __initialization:
   407                           
   408                           ; Clear objects allocated to BANK0
   409  000F  1383               	bcf	3,7	;select IRP bank0
   410  0010  3034               	movlw	low __pbssBANK0
   411  0011  0084               	movwf	4
   412  0012  3047               	movlw	low (__pbssBANK0+19)
   413  0013  120A  118A  229B  120A  118A  	fcall	clear_ram0
   414  0018                     end_of_initialization:	
   415                           ;End of C runtime variable initialization code
   416                           
   417  0018                     __end_of__initialization:
   418  0018  0183               	clrf	3
   419  0019  120A  118A  2906   	ljmp	_main	;jump to C main() function
   420                           
   421                           	psect	bssBANK0
   422  0034                     __pbssBANK0:
   423  0034                     _Contador:
   424  0034                     	ds	1
   425  0035                     _Boton_1:
   426  0035                     	ds	1
   427  0036                     _Boton_0:
   428  0036                     	ds	1
   429  0037                     _text:
   430  0037                     	ds	16
   431                           
   432                           	psect	clrtext
   433  029B                     clear_ram0:	
   434                           ;	Called with FSR containing the base address, and
   435                           ;	W with the last address+1
   436                           
   437  029B  0064               	clrwdt	;clear the watchdog before getting into this loop
   438  029C                     clrloop0:
   439  029C  0180               	clrf	0	;clear RAM location pointed to by FSR
   440  029D  0A84               	incf	4,f	;increment pointer
   441  029E  0604               	xorwf	4,w	;XOR with final address
   442  029F  1903               	btfsc	3,2	;have we reached the end yet?
   443  02A0  3400               	retlw	0	;all done for this memory range, return
   444  02A1  0604               	xorwf	4,w	;XOR again to restore value
   445  02A2  2A9C               	goto	clrloop0	;do the next byte
   446                           
   447                           	psect	cstackCOMMON
   448  0070                     __pcstackCOMMON:
   449  0070                     ?_config:
   450  0070                     ?_Config_Oscilador:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_Config_USART:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_Config_PORTB:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_isr:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ??_isr:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0070                     	ds	2
   471  0072                     ??_config:
   472  0072                     ??_Config_Oscilador:	
   473                           ; 1 bytes @ 0x2
   474                           
   475  0072                     ??_Config_USART:	
   476                           ; 1 bytes @ 0x2
   477                           
   478  0072                     ??_Config_PORTB:	
   479                           ; 1 bytes @ 0x2
   480                           
   481  0072                     ?_Texto_USART:	
   482                           ; 1 bytes @ 0x2
   483                           
   484  0072                     ?___lwdiv:	
   485                           ; 1 bytes @ 0x2
   486                           
   487  0072                     Texto_USART@texto:	
   488                           ; 2 bytes @ 0x2
   489                           
   490  0072                     ___lwdiv@divisor:	
   491                           ; 2 bytes @ 0x2
   492                           
   493                           
   494                           ; 2 bytes @ 0x2
   495  0072                     	ds	2
   496  0074                     ??_Texto_USART:
   497  0074                     ___lwdiv@dividend:	
   498                           ; 1 bytes @ 0x4
   499                           
   500                           
   501                           ; 2 bytes @ 0x4
   502  0074                     	ds	2
   503  0076                     ??___lwdiv:
   504  0076                     Texto_USART@i:	
   505                           ; 1 bytes @ 0x6
   506                           
   507                           
   508                           ; 1 bytes @ 0x6
   509  0076                     	ds	1
   510  0077                     ___lwdiv@quotient:
   511                           
   512                           ; 2 bytes @ 0x7
   513  0077                     	ds	2
   514  0079                     ___lwdiv@counter:
   515                           
   516                           ; 1 bytes @ 0x9
   517  0079                     	ds	1
   518  007A                     ??___lwmod:
   519                           
   520                           ; 1 bytes @ 0xA
   521  007A                     	ds	1
   522  007B                     ___lwmod@counter:
   523                           
   524                           ; 1 bytes @ 0xB
   525  007B                     	ds	1
   526                           
   527                           	psect	cstackBANK0
   528  0020                     __pcstackBANK0:
   529  0020                     ?___lwmod:
   530  0020                     ___lwmod@divisor:	
   531                           ; 2 bytes @ 0x0
   532                           
   533                           
   534                           ; 2 bytes @ 0x0
   535  0020                     	ds	2
   536  0022                     ___lwmod@dividend:
   537                           
   538                           ; 2 bytes @ 0x2
   539  0022                     	ds	2
   540  0024                     ?_sprintf:
   541  0024                     sprintf@f:	
   542                           ; 2 bytes @ 0x4
   543                           
   544                           
   545                           ; 1 bytes @ 0x4
   546  0024                     	ds	3
   547  0027                     ??_sprintf:
   548                           
   549                           ; 1 bytes @ 0x7
   550  0027                     	ds	3
   551  002A                     sprintf@ap:
   552                           
   553                           ; 1 bytes @ 0xA
   554  002A                     	ds	1
   555  002B                     sprintf@flag:
   556                           
   557                           ; 1 bytes @ 0xB
   558  002B                     	ds	1
   559  002C                     sprintf@prec:
   560                           
   561                           ; 1 bytes @ 0xC
   562  002C                     	ds	1
   563  002D                     sprintf@val:
   564                           
   565                           ; 2 bytes @ 0xD
   566  002D                     	ds	2
   567  002F                     sprintf@sp:
   568                           
   569                           ; 1 bytes @ 0xF
   570  002F                     	ds	1
   571  0030                     sprintf@c:
   572                           
   573                           ; 1 bytes @ 0x10
   574  0030                     	ds	1
   575  0031                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x11
   578  0031                     	ds	3
   579                           
   580                           	psect	maintext
   581  0106                     __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 86 in file "Lab_05.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : B00/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       3       0       0       0
   604 ;;      Totals:         0       3       0       0       0
   605 ;;Total ram usage:        3 bytes
   606 ;; Hardware stack levels required when called: 3
   607 ;; This function calls:
   608 ;;		_Config_Oscilador
   609 ;;		_Config_PORTB
   610 ;;		_Config_USART
   611 ;;		_Texto_USART
   612 ;;		_config
   613 ;;		_sprintf
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           
   620                           ;psect for function _main
   621  0106                     _main:
   622  0106                     l1362:	
   623                           ;incstack = 0
   624                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   625                           
   626  0106  120A  118A  227D  120A  118A  	fcall	_config
   627  010B                     l1364:
   628  010B  120A  118A  22A3  120A  118A  	fcall	_Config_Oscilador
   629  0110                     l1366:
   630  0110  120A  118A  2268  120A  118A  	fcall	_Config_USART
   631  0115  120A  118A  228E  120A  118A  	fcall	_Config_PORTB
   632  011A                     l1368:
   633  011A  1283               	bcf	3,5	;RP0=0, select bank0
   634  011B  1303               	bcf	3,6	;RP1=0, select bank0
   635  011C  0336               	decf	_Boton_0,w
   636  011D  1D03               	btfss	3,2
   637  011E  2920               	goto	u661
   638  011F  2921               	goto	u660
   639  0120                     u661:
   640  0120  292C               	goto	l1378
   641  0121                     u660:
   642  0121                     l1370:
   643  0121  1C06               	btfss	6,0	;volatile
   644  0122  2924               	goto	u671
   645  0123  2925               	goto	u670
   646  0124                     u671:
   647  0124  292C               	goto	l1378
   648  0125                     u670:
   649  0125                     l1372:
   650  0125  3001               	movlw	1
   651  0126  00B1               	movwf	??_main
   652  0127  0831               	movf	??_main,w
   653  0128  07B4               	addwf	_Contador,f
   654  0129                     l1374:
   655  0129  01B6               	clrf	_Boton_0
   656  012A                     l1376:
   657  012A  01B5               	clrf	_Boton_1
   658  012B  2938               	goto	l1388
   659  012C                     l1378:
   660  012C  0335               	decf	_Boton_1,w
   661  012D  1D03               	btfss	3,2
   662  012E  2930               	goto	u681
   663  012F  2931               	goto	u680
   664  0130                     u681:
   665  0130  2938               	goto	l1388
   666  0131                     u680:
   667  0131                     l1380:
   668  0131  1C86               	btfss	6,1	;volatile
   669  0132  2934               	goto	u691
   670  0133  2935               	goto	u690
   671  0134                     u691:
   672  0134  2938               	goto	l1388
   673  0135                     u690:
   674  0135                     l1382:
   675  0135  3001               	movlw	1
   676  0136  02B4               	subwf	_Contador,f
   677  0137  2929               	goto	l1374
   678  0138                     l1388:
   679  0138  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   680  0139  00B1               	movwf	??_main
   681  013A  0831               	movf	??_main,w
   682  013B  00A4               	movwf	sprintf@f
   683  013C  0834               	movf	_Contador,w
   684  013D  00B2               	movwf	??_main+1
   685  013E  01B3               	clrf	??_main+2
   686  013F  0832               	movf	??_main+1,w
   687  0140  00A5               	movwf	?_sprintf+1
   688  0141  0833               	movf	??_main+2,w
   689  0142  00A6               	movwf	?_sprintf+2
   690  0143  3037               	movlw	(low (_text| 0))& (0+255)
   691  0144  120A  118A  201C  120A  118A  	fcall	_sprintf
   692  0149                     l1390:
   693  0149  3037               	movlw	(low (_text| 0))& (0+255)
   694  014A  00F2               	movwf	Texto_USART@texto
   695  014B  3000               	movlw	0
   696  014C  00F3               	movwf	Texto_USART@texto+1
   697  014D  120A  118A  21E4  120A  118A  	fcall	_Texto_USART
   698  0152                     l1392:
   699  0152  300B               	movlw	11
   700  0153  1283               	bcf	3,5	;RP0=0, select bank0
   701  0154  1303               	bcf	3,6	;RP1=0, select bank0
   702  0155  00B3               	movwf	??_main+2
   703  0156  3026               	movlw	38
   704  0157  00B2               	movwf	??_main+1
   705  0158  305D               	movlw	93
   706  0159  00B1               	movwf	??_main
   707  015A                     u707:
   708  015A  0BB1               	decfsz	??_main,f
   709  015B  295A               	goto	u707
   710  015C  0BB2               	decfsz	??_main+1,f
   711  015D  295A               	goto	u707
   712  015E  0BB3               	decfsz	??_main+2,f
   713  015F  295A               	goto	u707
   714  0160  291A               	goto	l1368
   715  0161  120A  118A  280C   	ljmp	start
   716  0164                     __end_of_main:
   717                           
   718                           	psect	text1
   719  001C                     __ptext1:	
   720 ;; *************** function _sprintf *****************
   721 ;; Defined at:
   722 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  sp              1    wreg     PTR unsigned char 
   725 ;;		 -> text(16), 
   726 ;;  f               1    4[BANK0 ] PTR const unsigned char 
   727 ;;		 -> STR_1(3), 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  sp              1   15[BANK0 ] PTR unsigned char 
   730 ;;		 -> text(16), 
   731 ;;  tmpval          4    0        struct .
   732 ;;  val             2   13[BANK0 ] unsigned int 
   733 ;;  cp              2    0        PTR const unsigned char 
   734 ;;  len             2    0        unsigned int 
   735 ;;  c               1   16[BANK0 ] unsigned char 
   736 ;;  prec            1   12[BANK0 ] char 
   737 ;;  flag            1   11[BANK0 ] unsigned char 
   738 ;;  ap              1   10[BANK0 ] PTR void [1]
   739 ;;		 -> ?_sprintf(2), 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  2    4[BANK0 ] int 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       3       0       0       0
   750 ;;      Locals:         0       7       0       0       0
   751 ;;      Temps:          0       3       0       0       0
   752 ;;      Totals:         0      13       0       0       0
   753 ;;Total ram usage:       13 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 2
   756 ;; This function calls:
   757 ;;		___lwdiv
   758 ;;		___lwmod
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _sprintf
   766  001C                     _sprintf:
   767                           
   768                           ;incstack = 0
   769                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   770                           ;sprintf@sp stored from wreg
   771  001C  1283               	bcf	3,5	;RP0=0, select bank0
   772  001D  1303               	bcf	3,6	;RP1=0, select bank0
   773  001E  00AF               	movwf	sprintf@sp
   774  001F                     l1274:
   775                           
   776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   777  001F  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   778  0020  00A7               	movwf	??_sprintf
   779  0021  0827               	movf	??_sprintf,w
   780  0022  00AA               	movwf	sprintf@ap
   781                           
   782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   783  0023  28EF               	goto	l1326
   784  0024                     l1276:
   785                           
   786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   787  0024  3025               	movlw	37
   788  0025  0630               	xorwf	sprintf@c,w
   789  0026  1903               	btfsc	3,2
   790  0027  2829               	goto	u541
   791  0028  282A               	goto	u540
   792  0029                     u541:
   793  0029  2836               	goto	l1282
   794  002A                     u540:
   795  002A                     l1278:
   796                           
   797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   798  002A  0830               	movf	sprintf@c,w
   799  002B  00A7               	movwf	??_sprintf
   800  002C  082F               	movf	sprintf@sp,w
   801  002D  0084               	movwf	4
   802  002E  0827               	movf	??_sprintf,w
   803  002F  1383               	bcf	3,7	;select IRP bank0
   804  0030  0080               	movwf	0
   805  0031                     l1280:
   806  0031  3001               	movlw	1
   807  0032  00A7               	movwf	??_sprintf
   808  0033  0827               	movf	??_sprintf,w
   809  0034  07AF               	addwf	sprintf@sp,f
   810                           
   811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
   812  0035  28EF               	goto	l1326
   813  0036                     l1282:
   814                           
   815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   816  0036  01AB               	clrf	sprintf@flag
   817  0037                     l1286:	
   818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   819                           
   820  0037  3001               	movlw	1
   821  0038  07A4               	addwf	sprintf@f,f
   822  0039  30FF               	movlw	-1
   823  003A  0724               	addwf	sprintf@f,w
   824  003B  0084               	movwf	4
   825  003C  120A  118A  2220  120A  118A  	fcall	stringdir
   826  0041  00B0               	movwf	sprintf@c
   827  0042  00A7               	movwf	??_sprintf
   828  0043  01A8               	clrf	??_sprintf+1
   829                           
   830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   831                           ; Switch size 1, requested type "simple"
   832                           ; Number of cases is 1, Range of values is 0 to 0
   833                           ; switch strategies available:
   834                           ; Name         Instructions Cycles
   835                           ; simple_byte            4     3 (average)
   836                           ; direct_byte           11     8 (fixed)
   837                           ; jumptable            260     6 (fixed)
   838                           ;	Chosen strategy is simple_byte
   839  0044  0828               	movf	??_sprintf+1,w
   840  0045  3A00               	xorlw	0	; case 0
   841  0046  1903               	skipnz
   842  0047  2849               	goto	l1438
   843  0048  28EF               	goto	l1326
   844  0049                     l1438:
   845                           
   846                           ; Switch size 1, requested type "simple"
   847                           ; Number of cases is 3, Range of values is 0 to 105
   848                           ; switch strategies available:
   849                           ; Name         Instructions Cycles
   850                           ; simple_byte           10     6 (average)
   851                           ; jumptable            260     6 (fixed)
   852                           ;	Chosen strategy is simple_byte
   853  0049  0827               	movf	??_sprintf,w
   854  004A  3A00               	xorlw	0	; case 0
   855  004B  1903               	skipnz
   856  004C  2901               	goto	l1328
   857  004D  3A64               	xorlw	100	; case 100
   858  004E  1903               	skipnz
   859  004F  2854               	goto	l1288
   860  0050  3A0D               	xorlw	13	; case 105
   861  0051  1903               	skipnz
   862  0052  2854               	goto	l1288
   863  0053  28EF               	goto	l1326
   864  0054                     l1288:
   865                           
   866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   867  0054  082A               	movf	sprintf@ap,w
   868  0055  0084               	movwf	4
   869  0056  1383               	bcf	3,7	;select IRP bank0
   870  0057  0800               	movf	0,w
   871  0058  00AD               	movwf	sprintf@val
   872  0059  0A84               	incf	4,f
   873  005A  0800               	movf	0,w
   874  005B  00AE               	movwf	sprintf@val+1
   875  005C                     l1290:
   876  005C  3002               	movlw	2
   877  005D  00A7               	movwf	??_sprintf
   878  005E  0827               	movf	??_sprintf,w
   879  005F  07AA               	addwf	sprintf@ap,f
   880  0060                     l1292:
   881                           
   882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   883  0060  1FAE               	btfss	sprintf@val+1,7
   884  0061  2863               	goto	u551
   885  0062  2864               	goto	u550
   886  0063                     u551:
   887  0063  286D               	goto	l1298
   888  0064                     u550:
   889  0064                     l1294:
   890                           
   891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   892  0064  3003               	movlw	3
   893  0065  00A7               	movwf	??_sprintf
   894  0066  0827               	movf	??_sprintf,w
   895  0067  04AB               	iorwf	sprintf@flag,f
   896  0068                     l1296:
   897                           
   898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   899  0068  09AD               	comf	sprintf@val,f
   900  0069  09AE               	comf	sprintf@val+1,f
   901  006A  0AAD               	incf	sprintf@val,f
   902  006B  1903               	skipnz
   903  006C  0AAE               	incf	sprintf@val+1,f
   904  006D                     l1298:
   905                           
   906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   907  006D  01B0               	clrf	sprintf@c
   908  006E  0AB0               	incf	sprintf@c,f
   909  006F                     l1304:
   910                           
   911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   912  006F  0830               	movf	sprintf@c,w
   913  0070  00A7               	movwf	??_sprintf
   914  0071  0727               	addwf	??_sprintf,w
   915  0072  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   916  0073  0084               	movwf	4
   917  0074  120A  118A  2220  120A  118A  	fcall	stringdir
   918  0079  00A8               	movwf	??_sprintf+1
   919  007A  120A  118A  2220  120A  118A  	fcall	stringdir
   920  007F  00A9               	movwf	??_sprintf+2
   921  0080  0829               	movf	??_sprintf+2,w
   922  0081  022E               	subwf	sprintf@val+1,w
   923  0082  1D03               	skipz
   924  0083  2886               	goto	u565
   925  0084  0828               	movf	??_sprintf+1,w
   926  0085  022D               	subwf	sprintf@val,w
   927  0086                     u565:
   928  0086  1803               	skipnc
   929  0087  2889               	goto	u561
   930  0088  288A               	goto	u560
   931  0089                     u561:
   932  0089  288B               	goto	l1308
   933  008A                     u560:
   934  008A  2895               	goto	l1310
   935  008B                     l1308:
   936  008B  3001               	movlw	1
   937  008C  00A7               	movwf	??_sprintf
   938  008D  0827               	movf	??_sprintf,w
   939  008E  07B0               	addwf	sprintf@c,f
   940  008F  3005               	movlw	5
   941  0090  0630               	xorwf	sprintf@c,w
   942  0091  1D03               	btfss	3,2
   943  0092  2894               	goto	u571
   944  0093  2895               	goto	u570
   945  0094                     u571:
   946  0094  286F               	goto	l1304
   947  0095                     u570:
   948  0095                     l1310:
   949                           
   950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   951  0095  082B               	movf	sprintf@flag,w
   952  0096  3903               	andlw	3
   953  0097  1903               	btfsc	3,2
   954  0098  289A               	goto	u581
   955  0099  289B               	goto	u580
   956  009A                     u581:
   957  009A  28A6               	goto	l1316
   958  009B                     u580:
   959  009B                     l1312:
   960                           
   961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
   962  009B  302D               	movlw	45
   963  009C  00A7               	movwf	??_sprintf
   964  009D  082F               	movf	sprintf@sp,w
   965  009E  0084               	movwf	4
   966  009F  0827               	movf	??_sprintf,w
   967  00A0  1383               	bcf	3,7	;select IRP bank0
   968  00A1  0080               	movwf	0
   969  00A2                     l1314:
   970  00A2  3001               	movlw	1
   971  00A3  00A7               	movwf	??_sprintf
   972  00A4  0827               	movf	??_sprintf,w
   973  00A5  07AF               	addwf	sprintf@sp,f
   974  00A6                     l1316:
   975                           
   976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
   977  00A6  0830               	movf	sprintf@c,w
   978  00A7  00A7               	movwf	??_sprintf
   979  00A8  0827               	movf	??_sprintf,w
   980  00A9  00AC               	movwf	sprintf@prec
   981                           
   982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
   983  00AA  28E6               	goto	l1324
   984  00AB                     l1318:
   985                           
   986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
   987  00AB  300A               	movlw	10
   988  00AC  00A0               	movwf	___lwmod@divisor
   989  00AD  3000               	movlw	0
   990  00AE  00A1               	movwf	___lwmod@divisor+1
   991  00AF  082C               	movf	sprintf@prec,w
   992  00B0  00A7               	movwf	??_sprintf
   993  00B1  0727               	addwf	??_sprintf,w
   994  00B2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   995  00B3  0084               	movwf	4
   996  00B4  120A  118A  2220  120A  118A  	fcall	stringdir
   997  00B9  00F2               	movwf	___lwdiv@divisor
   998  00BA  120A  118A  2220  120A  118A  	fcall	stringdir
   999  00BF  00F3               	movwf	___lwdiv@divisor+1
  1000  00C0  082E               	movf	sprintf@val+1,w
  1001  00C1  00F5               	movwf	___lwdiv@dividend+1
  1002  00C2  082D               	movf	sprintf@val,w
  1003  00C3  00F4               	movwf	___lwdiv@dividend
  1004  00C4  120A  118A  2164  120A  118A  	fcall	___lwdiv
  1005  00C9  0873               	movf	?___lwdiv+1,w
  1006  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1007  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1008  00CC  00A3               	movwf	___lwmod@dividend+1
  1009  00CD  0872               	movf	?___lwdiv,w
  1010  00CE  00A2               	movwf	___lwmod@dividend
  1011  00CF  120A  118A  21A8  120A  118A  	fcall	___lwmod
  1012  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1013  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1014  00D6  0820               	movf	?___lwmod,w
  1015  00D7  3E30               	addlw	48
  1016  00D8  00A8               	movwf	??_sprintf+1
  1017  00D9  0828               	movf	??_sprintf+1,w
  1018  00DA  00B0               	movwf	sprintf@c
  1019  00DB                     l1320:
  1020                           
  1021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1022  00DB  0830               	movf	sprintf@c,w
  1023  00DC  00A7               	movwf	??_sprintf
  1024  00DD  082F               	movf	sprintf@sp,w
  1025  00DE  0084               	movwf	4
  1026  00DF  0827               	movf	??_sprintf,w
  1027  00E0  1383               	bcf	3,7	;select IRP bank0
  1028  00E1  0080               	movwf	0
  1029  00E2                     l1322:
  1030  00E2  3001               	movlw	1
  1031  00E3  00A7               	movwf	??_sprintf
  1032  00E4  0827               	movf	??_sprintf,w
  1033  00E5  07AF               	addwf	sprintf@sp,f
  1034  00E6                     l1324:
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1037  00E6  30FF               	movlw	255
  1038  00E7  00A7               	movwf	??_sprintf
  1039  00E8  0827               	movf	??_sprintf,w
  1040  00E9  07AC               	addwf	sprintf@prec,f
  1041  00EA  0A2C               	incf	sprintf@prec,w
  1042  00EB  1D03               	btfss	3,2
  1043  00EC  28EE               	goto	u591
  1044  00ED  28EF               	goto	u590
  1045  00EE                     u591:
  1046  00EE  28AB               	goto	l1318
  1047  00EF                     u590:
  1048  00EF                     l1326:
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1051  00EF  3001               	movlw	1
  1052  00F0  07A4               	addwf	sprintf@f,f
  1053  00F1  30FF               	movlw	-1
  1054  00F2  0724               	addwf	sprintf@f,w
  1055  00F3  0084               	movwf	4
  1056  00F4  120A  118A  2220  120A  118A  	fcall	stringdir
  1057  00F9  00A7               	movwf	??_sprintf
  1058  00FA  0827               	movf	??_sprintf,w
  1059  00FB  00B0               	movwf	sprintf@c
  1060  00FC  0830               	movf	sprintf@c,w
  1061  00FD  1D03               	btfss	3,2
  1062  00FE  2900               	goto	u601
  1063  00FF  2901               	goto	u600
  1064  0100                     u601:
  1065  0100  2824               	goto	l1276
  1066  0101                     u600:
  1067  0101                     l1328:
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1070  0101  082F               	movf	sprintf@sp,w
  1071  0102  0084               	movwf	4
  1072  0103  1383               	bcf	3,7	;select IRP bank0
  1073  0104  0180               	clrf	0
  1074  0105                     l346:
  1075  0105  0008               	return
  1076  0106                     __end_of_sprintf:
  1077                           
  1078                           	psect	text2
  1079  01A8                     __ptext2:	
  1080 ;; *************** function ___lwmod *****************
  1081 ;; Defined at:
  1082 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  divisor         2    0[BANK0 ] unsigned int 
  1085 ;;  dividend        2    2[BANK0 ] unsigned int 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  counter         1   11[COMMON] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2    0[BANK0 ] unsigned int 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       4       0       0       0
  1098 ;;      Locals:         1       0       0       0       0
  1099 ;;      Temps:          1       0       0       0       0
  1100 ;;      Totals:         2       4       0       0       0
  1101 ;;Total ram usage:        6 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_sprintf
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function ___lwmod
  1113  01A8                     ___lwmod:
  1114  01A8                     l1240:	
  1115                           ;incstack = 0
  1116                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1117                           
  1118  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1119  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1120  01AA  0820               	movf	___lwmod@divisor,w
  1121  01AB  0421               	iorwf	___lwmod@divisor+1,w
  1122  01AC  1903               	btfsc	3,2
  1123  01AD  29AF               	goto	u481
  1124  01AE  29B0               	goto	u480
  1125  01AF                     u481:
  1126  01AF  29DF               	goto	l1258
  1127  01B0                     u480:
  1128  01B0                     l1242:
  1129  01B0  01FB               	clrf	___lwmod@counter
  1130  01B1  0AFB               	incf	___lwmod@counter,f
  1131  01B2  29BE               	goto	l1248
  1132  01B3                     l1244:
  1133  01B3  3001               	movlw	1
  1134  01B4                     u495:
  1135  01B4  1003               	clrc
  1136  01B5  0DA0               	rlf	___lwmod@divisor,f
  1137  01B6  0DA1               	rlf	___lwmod@divisor+1,f
  1138  01B7  3EFF               	addlw	-1
  1139  01B8  1D03               	skipz
  1140  01B9  29B4               	goto	u495
  1141  01BA                     l1246:
  1142  01BA  3001               	movlw	1
  1143  01BB  00FA               	movwf	??___lwmod
  1144  01BC  087A               	movf	??___lwmod,w
  1145  01BD  07FB               	addwf	___lwmod@counter,f
  1146  01BE                     l1248:
  1147  01BE  1FA1               	btfss	___lwmod@divisor+1,7
  1148  01BF  29C1               	goto	u501
  1149  01C0  29C2               	goto	u500
  1150  01C1                     u501:
  1151  01C1  29B3               	goto	l1244
  1152  01C2                     u500:
  1153  01C2                     l1250:
  1154  01C2  0821               	movf	___lwmod@divisor+1,w
  1155  01C3  0223               	subwf	___lwmod@dividend+1,w
  1156  01C4  1D03               	skipz
  1157  01C5  29C8               	goto	u515
  1158  01C6  0820               	movf	___lwmod@divisor,w
  1159  01C7  0222               	subwf	___lwmod@dividend,w
  1160  01C8                     u515:
  1161  01C8  1C03               	skipc
  1162  01C9  29CB               	goto	u511
  1163  01CA  29CC               	goto	u510
  1164  01CB                     u511:
  1165  01CB  29D2               	goto	l1254
  1166  01CC                     u510:
  1167  01CC                     l1252:
  1168  01CC  0820               	movf	___lwmod@divisor,w
  1169  01CD  02A2               	subwf	___lwmod@dividend,f
  1170  01CE  0821               	movf	___lwmod@divisor+1,w
  1171  01CF  1C03               	skipc
  1172  01D0  03A3               	decf	___lwmod@dividend+1,f
  1173  01D1  02A3               	subwf	___lwmod@dividend+1,f
  1174  01D2                     l1254:
  1175  01D2  3001               	movlw	1
  1176  01D3                     u525:
  1177  01D3  1003               	clrc
  1178  01D4  0CA1               	rrf	___lwmod@divisor+1,f
  1179  01D5  0CA0               	rrf	___lwmod@divisor,f
  1180  01D6  3EFF               	addlw	-1
  1181  01D7  1D03               	skipz
  1182  01D8  29D3               	goto	u525
  1183  01D9                     l1256:
  1184  01D9  3001               	movlw	1
  1185  01DA  02FB               	subwf	___lwmod@counter,f
  1186  01DB  1D03               	btfss	3,2
  1187  01DC  29DE               	goto	u531
  1188  01DD  29DF               	goto	u530
  1189  01DE                     u531:
  1190  01DE  29C2               	goto	l1250
  1191  01DF                     u530:
  1192  01DF                     l1258:
  1193  01DF  0823               	movf	___lwmod@dividend+1,w
  1194  01E0  00A1               	movwf	?___lwmod+1
  1195  01E1  0822               	movf	___lwmod@dividend,w
  1196  01E2  00A0               	movwf	?___lwmod
  1197  01E3                     l632:
  1198  01E3  0008               	return
  1199  01E4                     __end_of___lwmod:
  1200                           
  1201                           	psect	text3
  1202  0164                     __ptext3:	
  1203 ;; *************** function ___lwdiv *****************
  1204 ;; Defined at:
  1205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  divisor         2    2[COMMON] unsigned int 
  1208 ;;  dividend        2    4[COMMON] unsigned int 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  quotient        2    7[COMMON] unsigned int 
  1211 ;;  counter         1    9[COMMON] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2    2[COMMON] unsigned int 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         4       0       0       0       0
  1222 ;;      Locals:         3       0       0       0       0
  1223 ;;      Temps:          1       0       0       0       0
  1224 ;;      Totals:         8       0       0       0       0
  1225 ;;Total ram usage:        8 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 1
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_sprintf
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function ___lwdiv
  1237  0164                     ___lwdiv:
  1238  0164                     l1214:	
  1239                           ;incstack = 0
  1240                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1241                           
  1242  0164  01F7               	clrf	___lwdiv@quotient
  1243  0165  01F8               	clrf	___lwdiv@quotient+1
  1244  0166                     l1216:
  1245  0166  0872               	movf	___lwdiv@divisor,w
  1246  0167  0473               	iorwf	___lwdiv@divisor+1,w
  1247  0168  1903               	btfsc	3,2
  1248  0169  296B               	goto	u411
  1249  016A  296C               	goto	u410
  1250  016B                     u411:
  1251  016B  29A3               	goto	l1236
  1252  016C                     u410:
  1253  016C                     l1218:
  1254  016C  01F9               	clrf	___lwdiv@counter
  1255  016D  0AF9               	incf	___lwdiv@counter,f
  1256  016E  297A               	goto	l1224
  1257  016F                     l1220:
  1258  016F  3001               	movlw	1
  1259  0170                     u425:
  1260  0170  1003               	clrc
  1261  0171  0DF2               	rlf	___lwdiv@divisor,f
  1262  0172  0DF3               	rlf	___lwdiv@divisor+1,f
  1263  0173  3EFF               	addlw	-1
  1264  0174  1D03               	skipz
  1265  0175  2970               	goto	u425
  1266  0176                     l1222:
  1267  0176  3001               	movlw	1
  1268  0177  00F6               	movwf	??___lwdiv
  1269  0178  0876               	movf	??___lwdiv,w
  1270  0179  07F9               	addwf	___lwdiv@counter,f
  1271  017A                     l1224:
  1272  017A  1FF3               	btfss	___lwdiv@divisor+1,7
  1273  017B  297D               	goto	u431
  1274  017C  297E               	goto	u430
  1275  017D                     u431:
  1276  017D  296F               	goto	l1220
  1277  017E                     u430:
  1278  017E                     l1226:
  1279  017E  3001               	movlw	1
  1280  017F                     u445:
  1281  017F  1003               	clrc
  1282  0180  0DF7               	rlf	___lwdiv@quotient,f
  1283  0181  0DF8               	rlf	___lwdiv@quotient+1,f
  1284  0182  3EFF               	addlw	-1
  1285  0183  1D03               	skipz
  1286  0184  297F               	goto	u445
  1287  0185  0873               	movf	___lwdiv@divisor+1,w
  1288  0186  0275               	subwf	___lwdiv@dividend+1,w
  1289  0187  1D03               	skipz
  1290  0188  298B               	goto	u455
  1291  0189  0872               	movf	___lwdiv@divisor,w
  1292  018A  0274               	subwf	___lwdiv@dividend,w
  1293  018B                     u455:
  1294  018B  1C03               	skipc
  1295  018C  298E               	goto	u451
  1296  018D  298F               	goto	u450
  1297  018E                     u451:
  1298  018E  2996               	goto	l1232
  1299  018F                     u450:
  1300  018F                     l1228:
  1301  018F  0872               	movf	___lwdiv@divisor,w
  1302  0190  02F4               	subwf	___lwdiv@dividend,f
  1303  0191  0873               	movf	___lwdiv@divisor+1,w
  1304  0192  1C03               	skipc
  1305  0193  03F5               	decf	___lwdiv@dividend+1,f
  1306  0194  02F5               	subwf	___lwdiv@dividend+1,f
  1307  0195                     l1230:
  1308  0195  1477               	bsf	___lwdiv@quotient,0
  1309  0196                     l1232:
  1310  0196  3001               	movlw	1
  1311  0197                     u465:
  1312  0197  1003               	clrc
  1313  0198  0CF3               	rrf	___lwdiv@divisor+1,f
  1314  0199  0CF2               	rrf	___lwdiv@divisor,f
  1315  019A  3EFF               	addlw	-1
  1316  019B  1D03               	skipz
  1317  019C  2997               	goto	u465
  1318  019D                     l1234:
  1319  019D  3001               	movlw	1
  1320  019E  02F9               	subwf	___lwdiv@counter,f
  1321  019F  1D03               	btfss	3,2
  1322  01A0  29A2               	goto	u471
  1323  01A1  29A3               	goto	u470
  1324  01A2                     u471:
  1325  01A2  297E               	goto	l1226
  1326  01A3                     u470:
  1327  01A3                     l1236:
  1328  01A3  0878               	movf	___lwdiv@quotient+1,w
  1329  01A4  00F3               	movwf	?___lwdiv+1
  1330  01A5  0877               	movf	___lwdiv@quotient,w
  1331  01A6  00F2               	movwf	?___lwdiv
  1332  01A7                     l622:
  1333  01A7  0008               	return
  1334  01A8                     __end_of___lwdiv:
  1335                           
  1336                           	psect	text4
  1337  027D                     __ptext4:	
  1338 ;; *************** function _config *****************
  1339 ;; Defined at:
  1340 ;;		line 113 in file "Lab_05.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		status,2
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0
  1357 ;;      Totals:         0       0       0       0       0
  1358 ;;Total ram usage:        0 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _config
  1370  027D                     _config:
  1371  027D                     l1262:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _config: [status,2]
  1374                           
  1375  027D  1683               	bsf	3,5	;RP0=1, select bank1
  1376  027E  1303               	bcf	3,6	;RP1=0, select bank1
  1377  027F  0185               	clrf	5	;volatile
  1378  0280  0189               	clrf	9	;volatile
  1379  0281  0188               	clrf	8	;volatile
  1380  0282  1683               	bsf	3,5	;RP0=1, select bank3
  1381  0283  1703               	bsf	3,6	;RP1=1, select bank3
  1382  0284  0188               	clrf	8	;volatile
  1383  0285  0189               	clrf	9	;volatile
  1384  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0288  0185               	clrf	5	;volatile
  1387  0289  0186               	clrf	6	;volatile
  1388  028A  0187               	clrf	7	;volatile
  1389  028B  0188               	clrf	8	;volatile
  1390  028C  0189               	clrf	9	;volatile
  1391  028D                     l77:
  1392  028D  0008               	return
  1393  028E                     __end_of_config:
  1394                           
  1395                           	psect	text5
  1396  01E4                     __ptext5:	
  1397 ;; *************** function _Texto_USART *****************
  1398 ;; Defined at:
  1399 ;;		line 160 in file "../../LIB/LIB.X/LIB.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  texto           2    2[COMMON] PTR unsigned char 
  1402 ;;		 -> STR_3(8), STR_2(8), text(16), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  i               1    6[COMMON] unsigned char 
  1405 ;;  temp            1    0        unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         2       0       0       0       0
  1416 ;;      Locals:         1       0       0       0       0
  1417 ;;      Temps:          2       0       0       0       0
  1418 ;;      Totals:         5       0       0       0       0
  1419 ;;Total ram usage:        5 bytes
  1420 ;; Hardware stack levels used: 2
  1421 ;; Hardware stack levels required when called: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;;		_texto_Programa
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _Texto_USART
  1432  01E4                     _Texto_USART:
  1433  01E4                     l1336:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _Texto_USART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1436                           
  1437  01E4                     l1338:
  1438                           
  1439                           ;../../LIB/LIB.X/LIB.c: 162:     char i = 0;
  1440  01E4  01F6               	clrf	Texto_USART@i
  1441                           
  1442                           ;../../LIB/LIB.X/LIB.c: 163:     while(texto[i] != '\0'){
  1443  01E5  2A00               	goto	l1346
  1444  01E6                     l1340:
  1445                           
  1446                           ;../../LIB/LIB.X/LIB.c: 164:         TXREG = texto[i];
  1447  01E6  0876               	movf	Texto_USART@i,w
  1448  01E7  0772               	addwf	Texto_USART@texto,w
  1449  01E8  0084               	movwf	4
  1450  01E9  0873               	movf	Texto_USART@texto+1,w
  1451  01EA  1803               	skipnc
  1452  01EB  0A73               	incf	Texto_USART@texto+1,w
  1453  01EC  00FF               	movwf	btemp+1
  1454  01ED  120A  118A  2216  120A  118A  	fcall	stringtab
  1455  01F2  0099               	movwf	25	;volatile
  1456  01F3                     l1342:
  1457                           
  1458                           ;../../LIB/LIB.X/LIB.c: 165:         i++;
  1459  01F3  3001               	movlw	1
  1460  01F4  00F4               	movwf	??_Texto_USART
  1461  01F5  0874               	movf	??_Texto_USART,w
  1462  01F6  07F6               	addwf	Texto_USART@i,f
  1463  01F7                     l1344:
  1464                           
  1465                           ;../../LIB/LIB.X/LIB.c: 166:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1466  01F7  300D               	movlw	13
  1467  01F8  00F5               	movwf	??_Texto_USART+1
  1468  01F9  30FB               	movlw	251
  1469  01FA  00F4               	movwf	??_Texto_USART
  1470  01FB                     u717:
  1471  01FB  0BF4               	decfsz	??_Texto_USART,f
  1472  01FC  29FB               	goto	u717
  1473  01FD  0BF5               	decfsz	??_Texto_USART+1,f
  1474  01FE  29FB               	goto	u717
  1475  01FF  2A00               	nop2
  1476  0200                     l1346:
  1477                           
  1478                           ;../../LIB/LIB.X/LIB.c: 163:     while(texto[i] != '\0'){
  1479  0200  0876               	movf	Texto_USART@i,w
  1480  0201  0772               	addwf	Texto_USART@texto,w
  1481  0202  0084               	movwf	4
  1482  0203  0873               	movf	Texto_USART@texto+1,w
  1483  0204  1803               	skipnc
  1484  0205  0A73               	incf	Texto_USART@texto+1,w
  1485  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0208  00FF               	movwf	btemp+1
  1488  0209  120A  118A  2216  120A  118A  	fcall	stringtab
  1489  020E  3A00               	xorlw	0
  1490  020F  1D03               	skipz
  1491  0210  2A12               	goto	u611
  1492  0211  2A13               	goto	u610
  1493  0212                     u611:
  1494  0212  29E6               	goto	l1340
  1495  0213                     u610:
  1496  0213                     l1348:
  1497                           
  1498                           ;../../LIB/LIB.X/LIB.c: 169:     TXREG = '\n';
  1499  0213  300A               	movlw	10
  1500  0214  0099               	movwf	25	;volatile
  1501  0215                     l225:
  1502  0215  0008               	return
  1503  0216                     __end_of_Texto_USART:
  1504                           
  1505                           	psect	text6
  1506  0268                     __ptext6:	
  1507 ;; *************** function _Config_USART *****************
  1508 ;; Defined at:
  1509 ;;		line 69 in file "../../LIB/LIB.X/LIB.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0
  1526 ;;      Totals:         0       0       0       0       0
  1527 ;;Total ram usage:        0 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           
  1538                           ;psect for function _Config_USART
  1539  0268                     _Config_USART:
  1540  0268                     l1268:	
  1541                           ;incstack = 0
  1542                           ; Regs used in _Config_USART: [wreg]
  1543                           
  1544                           
  1545                           ;../../LIB/LIB.X/LIB.c: 71:     TXEN = 1;
  1546  0268  1683               	bsf	3,5	;RP0=1, select bank1
  1547  0269  1303               	bcf	3,6	;RP1=0, select bank1
  1548  026A  1698               	bsf	24,5	;volatile
  1549                           
  1550                           ;../../LIB/LIB.X/LIB.c: 72:     SYNC = 0;
  1551  026B  1218               	bcf	24,4	;volatile
  1552                           
  1553                           ;../../LIB/LIB.X/LIB.c: 73:     SPEN = 1;
  1554  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1555  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1556  026E  1798               	bsf	24,7	;volatile
  1557                           
  1558                           ;../../LIB/LIB.X/LIB.c: 76:     CREN = 1;
  1559  026F  1618               	bsf	24,4	;volatile
  1560                           
  1561                           ;../../LIB/LIB.X/LIB.c: 77:     PIE1bits.RCIE = 1;
  1562  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0272  168C               	bsf	12,5	;volatile
  1565                           
  1566                           ;../../LIB/LIB.X/LIB.c: 78:     PIR1bits.RCIF = 0;
  1567  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0275  128C               	bcf	12,5	;volatile
  1570  0276                     l1270:
  1571                           
  1572                           ;../../LIB/LIB.X/LIB.c: 79:     SPBRG=12;
  1573  0276  300C               	movlw	12
  1574  0277  1683               	bsf	3,5	;RP0=1, select bank1
  1575  0278  1303               	bcf	3,6	;RP1=0, select bank1
  1576  0279  0099               	movwf	25	;volatile
  1577                           
  1578                           ;../../LIB/LIB.X/LIB.c: 80:     TRISC = 0b10000000;
  1579  027A  3080               	movlw	128
  1580  027B  0087               	movwf	7	;volatile
  1581  027C                     l188:
  1582  027C  0008               	return
  1583  027D                     __end_of_Config_USART:
  1584                           
  1585                           	psect	text7
  1586  028E                     __ptext7:	
  1587 ;; *************** function _Config_PORTB *****************
  1588 ;; Defined at:
  1589 ;;		line 28 in file "../../LIB/LIB.X/LIB.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		None
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _Config_PORTB
  1619  028E                     _Config_PORTB:
  1620  028E                     l1272:	
  1621                           ;incstack = 0
  1622                           ; Regs used in _Config_PORTB: []
  1623                           
  1624                           
  1625                           ;../../LIB/LIB.X/LIB.c: 30:     OPTION_REGbits.nRBPU = 0;
  1626  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1627  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1628  0290  1381               	bcf	1,7	;volatile
  1629                           
  1630                           ;../../LIB/LIB.X/LIB.c: 31:     WPUBbits.WPUB0=1;
  1631  0291  1415               	bsf	21,0	;volatile
  1632                           
  1633                           ;../../LIB/LIB.X/LIB.c: 32:     WPUBbits.WPUB1=1;
  1634  0292  1495               	bsf	21,1	;volatile
  1635                           
  1636                           ;../../LIB/LIB.X/LIB.c: 35:     IOCB0 = 1;
  1637  0293  1416               	bsf	22,0	;volatile
  1638                           
  1639                           ;../../LIB/LIB.X/LIB.c: 36:     IOCB1 = 1;
  1640  0294  1496               	bsf	22,1	;volatile
  1641                           
  1642                           ;../../LIB/LIB.X/LIB.c: 37:     RB0 = 0;
  1643  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0297  1006               	bcf	6,0	;volatile
  1646                           
  1647                           ;../../LIB/LIB.X/LIB.c: 38:     RB1 = 0;
  1648  0298  1086               	bcf	6,1	;volatile
  1649                           
  1650                           ;../../LIB/LIB.X/LIB.c: 39:     RBIE = 1;
  1651  0299  158B               	bsf	11,3	;volatile
  1652  029A                     l182:
  1653  029A  0008               	return
  1654  029B                     __end_of_Config_PORTB:
  1655                           
  1656                           	psect	text8
  1657  02A3                     __ptext8:	
  1658 ;; *************** function _Config_Oscilador *****************
  1659 ;; Defined at:
  1660 ;;		line 7 in file "../../LIB/LIB.X/LIB.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _Config_Oscilador
  1690  02A3                     _Config_Oscilador:
  1691  02A3                     l1264:	
  1692                           ;incstack = 0
  1693                           ; Regs used in _Config_Oscilador: [wreg]
  1694                           
  1695                           
  1696                           ;../../LIB/LIB.X/LIB.c: 9:     IRCF0 = 1;
  1697  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  1698  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  1699  02A5  160F               	bsf	15,4	;volatile
  1700                           
  1701                           ;../../LIB/LIB.X/LIB.c: 10:     IRCF1 = 1;
  1702  02A6  168F               	bsf	15,5	;volatile
  1703                           
  1704                           ;../../LIB/LIB.X/LIB.c: 11:     IRCF2 = 1;
  1705  02A7  170F               	bsf	15,6	;volatile
  1706  02A8                     l1266:
  1707                           
  1708                           ;../../LIB/LIB.X/LIB.c: 12:     INTCON = 0b11101000;
  1709  02A8  30E8               	movlw	232
  1710  02A9  008B               	movwf	11	;volatile
  1711  02AA                     l176:
  1712  02AA  0008               	return
  1713  02AB                     __end_of_Config_Oscilador:
  1714                           
  1715                           	psect	text9
  1716  0243                     __ptext9:	
  1717 ;; *************** function _isr *****************
  1718 ;; Defined at:
  1719 ;;		line 64 in file "Lab_05.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0
  1735 ;;      Temps:          2       0       0       0       0
  1736 ;;      Totals:         2       0       0       0       0
  1737 ;;Total ram usage:        2 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		Interrupt level 1
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _isr
  1748  0243                     _isr:
  1749  0243                     i1l1350:
  1750                           
  1751                           ;Lab_05.c: 66: 
  1752  0243  1C0B               	btfss	11,0	;volatile
  1753  0244  2A46               	goto	u62_21
  1754  0245  2A47               	goto	u62_20
  1755  0246                     u62_21:
  1756  0246  2A56               	goto	i1l59
  1757  0247                     u62_20:
  1758  0247                     i1l1352:
  1759                           
  1760                           ;Lab_05.c: 67: 
  1761  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0249  1806               	btfsc	6,0	;volatile
  1764  024A  2A4C               	goto	u63_21
  1765  024B  2A4D               	goto	u63_20
  1766  024C                     u63_21:
  1767  024C  2A4F               	goto	i1l60
  1768  024D                     u63_20:
  1769  024D                     i1l1354:
  1770                           
  1771                           ;Lab_05.c: 68:     TRISE = 0;
  1772  024D  01B6               	clrf	_Boton_0
  1773  024E  0AB6               	incf	_Boton_0,f
  1774  024F                     i1l60:	
  1775                           ;Lab_05.c: 69:     TRISD = 0;
  1776                           
  1777                           
  1778                           ;Lab_05.c: 70: 
  1779  024F  1886               	btfsc	6,1	;volatile
  1780  0250  2A52               	goto	u64_21
  1781  0251  2A53               	goto	u64_20
  1782  0252                     u64_21:
  1783  0252  2A55               	goto	i1l61
  1784  0253                     u64_20:
  1785  0253                     i1l1356:
  1786                           
  1787                           ;Lab_05.c: 71:     ANSEL = 0;
  1788  0253  01B5               	clrf	_Boton_1
  1789  0254  0AB5               	incf	_Boton_1,f
  1790  0255                     i1l61:	
  1791                           ;Lab_05.c: 72:     ANSELH = 0;
  1792                           
  1793                           
  1794                           ;Lab_05.c: 73: 
  1795  0255  100B               	bcf	11,0	;volatile
  1796  0256                     i1l59:	
  1797                           ;Lab_05.c: 74: 
  1798                           
  1799                           
  1800                           ;Lab_05.c: 77:     PORTC = 0;
  1801  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0258  1E8C               	btfss	12,5	;volatile
  1804  0259  2A5B               	goto	u65_21
  1805  025A  2A5C               	goto	u65_20
  1806  025B                     u65_21:
  1807  025B  2A61               	goto	i1l63
  1808  025C                     u65_20:
  1809  025C                     i1l1358:
  1810                           
  1811                           ;Lab_05.c: 79:     PORTE = 0;
  1812  025C  081A               	movf	26,w	;volatile
  1813  025D  0085               	movwf	5	;volatile
  1814                           
  1815                           ;Lab_05.c: 80: }
  1816  025E  3001               	movlw	1
  1817  025F  0689               	xorwf	9,f
  1818  0260                     i1l1360:
  1819  0260  128C               	bcf	12,5	;volatile
  1820  0261                     i1l63:
  1821  0261  0871               	movf	??_isr+1,w
  1822  0262  008A               	movwf	10
  1823  0263  0E70               	swapf	??_isr,w
  1824  0264  0083               	movwf	3
  1825  0265  0EFE               	swapf	btemp,f
  1826  0266  0E7E               	swapf	btemp,w
  1827  0267  0009               	retfie
  1828  0268                     __end_of_isr:
  1829  007E                     btemp	set	126	;btemp
  1830  007E                     wtemp0	set	126
  1831                           
  1832                           	psect	intentry
  1833  0004                     __pintentry:	
  1834                           ;incstack = 0
  1835                           ; Regs used in _isr: [wreg]
  1836                           
  1837  0004                     interrupt_function:
  1838  007E                     saved_w	set	btemp
  1839  0004  00FE               	movwf	btemp
  1840  0005  0E03               	swapf	3,w
  1841  0006  00F0               	movwf	??_isr
  1842  0007  080A               	movf	10,w
  1843  0008  00F1               	movwf	??_isr+1
  1844  0009  120A  118A  2A43   	ljmp	_isr
  1845                           
  1846                           	psect	config
  1847                           
  1848                           ;Config register CONFIG1 @ 0x2007
  1849                           ;	Oscillator Selection bits
  1850                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1851                           ;	Watchdog Timer Enable bit
  1852                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1853                           ;	Power-up Timer Enable bit
  1854                           ;	PWRTE = OFF, PWRT disabled
  1855                           ;	RE3/MCLR pin function select bit
  1856                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1857                           ;	Code Protection bit
  1858                           ;	CP = OFF, Program memory code protection is disabled
  1859                           ;	Data Code Protection bit
  1860                           ;	CPD = OFF, Data memory code protection is disabled
  1861                           ;	Brown Out Reset Selection bits
  1862                           ;	BOREN = OFF, BOR disabled
  1863                           ;	Internal External Switchover bit
  1864                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1865                           ;	Fail-Safe Clock Monitor Enabled bit
  1866                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1867                           ;	Low Voltage Programming Enable bit
  1868                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1869                           ;	In-Circuit Debugger Mode bit
  1870                           ;	DEBUG = 0x1, unprogrammed default
  1871  2007                     	org	8199
  1872  2007  20D4               	dw	8404
  1873                           
  1874                           ;Config register CONFIG2 @ 0x2008
  1875                           ;	Brown-out Reset Selection bit
  1876                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1877                           ;	Flash Program Memory Self Write Enable bits
  1878                           ;	WRT = OFF, Write protection off
  1879  2008                     	org	8200
  1880  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    10
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     20      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> text(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Texto_USART@texto	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[8]), STR_2(CODE[8]), text(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1530
                                             17 BANK0      3     3      0
                   _Config_Oscilador
                       _Config_PORTB
                       _Config_USART
                        _Texto_USART
                             _config
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Texto_USART                                          6     4      2     319
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_PORTB                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Oscilador                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Oscilador
   _Config_PORTB
   _Config_USART
   _Texto_USART
   _config
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 18 13:44:43 2021

                        pc 0002                         l77 028D                         fsr 0004  
                      l225 0215                        l182 029A                        l176 02AA  
                      l346 0105                        l188 027C                        l622 01A7  
                      l632 01E3                        _RA0 0028                        _RB0 0030  
                      _RB1 0031                        _RE0 0048                        u410 016C  
                      u411 016B                        u500 01C2                        u501 01C1  
                      u430 017E                        u510 01CC                        _PS0 0408  
                      u431 017D                        u511 01CB                        _PS1 0409  
                      u600 0101                        _PS2 040A                        u425 0170  
                      u601 0100                        u610 0213                        u450 018F  
                      u530 01DF                        u611 0212                        u451 018E  
                      u531 01DE                        u515 01C8                        u540 002A  
                      u445 017F                        u525 01D3                        u541 0029  
                      u470 01A3                        u550 0064                        u471 01A2  
                      u455 018B                        u551 0063                        u480 01B0  
                      u560 008A                        u465 0197                        u481 01AF  
                      u561 0089                        u570 0095                        u571 0094  
                      u707 015A                        u580 009B                        u660 0121  
                      u717 01FB                        u581 009A                        u565 0086  
                      u661 0120                        u590 00EF                        u670 0125  
                      u495 01B4                        u591 00EE                        u671 0124  
                      _PSA 040B                        u680 0131                        u681 0130  
                      u690 0135                        u691 0134                        _isr 0243  
                      fsr0 0004                        indf 0000                       l1220 016F  
                     l1230 0195                       l1222 0176                       l1214 0164  
                     l1310 0095                       l1232 0196                       l1224 017A  
                     l1216 0166                       l1240 01A8                       l1320 00DB  
                     l1312 009B                       l1304 006F                       l1234 019D  
                     l1226 017E                       l1218 016C                       l1250 01C2  
                     l1242 01B0                       l1322 00E2                       l1314 00A2  
                     l1340 01E6                       l1228 018F                       l1236 01A3  
                     l1252 01CC                       l1244 01B3                       l1324 00E6  
                     l1316 00A6                       l1308 008B                       l1270 0276  
                     l1342 01F3                       l1262 027D                       l1254 01D2  
                     l1246 01BA                       l1318 00AB                       l1326 00EF  
                     l1264 02A3                       l1272 028E                       l1344 01F7  
                     l1336 01E4                       l1256 01D9                       l1248 01BE  
                     l1328 0101                       l1280 0031                       l1266 02A8  
                     l1346 0200                       l1338 01E4                       l1258 01DF  
                     l1290 005C                       l1282 0036                       l1274 001F  
                     l1370 0121                       l1362 0106                       l1268 0268  
                     l1348 0213                       l1292 0060                       l1276 0024  
                     l1380 0131                       l1372 0125                       l1364 010B  
                     l1294 0064                       l1438 0049                       l1286 0037  
                     l1278 002A                       l1390 0149                       l1382 0135  
                     l1374 0129                       l1366 0110                       l1296 0068  
                     l1288 0054                       l1392 0152                       l1376 012A  
                     l1368 011A                       l1298 006D                       l1378 012C  
                     l1388 0138                       _ADIF 0066                       ?_isr 0070  
                     STR_1 0240                       STR_2 0230                       STR_3 0238  
                     _CREN 00C4                       _T0CS 040D                       _RBIE 005B  
                     _RBIF 0058                       i1l60 024F                       _RCIF 0065  
                     i1l61 0255                       i1l63 0261                       i1l59 0256  
                     _TMR0 0001                       _SPEN 00C7                       _TXEN 04C5  
                     _SYNC 04C4                       _main 0106                       _text 0037  
                     btemp 007E                       start 000C                      ??_isr 0070  
                    ?_main 0070                      _ANSEL 0188                      _IOCB0 04B0  
                    _IOCB1 04B1                      _IRCF0 047C                      _IRCF1 047D  
                    _IRCF2 047E            __end_of___lwdiv 01A8            __end_of___lwmod 01E4  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u62_20 0247                      u62_21 0246  
                    u63_20 024D                      u63_21 024C                      u64_20 0253  
                    u64_21 0252                      u65_20 025C                      u65_21 025B  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
          __end_of_dpowers 0230                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0106       __end_of_Config_PORTB 029B  
     __end_of_Config_USART 027D            __initialization 000F               __end_of_main 0164  
                   ??_main 0031                     _ADRESH 001E                     _ANSELH 0189  
                   i1l1350 0243                     i1l1360 0260                     i1l1352 0247  
                   i1l1354 024D                     i1l1356 0253                     i1l1358 025C  
                   _INTCON 000B   __end_of_Config_Oscilador 02AB                  ??___lwdiv 0076  
                ??___lwmod 007A                     _config 027D                     saved_w 007E  
                ??_sprintf 0027    __end_of__initialization 0018              ??_Texto_USART 0074  
           __pcstackCOMMON 0070             _OPTION_REGbits 0081                 __pbssBANK0 0034  
    __size_of_Config_PORTB 000D      __size_of_Config_USART 0015                 __pmaintext 0106  
      __end_of_Texto_USART 0216                 __pintentry 0004                    ?_config 0070  
             _Config_PORTB 028E               _Config_USART 0268                 __stringtab 0216  
                  _Boton_0 0036                    _Boton_1 0035                    ___lwdiv 0164  
                  ___lwmod 01A8            __size_of_config 0011                    __ptext1 001C  
                  __ptext2 01A8                    __ptext3 0164                    __ptext4 027D  
                  __ptext5 01E4                    __ptext6 0268                    __ptext7 028E  
                  __ptext8 02A3                    __ptext9 0243                    _dpowers 0226  
         Texto_USART@texto 0072               __size_of_isr 0025                    _sprintf 001C  
                  clrloop0 029C       end_of_initialization 0018                _Texto_USART 01E4  
        ?_Config_Oscilador 0070                  _PORTCbits 0007         ??_Config_Oscilador 0072  
           __end_of_config 028E        start_initialization 000F                __end_of_isr 0268  
                 ??_config 0072                  ___latbits 0002              __pcstackBANK0 0020  
              sprintf@flag 002B                sprintf@prec 002C           ___lwdiv@dividend 0074  
                 ?___lwdiv 0072                   ?___lwmod 0020                  __pstrings 0216  
         ___lwdiv@quotient 0077                   ?_sprintf 0024          interrupt_function 0004  
             ?_Texto_USART 0072                  clear_ram0 029B                   _PIE1bits 008C  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 0225  
               _ADCON1bits 009F                   _WPUBbits 0095  __size_of_Config_Oscilador 0008  
                 _Contador 0034           __size_of___lwdiv 0044           __size_of___lwmod 003C  
       __end_of__stringtab 0226                 sprintf@val 002D            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079           __size_of_sprintf 00EA              __size_of_main 005E  
               _INTCONbits 000B              ?_Config_PORTB 0070              ?_Config_USART 0070  
                 intlevel1 0000                  sprintf@ap 002A                  sprintf@sp 002F  
         ___lwmod@dividend 0022                  stringcode 0220       __size_of_Texto_USART 0032  
                 sprintf@c 0030                   sprintf@f 0024            ___lwmod@divisor 0020  
           ??_Config_PORTB 0072             ??_Config_USART 0072            ___lwmod@counter 007B  
             Texto_USART@i 0076                   stringdir 0220                   stringtab 0216  
         _Config_Oscilador 02A3  
