

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 27 17:24:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379                           
   380                           	psect	idataBANK0
   381  043B                     __pidataBANK0:
   382                           
   383                           ;initializer for _Valor_TMR0
   384  043B  3464               	retlw	100
   385  0009                     _PORTEbits	set	9
   386  0005                     _PORTAbits	set	5
   387  0019                     _TXREG	set	25
   388  001E                     _ADRESH	set	30
   389  0009                     _PORTE	set	9
   390  0008                     _PORTD	set	8
   391  0007                     _PORTC	set	7
   392  0006                     _PORTB	set	6
   393  0005                     _PORTA	set	5
   394  000C                     _PIR1bits	set	12
   395  001F                     _ADCON0bits	set	31
   396  000B                     _INTCON	set	11
   397  0001                     _TMR0	set	1
   398  00C4                     _CREN	set	196
   399  00C7                     _SPEN	set	199
   400  0065                     _RCIF	set	101
   401  0066                     _ADIF	set	102
   402  005A                     _T0IF	set	90
   403  0089                     _TRISE	set	137
   404  0088                     _TRISD	set	136
   405  0087                     _TRISC	set	135
   406  0086                     _TRISB	set	134
   407  0085                     _TRISA	set	133
   408  0099                     _SPBRG	set	153
   409  009F                     _ADCON1bits	set	159
   410  008C                     _PIE1bits	set	140
   411  04C4                     _SYNC	set	1220
   412  04C5                     _TXEN	set	1221
   413  040B                     _PSA	set	1035
   414  040D                     _T0CS	set	1037
   415  040A                     _PS2	set	1034
   416  0409                     _PS1	set	1033
   417  0408                     _PS0	set	1032
   418  047E                     _IRCF2	set	1150
   419  047D                     _IRCF1	set	1149
   420  047C                     _IRCF0	set	1148
   421  0189                     _ANSELH	set	393
   422  0188                     _ANSEL	set	392
   423                           
   424                           	psect	strings
   425  0300                     __pstrings:
   426  0300                     stringtab:
   427  0300                     __stringtab:
   428  0300                     stringcode:	
   429                           ;	String table - string pointers are 1 byte each
   430                           
   431  0300                     stringdir:
   432  0300  3003               	movlw	high stringdir
   433  0301  008A               	movwf	10
   434  0302  0804               	movf	4,w
   435  0303  0A84               	incf	4,f
   436  0304  0782               	addwf	2,f
   437  0305                     __stringbase:
   438  0305  3400               	retlw	0
   439  0306                     __end_of__stringtab:
   440  0306                     STR_1:
   441  0306  3450               	retlw	80	;'P'
   442  0307  344F               	retlw	79	;'O'
   443  0308  3454               	retlw	84	;'T'
   444  0309  3420               	retlw	32	;' '
   445  030A  3431               	retlw	49	;'1'
   446  030B  343A               	retlw	58	;':'
   447  030C  3420               	retlw	32	;' '
   448  030D  3400               	retlw	0
   449  030E                     STR_2:
   450  030E  3450               	retlw	80	;'P'
   451  030F  344F               	retlw	79	;'O'
   452  0310  3454               	retlw	84	;'T'
   453  0311  3420               	retlw	32	;' '
   454  0312  3432               	retlw	50	;'2'
   455  0313  343A               	retlw	58	;':'
   456  0314  3420               	retlw	32	;' '
   457  0315  3400               	retlw	0
   458  0316                     STR_3:
   459  0316  342E               	retlw	46	;'.'
   460  0317  3400               	retlw	0
   461  0318                     STR_13:
   462  0318  3430               	retlw	48	;'0'
   463  0319  3400               	retlw	0
   464  031A                     STR_4:
   465  031A  3431               	retlw	49	;'1'
   466  031B  3400               	retlw	0
   467  031C                     STR_5:
   468  031C  3432               	retlw	50	;'2'
   469  031D  3400               	retlw	0
   470  031E                     STR_6:
   471  031E  3433               	retlw	51	;'3'
   472  031F  3400               	retlw	0
   473  0320                     STR_7:
   474  0320  3434               	retlw	52	;'4'
   475  0321  3400               	retlw	0
   476  0322                     STR_8:
   477  0322  3435               	retlw	53	;'5'
   478  0323  3400               	retlw	0
   479  0324                     STR_9:
   480  0324  3436               	retlw	54	;'6'
   481  0325  3400               	retlw	0
   482  0326                     STR_10:
   483  0326  3437               	retlw	55	;'7'
   484  0327  3400               	retlw	0
   485  0328                     STR_11:
   486  0328  3438               	retlw	56	;'8'
   487  0329  3400               	retlw	0
   488  032A                     STR_12:
   489  032A  3439               	retlw	57	;'9'
   490  032B  3400               	retlw	0
   491                           
   492                           	psect	cinit
   493  000F                     start_initialization:	
   494                           ; #config settings
   495                           
   496  000F                     __initialization:
   497                           
   498                           ; Initialize objects allocated to BANK0
   499  000F  120A  118A  243B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   500  0014  00B8               	movwf	__pdataBANK0& (0+127)
   501                           
   502                           ; Clear objects allocated to BANK0
   503  0015  01B6               	clrf	__pbssBANK0& (0+127)
   504  0016  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   505  0017                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  0017                     __end_of__initialization:
   509  0017  0183               	clrf	3
   510  0018  120A  118A  2996   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssBANK0
   513  0036                     __pbssBANK0:
   514  0036                     _Valor_Canal_12:
   515  0036                     	ds	1
   516  0037                     _Valor_Canal_10:
   517  0037                     	ds	1
   518                           
   519                           	psect	dataBANK0
   520  0038                     __pdataBANK0:
   521  0038                     _Valor_TMR0:
   522  0038                     	ds	1
   523                           
   524                           	psect	cstackCOMMON
   525  0070                     __pcstackCOMMON:
   526  0070                     ?_Valor_ADC:
   527  0070                     ??_Valor_ADC:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_Config_Oscilador:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_Config_TMR0:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_Config_ADC:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_Config_USART:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_Config_Puertos:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_LCD_Init_8bits:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Write_LCD:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_Print_Num:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_PORT_LCD:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_CMD_LCD:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_isr:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_main:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_Char_LCD:	
   567                           ; 1 bytes @ 0x0
   568                           
   569                           
   570                           ; 1 bytes @ 0x0
   571  0070                     	ds	1
   572  0071                     Valor_ADC@canal:
   573                           
   574                           ; 1 bytes @ 0x1
   575  0071                     	ds	1
   576  0072                     ??_isr:
   577                           
   578                           ; 1 bytes @ 0x2
   579  0072                     	ds	4
   580  0076                     ??_Config_Oscilador:
   581  0076                     ??_Config_TMR0:	
   582                           ; 1 bytes @ 0x6
   583                           
   584  0076                     ??_Config_ADC:	
   585                           ; 1 bytes @ 0x6
   586                           
   587  0076                     ??_Config_USART:	
   588                           ; 1 bytes @ 0x6
   589                           
   590  0076                     ??_Config_Puertos:	
   591                           ; 1 bytes @ 0x6
   592                           
   593  0076                     ??_PORT_LCD:	
   594                           ; 1 bytes @ 0x6
   595                           
   596  0076                     ??___wmul:	
   597                           ; 1 bytes @ 0x6
   598                           
   599  0076                     ??___awdiv:	
   600                           ; 1 bytes @ 0x6
   601                           
   602  0076                     PORT_LCD@v:	
   603                           ; 1 bytes @ 0x6
   604                           
   605  0076                     ___wmul@product:	
   606                           ; 1 bytes @ 0x6
   607                           
   608                           
   609                           ; 2 bytes @ 0x6
   610  0076                     	ds	1
   611  0077                     ??_CMD_LCD:
   612  0077                     ??_Char_LCD:	
   613                           ; 1 bytes @ 0x7
   614                           
   615                           
   616                           ; 1 bytes @ 0x7
   617  0077                     	ds	1
   618  0078                     ??_tabla_num:
   619                           
   620                           	psect	cstackBANK0
   621  0020                     __pcstackBANK0:	
   622                           ; 1 bytes @ 0x8
   623                           
   624  0020                     ?___wmul:
   625  0020                     ?___awdiv:	
   626                           ; 2 bytes @ 0x0
   627                           
   628  0020                     CMD_LCD@v:	
   629                           ; 2 bytes @ 0x0
   630                           
   631  0020                     Char_LCD@a:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0020                     ___wmul@multiplier:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0020                     ___awdiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640                           
   641                           ; 2 bytes @ 0x0
   642  0020                     	ds	1
   643  0021                     ??_LCD_Init_8bits:
   644  0021                     ?_Lcd_Set_Cursor:	
   645                           ; 1 bytes @ 0x1
   646                           
   647  0021                     ??_Write_LCD:	
   648                           ; 1 bytes @ 0x1
   649                           
   650  0021                     Lcd_Set_Cursor@b:	
   651                           ; 1 bytes @ 0x1
   652                           
   653                           
   654                           ; 1 bytes @ 0x1
   655  0021                     	ds	1
   656  0022                     ??_Lcd_Set_Cursor:
   657  0022                     Write_LCD@i:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0022                     ___wmul@multiplicand:	
   661                           ; 1 bytes @ 0x2
   662                           
   663  0022                     ___awdiv@dividend:	
   664                           ; 2 bytes @ 0x2
   665                           
   666                           
   667                           ; 2 bytes @ 0x2
   668  0022                     	ds	1
   669  0023                     Lcd_Set_Cursor@a:
   670  0023                     Write_LCD@a:	
   671                           ; 1 bytes @ 0x3
   672                           
   673                           
   674                           ; 1 bytes @ 0x3
   675  0023                     	ds	1
   676  0024                     ?_tabla_num:
   677  0024                     Lcd_Set_Cursor@temp:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0024                     ___awdiv@counter:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0024                     tabla_num@numero:	
   684                           ; 1 bytes @ 0x4
   685                           
   686                           
   687                           ; 2 bytes @ 0x4
   688  0024                     	ds	1
   689  0025                     ___awdiv@sign:
   690                           
   691                           ; 1 bytes @ 0x5
   692  0025                     	ds	1
   693  0026                     ___awdiv@quotient:
   694                           
   695                           ; 2 bytes @ 0x6
   696  0026                     	ds	2
   697  0028                     ??_Print_Num:
   698                           
   699                           ; 1 bytes @ 0x8
   700  0028                     	ds	2
   701  002A                     Print_Num@unidad:
   702                           
   703                           ; 2 bytes @ 0xA
   704  002A                     	ds	2
   705  002C                     Print_Num@valor:
   706                           
   707                           ; 1 bytes @ 0xC
   708  002C                     	ds	1
   709  002D                     Print_Num@decena:
   710                           
   711                           ; 2 bytes @ 0xD
   712  002D                     	ds	2
   713  002F                     Print_Num@centena:
   714                           
   715                           ; 2 bytes @ 0xF
   716  002F                     	ds	2
   717  0031                     Print_Num@temp:
   718                           
   719                           ; 2 bytes @ 0x11
   720  0031                     	ds	2
   721  0033                     ??_main:
   722                           
   723                           ; 1 bytes @ 0x13
   724  0033                     	ds	3
   725                           
   726                           	psect	maintext
   727  0196                     __pmaintext:	
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 86 in file "Lab_02.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : B00/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       3       0       0       0
   750 ;;      Totals:         0       3       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels required when called: 7
   753 ;; This function calls:
   754 ;;		_Config_ADC
   755 ;;		_Config_Oscilador
   756 ;;		_Config_Puertos
   757 ;;		_Config_TMR0
   758 ;;		_Config_USART
   759 ;;		_LCD_Init_8bits
   760 ;;		_Lcd_Set_Cursor
   761 ;;		_Print_Num
   762 ;;		_Write_LCD
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _main
   770  0196                     _main:
   771  0196                     l1353:	
   772                           ;incstack = 0
   773                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   774                           
   775  0196  120A  118A  2433  120A  118A  	fcall	_Config_Oscilador
   776  019B                     l1355:
   777  019B  120A  118A  2424  120A  118A  	fcall	_Config_TMR0
   778  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   779  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   780  01A2  00B3               	movwf	??_main
   781  01A3  0833               	movf	??_main,w
   782  01A4  00B8               	movwf	_Valor_TMR0
   783  01A5                     l1357:
   784  01A5  120A  118A  23CF  120A  118A  	fcall	_Config_ADC
   785  01AA                     l1359:
   786  01AA  120A  118A  2411  120A  118A  	fcall	_Config_USART
   787  01AF                     l1361:
   788  01AF  120A  118A  23E7  120A  118A  	fcall	_Config_Puertos
   789  01B4                     l1363:
   790  01B4  120A  118A  224E  120A  118A  	fcall	_LCD_Init_8bits
   791  01B9                     l1365:
   792  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   793  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   794  01BB  01A1               	clrf	Lcd_Set_Cursor@b
   795  01BC  0AA1               	incf	Lcd_Set_Cursor@b,f
   796  01BD  3001               	movlw	1
   797  01BE  120A  118A  2379  120A  118A  	fcall	_Lcd_Set_Cursor
   798  01C3                     l1367:
   799  01C3  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   800  01C4  120A  118A  2353  120A  118A  	fcall	_Write_LCD
   801  01C9                     l1369:
   802  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   803  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   804  01CB  0836               	movf	_Valor_Canal_12,w
   805  01CC  120A  118A  20A8  120A  118A  	fcall	_Print_Num
   806  01D1                     l1371:
   807  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   808  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   809  01D3  01A1               	clrf	Lcd_Set_Cursor@b
   810  01D4  0AA1               	incf	Lcd_Set_Cursor@b,f
   811  01D5  3002               	movlw	2
   812  01D6  120A  118A  2379  120A  118A  	fcall	_Lcd_Set_Cursor
   813  01DB                     l1373:
   814  01DB  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   815  01DC  120A  118A  2353  120A  118A  	fcall	_Write_LCD
   816  01E1                     l1375:
   817  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   818  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   819  01E3  0837               	movf	_Valor_Canal_10,w
   820  01E4  120A  118A  20A8  120A  118A  	fcall	_Print_Num
   821  01E9                     l1377:
   822  01E9  3002               	movlw	2
   823  01EA  1283               	bcf	3,5	;RP0=0, select bank0
   824  01EB  1303               	bcf	3,6	;RP1=0, select bank0
   825  01EC  00B5               	movwf	??_main+2
   826  01ED  3004               	movlw	4
   827  01EE  00B4               	movwf	??_main+1
   828  01EF  30B9               	movlw	185
   829  01F0  00B3               	movwf	??_main
   830  01F1                     u1017:
   831  01F1  0BB3               	decfsz	??_main,f
   832  01F2  29F1               	goto	u1017
   833  01F3  0BB4               	decfsz	??_main+1,f
   834  01F4  29F1               	goto	u1017
   835  01F5  0BB5               	decfsz	??_main+2,f
   836  01F6  29F1               	goto	u1017
   837  01F7  29F8               	nop2
   838  01F8  29B9               	goto	l1365
   839  01F9  120A  118A  280C   	ljmp	start
   840  01FC                     __end_of_main:
   841                           
   842                           	psect	text1
   843  00A8                     __ptext1:	
   844 ;; *************** function _Print_Num *****************
   845 ;; Defined at:
   846 ;;		line 65 in file "LCD.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  valor           1    wreg     unsigned char 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  valor           1   12[BANK0 ] unsigned char 
   851 ;;  temp            2   17[BANK0 ] int 
   852 ;;  centena         2   15[BANK0 ] int 
   853 ;;  decena          2   13[BANK0 ] int 
   854 ;;  unidad          2   10[BANK0 ] int 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       9       0       0       0
   866 ;;      Temps:          0       2       0       0       0
   867 ;;      Totals:         0      11       0       0       0
   868 ;;Total ram usage:       11 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 6
   871 ;; This function calls:
   872 ;;		_Write_LCD
   873 ;;		___awdiv
   874 ;;		___wmul
   875 ;;		_tabla_num
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _Print_Num
   883  00A8                     _Print_Num:
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _Print_Num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   887                           ;Print_Num@valor stored from wreg
   888  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   889  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   890  00AA  00AC               	movwf	Print_Num@valor
   891  00AB                     l1315:
   892                           
   893                           ;LCD.c: 66:     int temp;;LCD.c: 67:     int unidad, decena, centena;;LCD.c: 68:     tem
      +                          p = valor * 2;
   894  00AB  082C               	movf	Print_Num@valor,w
   895  00AC  00A8               	movwf	??_Print_Num
   896  00AD  01A9               	clrf	??_Print_Num+1
   897  00AE  1003               	clrc
   898  00AF  0D28               	rlf	??_Print_Num,w
   899  00B0  00B1               	movwf	Print_Num@temp
   900  00B1  0D29               	rlf	??_Print_Num+1,w
   901  00B2  00B2               	movwf	Print_Num@temp+1
   902  00B3                     l1317:
   903                           
   904                           ;LCD.c: 69:     centena = temp/100;
   905  00B3  3064               	movlw	100
   906  00B4  00A0               	movwf	___awdiv@divisor
   907  00B5  3000               	movlw	0
   908  00B6  00A1               	movwf	___awdiv@divisor+1
   909  00B7  0832               	movf	Print_Num@temp+1,w
   910  00B8  00A3               	movwf	___awdiv@dividend+1
   911  00B9  0831               	movf	Print_Num@temp,w
   912  00BA  00A2               	movwf	___awdiv@dividend
   913  00BB  120A  118A  212D  120A  118A  	fcall	___awdiv
   914  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   915  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   916  00C2  0821               	movf	?___awdiv+1,w
   917  00C3  00B0               	movwf	Print_Num@centena+1
   918  00C4  0820               	movf	?___awdiv,w
   919  00C5  00AF               	movwf	Print_Num@centena
   920  00C6                     l1319:
   921                           
   922                           ;LCD.c: 70:     temp = temp - centena*100;
   923  00C6  0830               	movf	Print_Num@centena+1,w
   924  00C7  00A1               	movwf	___wmul@multiplier+1
   925  00C8  082F               	movf	Print_Num@centena,w
   926  00C9  00A0               	movwf	___wmul@multiplier
   927  00CA  309C               	movlw	156
   928  00CB  00A2               	movwf	___wmul@multiplicand
   929  00CC  30FF               	movlw	255
   930  00CD  00A3               	movwf	___wmul@multiplicand+1
   931  00CE  120A  118A  232C  120A  118A  	fcall	___wmul
   932  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   933  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   934  00D5  0831               	movf	Print_Num@temp,w
   935  00D6  0720               	addwf	?___wmul,w
   936  00D7  00B1               	movwf	Print_Num@temp
   937  00D8  0832               	movf	Print_Num@temp+1,w
   938  00D9  1803               	skipnc
   939  00DA  0A32               	incf	Print_Num@temp+1,w
   940  00DB  0721               	addwf	?___wmul+1,w
   941  00DC  00B2               	movwf	Print_Num@temp+1
   942  00DD                     l1321:
   943                           
   944                           ;LCD.c: 71:     decena = temp/10;
   945  00DD  300A               	movlw	10
   946  00DE  00A0               	movwf	___awdiv@divisor
   947  00DF  3000               	movlw	0
   948  00E0  00A1               	movwf	___awdiv@divisor+1
   949  00E1  0832               	movf	Print_Num@temp+1,w
   950  00E2  00A3               	movwf	___awdiv@dividend+1
   951  00E3  0831               	movf	Print_Num@temp,w
   952  00E4  00A2               	movwf	___awdiv@dividend
   953  00E5  120A  118A  212D  120A  118A  	fcall	___awdiv
   954  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   955  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   956  00EC  0821               	movf	?___awdiv+1,w
   957  00ED  00AE               	movwf	Print_Num@decena+1
   958  00EE  0820               	movf	?___awdiv,w
   959  00EF  00AD               	movwf	Print_Num@decena
   960  00F0                     l1323:
   961                           
   962                           ;LCD.c: 72:     unidad = temp - decena*10;
   963  00F0  082E               	movf	Print_Num@decena+1,w
   964  00F1  00A1               	movwf	___wmul@multiplier+1
   965  00F2  082D               	movf	Print_Num@decena,w
   966  00F3  00A0               	movwf	___wmul@multiplier
   967  00F4  30F6               	movlw	246
   968  00F5  00A2               	movwf	___wmul@multiplicand
   969  00F6  30FF               	movlw	255
   970  00F7  00A3               	movwf	___wmul@multiplicand+1
   971  00F8  120A  118A  232C  120A  118A  	fcall	___wmul
   972  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   973  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   974  00FF  0831               	movf	Print_Num@temp,w
   975  0100  0720               	addwf	?___wmul,w
   976  0101  00AA               	movwf	Print_Num@unidad
   977  0102  0832               	movf	Print_Num@temp+1,w
   978  0103  1803               	skipnc
   979  0104  0A32               	incf	Print_Num@temp+1,w
   980  0105  0721               	addwf	?___wmul+1,w
   981  0106  00AB               	movwf	Print_Num@unidad+1
   982  0107                     l1325:
   983                           
   984                           ;LCD.c: 73:     tabla_num(centena);
   985  0107  0830               	movf	Print_Num@centena+1,w
   986  0108  00A5               	movwf	tabla_num@numero+1
   987  0109  082F               	movf	Print_Num@centena,w
   988  010A  00A4               	movwf	tabla_num@numero
   989  010B  120A  118A  201B  120A  118A  	fcall	_tabla_num
   990  0110                     l1327:
   991                           
   992                           ;LCD.c: 74:     Write_LCD(".");
   993  0110  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   994  0111  120A  118A  2353  120A  118A  	fcall	_Write_LCD
   995  0116                     l1329:
   996                           
   997                           ;LCD.c: 75:     tabla_num(decena);
   998  0116  1283               	bcf	3,5	;RP0=0, select bank0
   999  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0118  082E               	movf	Print_Num@decena+1,w
  1001  0119  00A5               	movwf	tabla_num@numero+1
  1002  011A  082D               	movf	Print_Num@decena,w
  1003  011B  00A4               	movwf	tabla_num@numero
  1004  011C  120A  118A  201B  120A  118A  	fcall	_tabla_num
  1005  0121                     l1331:
  1006                           
  1007                           ;LCD.c: 76:     tabla_num(unidad);
  1008  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0123  082B               	movf	Print_Num@unidad+1,w
  1011  0124  00A5               	movwf	tabla_num@numero+1
  1012  0125  082A               	movf	Print_Num@unidad,w
  1013  0126  00A4               	movwf	tabla_num@numero
  1014  0127  120A  118A  201B  120A  118A  	fcall	_tabla_num
  1015  012C                     l209:
  1016  012C  0008               	return
  1017  012D                     __end_of_Print_Num:
  1018                           
  1019                           	psect	text2
  1020  001B                     __ptext2:	
  1021 ;; *************** function _tabla_num *****************
  1022 ;; Defined at:
  1023 ;;		line 78 in file "LCD.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  numero          2    4[BANK0 ] int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       2       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0
  1040 ;;      Totals:         0       2       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 5
  1044 ;; This function calls:
  1045 ;;		_Write_LCD
  1046 ;; This function is called by:
  1047 ;;		_Print_Num
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function _tabla_num
  1053  001B                     _tabla_num:
  1054  001B                     l1159:	
  1055                           ;incstack = 0
  1056                           ; Regs used in _tabla_num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1057                           
  1058                           
  1059                           ;LCD.c: 82:     if (numero == 1){
  1060  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1061  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1062  001D  0324               	decf	tabla_num@numero,w
  1063  001E  0425               	iorwf	tabla_num@numero+1,w
  1064  001F  1D03               	btfss	3,2
  1065  0020  2822               	goto	u721
  1066  0021  2823               	goto	u720
  1067  0022                     u721:
  1068  0022  282A               	goto	l1163
  1069  0023                     u720:
  1070  0023                     l1161:
  1071                           
  1072                           ;LCD.c: 83:     Write_LCD("1");
  1073  0023  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1074  0024  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1075                           
  1076                           ;LCD.c: 84:     } else if (numero == 2){
  1077  0029  28A7               	goto	l231
  1078  002A                     l1163:
  1079  002A  3002               	movlw	2
  1080  002B  0624               	xorwf	tabla_num@numero,w
  1081  002C  0425               	iorwf	tabla_num@numero+1,w
  1082  002D  1D03               	btfss	3,2
  1083  002E  2830               	goto	u731
  1084  002F  2831               	goto	u730
  1085  0030                     u731:
  1086  0030  2838               	goto	l1167
  1087  0031                     u730:
  1088  0031                     l1165:
  1089                           
  1090                           ;LCD.c: 85:         Write_LCD("2");
  1091  0031  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1092  0032  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1093                           
  1094                           ;LCD.c: 86:     } else if (numero == 3){
  1095  0037  28A7               	goto	l231
  1096  0038                     l1167:
  1097  0038  3003               	movlw	3
  1098  0039  0624               	xorwf	tabla_num@numero,w
  1099  003A  0425               	iorwf	tabla_num@numero+1,w
  1100  003B  1D03               	btfss	3,2
  1101  003C  283E               	goto	u741
  1102  003D  283F               	goto	u740
  1103  003E                     u741:
  1104  003E  2846               	goto	l1171
  1105  003F                     u740:
  1106  003F                     l1169:
  1107                           
  1108                           ;LCD.c: 87:         Write_LCD("3");
  1109  003F  3019               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1110  0040  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1111                           
  1112                           ;LCD.c: 88:     } else if (numero == 4){
  1113  0045  28A7               	goto	l231
  1114  0046                     l1171:
  1115  0046  3004               	movlw	4
  1116  0047  0624               	xorwf	tabla_num@numero,w
  1117  0048  0425               	iorwf	tabla_num@numero+1,w
  1118  0049  1D03               	btfss	3,2
  1119  004A  284C               	goto	u751
  1120  004B  284D               	goto	u750
  1121  004C                     u751:
  1122  004C  2854               	goto	l1175
  1123  004D                     u750:
  1124  004D                     l1173:
  1125                           
  1126                           ;LCD.c: 89:         Write_LCD("4");
  1127  004D  301B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1128  004E  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1129                           
  1130                           ;LCD.c: 90:     } else if (numero == 5){
  1131  0053  28A7               	goto	l231
  1132  0054                     l1175:
  1133  0054  3005               	movlw	5
  1134  0055  0624               	xorwf	tabla_num@numero,w
  1135  0056  0425               	iorwf	tabla_num@numero+1,w
  1136  0057  1D03               	btfss	3,2
  1137  0058  285A               	goto	u761
  1138  0059  285B               	goto	u760
  1139  005A                     u761:
  1140  005A  2862               	goto	l1179
  1141  005B                     u760:
  1142  005B                     l1177:
  1143                           
  1144                           ;LCD.c: 91:         Write_LCD("5");
  1145  005B  301D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1146  005C  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1147                           
  1148                           ;LCD.c: 92:     } else if (numero == 6){
  1149  0061  28A7               	goto	l231
  1150  0062                     l1179:
  1151  0062  3006               	movlw	6
  1152  0063  0624               	xorwf	tabla_num@numero,w
  1153  0064  0425               	iorwf	tabla_num@numero+1,w
  1154  0065  1D03               	btfss	3,2
  1155  0066  2868               	goto	u771
  1156  0067  2869               	goto	u770
  1157  0068                     u771:
  1158  0068  2870               	goto	l1183
  1159  0069                     u770:
  1160  0069                     l1181:
  1161                           
  1162                           ;LCD.c: 93:         Write_LCD("6");
  1163  0069  301F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1164  006A  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1165                           
  1166                           ;LCD.c: 94:     } else if (numero == 7){
  1167  006F  28A7               	goto	l231
  1168  0070                     l1183:
  1169  0070  3007               	movlw	7
  1170  0071  0624               	xorwf	tabla_num@numero,w
  1171  0072  0425               	iorwf	tabla_num@numero+1,w
  1172  0073  1D03               	btfss	3,2
  1173  0074  2876               	goto	u781
  1174  0075  2877               	goto	u780
  1175  0076                     u781:
  1176  0076  287E               	goto	l1187
  1177  0077                     u780:
  1178  0077                     l1185:
  1179                           
  1180                           ;LCD.c: 95:         Write_LCD("7");
  1181  0077  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1182  0078  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1183                           
  1184                           ;LCD.c: 96:     } else if (numero == 8){
  1185  007D  28A7               	goto	l231
  1186  007E                     l1187:
  1187  007E  3008               	movlw	8
  1188  007F  0624               	xorwf	tabla_num@numero,w
  1189  0080  0425               	iorwf	tabla_num@numero+1,w
  1190  0081  1D03               	btfss	3,2
  1191  0082  2884               	goto	u791
  1192  0083  2885               	goto	u790
  1193  0084                     u791:
  1194  0084  288C               	goto	l1191
  1195  0085                     u790:
  1196  0085                     l1189:
  1197                           
  1198                           ;LCD.c: 97:         Write_LCD("8");
  1199  0085  3023               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1200  0086  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1201                           
  1202                           ;LCD.c: 98:     } else if (numero == 9){
  1203  008B  28A7               	goto	l231
  1204  008C                     l1191:
  1205  008C  3009               	movlw	9
  1206  008D  0624               	xorwf	tabla_num@numero,w
  1207  008E  0425               	iorwf	tabla_num@numero+1,w
  1208  008F  1D03               	btfss	3,2
  1209  0090  2892               	goto	u801
  1210  0091  2893               	goto	u800
  1211  0092                     u801:
  1212  0092  289A               	goto	l1195
  1213  0093                     u800:
  1214  0093                     l1193:
  1215                           
  1216                           ;LCD.c: 99:         Write_LCD("9");
  1217  0093  3025               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1218  0094  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1219                           
  1220                           ;LCD.c: 100:     } else if (numero == 0){
  1221  0099  28A7               	goto	l231
  1222  009A                     l1195:
  1223  009A  0824               	movf	tabla_num@numero,w
  1224  009B  0425               	iorwf	tabla_num@numero+1,w
  1225  009C  1D03               	btfss	3,2
  1226  009D  289F               	goto	u811
  1227  009E  28A0               	goto	u810
  1228  009F                     u811:
  1229  009F  28A7               	goto	l225
  1230  00A0                     u810:
  1231  00A0                     l1197:
  1232                           
  1233                           ;LCD.c: 101:         Write_LCD("0");
  1234  00A0  3013               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1235  00A1  120A  118A  2353  120A  118A  	fcall	_Write_LCD
  1236  00A6  28A7               	goto	l231
  1237  00A7                     l225:
  1238  00A7                     l231:
  1239  00A7  0008               	return
  1240  00A8                     __end_of_tabla_num:
  1241                           
  1242                           	psect	text3
  1243  0353                     __ptext3:	
  1244 ;; *************** function _Write_LCD *****************
  1245 ;; Defined at:
  1246 ;;		line 59 in file "LCD.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  a               1    wreg     PTR unsigned char 
  1249 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  1250 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1251 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(8), 
  1252 ;;		 -> STR_1(8), 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  a               1    3[BANK0 ] PTR unsigned char 
  1255 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  1256 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1257 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(8), 
  1258 ;;		 -> STR_1(8), 
  1259 ;;  i               1    2[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       2       0       0       0
  1271 ;;      Temps:          0       1       0       0       0
  1272 ;;      Totals:         0       3       0       0       0
  1273 ;;Total ram usage:        3 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 4
  1276 ;; This function calls:
  1277 ;;		_Char_LCD
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;;		_Print_Num
  1281 ;;		_tabla_num
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _Write_LCD
  1287  0353                     _Write_LCD:
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _Write_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1291                           ;Write_LCD@a stored from wreg
  1292  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0355  00A3               	movwf	Write_LCD@a
  1295  0356                     l1141:
  1296                           
  1297                           ;LCD.c: 60:     char i;;LCD.c: 61:     for (i = 0; a[i] != '\0'; i++)
  1298  0356  01A2               	clrf	Write_LCD@i
  1299  0357  2B6B               	goto	l1147
  1300  0358                     l1143:
  1301                           
  1302                           ;LCD.c: 62:         Char_LCD(a[i]);
  1303  0358  0822               	movf	Write_LCD@i,w
  1304  0359  0723               	addwf	Write_LCD@a,w
  1305  035A  0084               	movwf	4
  1306  035B  120A  118A  2300  120A  118A  	fcall	stringdir
  1307  0360  120A  118A  239F  120A  118A  	fcall	_Char_LCD
  1308  0365                     l1145:
  1309  0365  3001               	movlw	1
  1310  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0368  00A1               	movwf	??_Write_LCD
  1313  0369  0821               	movf	??_Write_LCD,w
  1314  036A  07A2               	addwf	Write_LCD@i,f
  1315  036B                     l1147:
  1316  036B  0822               	movf	Write_LCD@i,w
  1317  036C  0723               	addwf	Write_LCD@a,w
  1318  036D  0084               	movwf	4
  1319  036E  120A  118A  2300  120A  118A  	fcall	stringdir
  1320  0373  3A00               	xorlw	0
  1321  0374  1D03               	skipz
  1322  0375  2B77               	goto	u711
  1323  0376  2B78               	goto	u710
  1324  0377                     u711:
  1325  0377  2B58               	goto	l1143
  1326  0378                     u710:
  1327  0378                     l206:
  1328  0378  0008               	return
  1329  0379                     __end_of_Write_LCD:
  1330                           
  1331                           	psect	text4
  1332  039F                     __ptext4:	
  1333 ;; *************** function _Char_LCD *****************
  1334 ;; Defined at:
  1335 ;;		line 52 in file "LCD.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  a               1    wreg     unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  a               1    0[BANK0 ] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0       1       0       0       0
  1351 ;;      Temps:          1       0       0       0       0
  1352 ;;      Totals:         1       1       0       0       0
  1353 ;;Total ram usage:        2 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 3
  1356 ;; This function calls:
  1357 ;;		_PORT_LCD
  1358 ;; This function is called by:
  1359 ;;		_Write_LCD
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _Char_LCD
  1365  039F                     _Char_LCD:
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _Char_LCD: [wreg+status,2+status,0+pclath+cstack]
  1369                           ;Char_LCD@a stored from wreg
  1370  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1371  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1372  03A1  00A0               	movwf	Char_LCD@a
  1373  03A2                     l1131:
  1374                           
  1375                           ;LCD.c: 53:     PORTEbits.RE0 = 1;
  1376  03A2  1409               	bsf	9,0	;volatile
  1377  03A3                     l1133:
  1378                           
  1379                           ;LCD.c: 54:     PORT_LCD(a);
  1380  03A3  0820               	movf	Char_LCD@a,w
  1381  03A4  120A  118A  21FC  120A  118A  	fcall	_PORT_LCD
  1382  03A9                     l1135:
  1383                           
  1384                           ;LCD.c: 55:     PORTEbits.RE1 = 1;
  1385  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1386  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1387  03AB  1489               	bsf	9,1	;volatile
  1388  03AC                     l1137:
  1389                           
  1390                           ;LCD.c: 56:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  1391  03AC  30C7               	movlw	199
  1392  03AD  00F7               	movwf	??_Char_LCD
  1393  03AE                     u1027:
  1394  03AE  2BAF               	nop2
  1395  03AF  0BF7               	decfsz	??_Char_LCD,f
  1396  03B0  2BAE               	goto	u1027
  1397  03B1  2BB2               	nop2
  1398  03B2  2BB3               	nop2
  1399  03B3                     l1139:
  1400                           
  1401                           ;LCD.c: 57:     PORTEbits.RE1 = 0;
  1402  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1403  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1404  03B5  1089               	bcf	9,1	;volatile
  1405  03B6                     l200:
  1406  03B6  0008               	return
  1407  03B7                     __end_of_Char_LCD:
  1408                           
  1409                           	psect	text5
  1410  032C                     __ptext5:	
  1411 ;; *************** function ___wmul *****************
  1412 ;; Defined at:
  1413 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1416 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  product         2    6[COMMON] unsigned int 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    0[BANK0 ] unsigned int 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       4       0       0       0
  1429 ;;      Locals:         2       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0
  1431 ;;      Totals:         2       4       0       0       0
  1432 ;;Total ram usage:        6 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 2
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_Print_Num
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function ___wmul
  1444  032C                     ___wmul:
  1445  032C                     l1199:	
  1446                           ;incstack = 0
  1447                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1448                           
  1449  032C  01F6               	clrf	___wmul@product
  1450  032D  01F7               	clrf	___wmul@product+1
  1451  032E                     l1201:
  1452  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1453  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0330  1C20               	btfss	___wmul@multiplier,0
  1455  0331  2B33               	goto	u821
  1456  0332  2B34               	goto	u820
  1457  0333                     u821:
  1458  0333  2B3A               	goto	l317
  1459  0334                     u820:
  1460  0334                     l1203:
  1461  0334  0822               	movf	___wmul@multiplicand,w
  1462  0335  07F6               	addwf	___wmul@product,f
  1463  0336  1803               	skipnc
  1464  0337  0AF7               	incf	___wmul@product+1,f
  1465  0338  0823               	movf	___wmul@multiplicand+1,w
  1466  0339  07F7               	addwf	___wmul@product+1,f
  1467  033A                     l317:
  1468  033A  3001               	movlw	1
  1469  033B                     u835:
  1470  033B  1003               	clrc
  1471  033C  0DA2               	rlf	___wmul@multiplicand,f
  1472  033D  0DA3               	rlf	___wmul@multiplicand+1,f
  1473  033E  3EFF               	addlw	-1
  1474  033F  1D03               	skipz
  1475  0340  2B3B               	goto	u835
  1476  0341                     l1205:
  1477  0341  3001               	movlw	1
  1478  0342                     u845:
  1479  0342  1003               	clrc
  1480  0343  0CA1               	rrf	___wmul@multiplier+1,f
  1481  0344  0CA0               	rrf	___wmul@multiplier,f
  1482  0345  3EFF               	addlw	-1
  1483  0346  1D03               	skipz
  1484  0347  2B42               	goto	u845
  1485  0348                     l1207:
  1486  0348  0820               	movf	___wmul@multiplier,w
  1487  0349  0421               	iorwf	___wmul@multiplier+1,w
  1488  034A  1D03               	btfss	3,2
  1489  034B  2B4D               	goto	u851
  1490  034C  2B4E               	goto	u850
  1491  034D                     u851:
  1492  034D  2B2E               	goto	l1201
  1493  034E                     u850:
  1494  034E                     l1209:
  1495  034E  0877               	movf	___wmul@product+1,w
  1496  034F  00A1               	movwf	?___wmul+1
  1497  0350  0876               	movf	___wmul@product,w
  1498  0351  00A0               	movwf	?___wmul
  1499  0352                     l319:
  1500  0352  0008               	return
  1501  0353                     __end_of___wmul:
  1502                           
  1503                           	psect	text6
  1504  012D                     __ptext6:	
  1505 ;; *************** function ___awdiv *****************
  1506 ;; Defined at:
  1507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  divisor         2    0[BANK0 ] int 
  1510 ;;  dividend        2    2[BANK0 ] int 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  quotient        2    6[BANK0 ] int 
  1513 ;;  sign            1    5[BANK0 ] unsigned char 
  1514 ;;  counter         1    4[BANK0 ] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  2    0[BANK0 ] int 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       4       0       0       0
  1525 ;;      Locals:         0       4       0       0       0
  1526 ;;      Temps:          1       0       0       0       0
  1527 ;;      Totals:         1       8       0       0       0
  1528 ;;Total ram usage:        9 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 2
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_Print_Num
  1535 ;;		_Transmisor_USART
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function ___awdiv
  1541  012D                     ___awdiv:
  1542  012D                     l1213:	
  1543                           ;incstack = 0
  1544                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1545                           
  1546  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1547  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1548  012F  01A5               	clrf	___awdiv@sign
  1549  0130                     l1215:
  1550  0130  1FA1               	btfss	___awdiv@divisor+1,7
  1551  0131  2933               	goto	u861
  1552  0132  2934               	goto	u860
  1553  0133                     u861:
  1554  0133  293B               	goto	l1221
  1555  0134                     u860:
  1556  0134                     l1217:
  1557  0134  09A0               	comf	___awdiv@divisor,f
  1558  0135  09A1               	comf	___awdiv@divisor+1,f
  1559  0136  0AA0               	incf	___awdiv@divisor,f
  1560  0137  1903               	skipnz
  1561  0138  0AA1               	incf	___awdiv@divisor+1,f
  1562  0139                     l1219:
  1563  0139  01A5               	clrf	___awdiv@sign
  1564  013A  0AA5               	incf	___awdiv@sign,f
  1565  013B                     l1221:
  1566  013B  1FA3               	btfss	___awdiv@dividend+1,7
  1567  013C  293E               	goto	u871
  1568  013D  293F               	goto	u870
  1569  013E                     u871:
  1570  013E  2948               	goto	l1227
  1571  013F                     u870:
  1572  013F                     l1223:
  1573  013F  09A2               	comf	___awdiv@dividend,f
  1574  0140  09A3               	comf	___awdiv@dividend+1,f
  1575  0141  0AA2               	incf	___awdiv@dividend,f
  1576  0142  1903               	skipnz
  1577  0143  0AA3               	incf	___awdiv@dividend+1,f
  1578  0144                     l1225:
  1579  0144  3001               	movlw	1
  1580  0145  00F6               	movwf	??___awdiv
  1581  0146  0876               	movf	??___awdiv,w
  1582  0147  06A5               	xorwf	___awdiv@sign,f
  1583  0148                     l1227:
  1584  0148  01A6               	clrf	___awdiv@quotient
  1585  0149  01A7               	clrf	___awdiv@quotient+1
  1586  014A                     l1229:
  1587  014A  0820               	movf	___awdiv@divisor,w
  1588  014B  0421               	iorwf	___awdiv@divisor+1,w
  1589  014C  1903               	btfsc	3,2
  1590  014D  294F               	goto	u881
  1591  014E  2950               	goto	u880
  1592  014F                     u881:
  1593  014F  2987               	goto	l1249
  1594  0150                     u880:
  1595  0150                     l1231:
  1596  0150  01A4               	clrf	___awdiv@counter
  1597  0151  0AA4               	incf	___awdiv@counter,f
  1598  0152  295E               	goto	l1237
  1599  0153                     l1233:
  1600  0153  3001               	movlw	1
  1601  0154                     u895:
  1602  0154  1003               	clrc
  1603  0155  0DA0               	rlf	___awdiv@divisor,f
  1604  0156  0DA1               	rlf	___awdiv@divisor+1,f
  1605  0157  3EFF               	addlw	-1
  1606  0158  1D03               	skipz
  1607  0159  2954               	goto	u895
  1608  015A                     l1235:
  1609  015A  3001               	movlw	1
  1610  015B  00F6               	movwf	??___awdiv
  1611  015C  0876               	movf	??___awdiv,w
  1612  015D  07A4               	addwf	___awdiv@counter,f
  1613  015E                     l1237:
  1614  015E  1FA1               	btfss	___awdiv@divisor+1,7
  1615  015F  2961               	goto	u901
  1616  0160  2962               	goto	u900
  1617  0161                     u901:
  1618  0161  2953               	goto	l1233
  1619  0162                     u900:
  1620  0162                     l1239:
  1621  0162  3001               	movlw	1
  1622  0163                     u915:
  1623  0163  1003               	clrc
  1624  0164  0DA6               	rlf	___awdiv@quotient,f
  1625  0165  0DA7               	rlf	___awdiv@quotient+1,f
  1626  0166  3EFF               	addlw	-1
  1627  0167  1D03               	skipz
  1628  0168  2963               	goto	u915
  1629  0169  0821               	movf	___awdiv@divisor+1,w
  1630  016A  0223               	subwf	___awdiv@dividend+1,w
  1631  016B  1D03               	skipz
  1632  016C  296F               	goto	u925
  1633  016D  0820               	movf	___awdiv@divisor,w
  1634  016E  0222               	subwf	___awdiv@dividend,w
  1635  016F                     u925:
  1636  016F  1C03               	skipc
  1637  0170  2972               	goto	u921
  1638  0171  2973               	goto	u920
  1639  0172                     u921:
  1640  0172  297A               	goto	l1245
  1641  0173                     u920:
  1642  0173                     l1241:
  1643  0173  0820               	movf	___awdiv@divisor,w
  1644  0174  02A2               	subwf	___awdiv@dividend,f
  1645  0175  0821               	movf	___awdiv@divisor+1,w
  1646  0176  1C03               	skipc
  1647  0177  03A3               	decf	___awdiv@dividend+1,f
  1648  0178  02A3               	subwf	___awdiv@dividend+1,f
  1649  0179                     l1243:
  1650  0179  1426               	bsf	___awdiv@quotient,0
  1651  017A                     l1245:
  1652  017A  3001               	movlw	1
  1653  017B                     u935:
  1654  017B  1003               	clrc
  1655  017C  0CA1               	rrf	___awdiv@divisor+1,f
  1656  017D  0CA0               	rrf	___awdiv@divisor,f
  1657  017E  3EFF               	addlw	-1
  1658  017F  1D03               	skipz
  1659  0180  297B               	goto	u935
  1660  0181                     l1247:
  1661  0181  3001               	movlw	1
  1662  0182  02A4               	subwf	___awdiv@counter,f
  1663  0183  1D03               	btfss	3,2
  1664  0184  2986               	goto	u941
  1665  0185  2987               	goto	u940
  1666  0186                     u941:
  1667  0186  2962               	goto	l1239
  1668  0187                     u940:
  1669  0187                     l1249:
  1670  0187  0825               	movf	___awdiv@sign,w
  1671  0188  1903               	btfsc	3,2
  1672  0189  298B               	goto	u951
  1673  018A  298C               	goto	u950
  1674  018B                     u951:
  1675  018B  2991               	goto	l1253
  1676  018C                     u950:
  1677  018C                     l1251:
  1678  018C  09A6               	comf	___awdiv@quotient,f
  1679  018D  09A7               	comf	___awdiv@quotient+1,f
  1680  018E  0AA6               	incf	___awdiv@quotient,f
  1681  018F  1903               	skipnz
  1682  0190  0AA7               	incf	___awdiv@quotient+1,f
  1683  0191                     l1253:
  1684  0191  0827               	movf	___awdiv@quotient+1,w
  1685  0192  00A1               	movwf	?___awdiv+1
  1686  0193  0826               	movf	___awdiv@quotient,w
  1687  0194  00A0               	movwf	?___awdiv
  1688  0195                     l470:
  1689  0195  0008               	return
  1690  0196                     __end_of___awdiv:
  1691                           
  1692                           	psect	text7
  1693  0379                     __ptext7:	
  1694 ;; *************** function _Lcd_Set_Cursor *****************
  1695 ;; Defined at:
  1696 ;;		line 37 in file "LCD.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  a               1    wreg     unsigned char 
  1699 ;;  b               1    1[BANK0 ] unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  a               1    3[BANK0 ] unsigned char 
  1702 ;;  temp            1    4[BANK0 ] unsigned char 
  1703 ;;  y               1    0        unsigned char 
  1704 ;;  z               1    0        unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, pclath, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         0       1       0       0       0
  1715 ;;      Locals:         0       2       0       0       0
  1716 ;;      Temps:          0       1       0       0       0
  1717 ;;      Totals:         0       4       0       0       0
  1718 ;;Total ram usage:        4 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 4
  1721 ;; This function calls:
  1722 ;;		_CMD_LCD
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _Lcd_Set_Cursor
  1730  0379                     _Lcd_Set_Cursor:
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1734                           ;Lcd_Set_Cursor@a stored from wreg
  1735  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1736  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1737  037B  00A3               	movwf	Lcd_Set_Cursor@a
  1738  037C                     l1303:
  1739                           
  1740                           ;LCD.c: 38:     char temp, z, y;;LCD.c: 39:     if (a == 1) {
  1741  037C  0323               	decf	Lcd_Set_Cursor@a,w
  1742  037D  1D03               	btfss	3,2
  1743  037E  2B80               	goto	u961
  1744  037F  2B81               	goto	u960
  1745  0380                     u961:
  1746  0380  2B8D               	goto	l1309
  1747  0381                     u960:
  1748  0381                     l1305:
  1749                           
  1750                           ;LCD.c: 40:         temp = 0x80 + b - 1;
  1751  0381  0821               	movf	Lcd_Set_Cursor@b,w
  1752  0382  3E7F               	addlw	127
  1753  0383  00A2               	movwf	??_Lcd_Set_Cursor
  1754  0384  0822               	movf	??_Lcd_Set_Cursor,w
  1755  0385  00A4               	movwf	Lcd_Set_Cursor@temp
  1756  0386                     l1307:
  1757                           
  1758                           ;LCD.c: 41:         CMD_LCD(temp);
  1759  0386  0824               	movf	Lcd_Set_Cursor@temp,w
  1760  0387  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1761                           
  1762                           ;LCD.c: 42:     } else if (a == 2) {
  1763  038C  2B9E               	goto	l194
  1764  038D                     l1309:
  1765  038D  3002               	movlw	2
  1766  038E  0623               	xorwf	Lcd_Set_Cursor@a,w
  1767  038F  1D03               	btfss	3,2
  1768  0390  2B92               	goto	u971
  1769  0391  2B93               	goto	u970
  1770  0392                     u971:
  1771  0392  2B9E               	goto	l194
  1772  0393                     u970:
  1773  0393                     l1311:
  1774                           
  1775                           ;LCD.c: 43:         temp = 0xC0 + b - 1;
  1776  0393  0821               	movf	Lcd_Set_Cursor@b,w
  1777  0394  3EBF               	addlw	191
  1778  0395  00A2               	movwf	??_Lcd_Set_Cursor
  1779  0396  0822               	movf	??_Lcd_Set_Cursor,w
  1780  0397  00A4               	movwf	Lcd_Set_Cursor@temp
  1781  0398                     l1313:
  1782                           
  1783                           ;LCD.c: 44:         CMD_LCD(temp);
  1784  0398  0824               	movf	Lcd_Set_Cursor@temp,w
  1785  0399  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1786  039E                     l194:
  1787  039E  0008               	return
  1788  039F                     __end_of_Lcd_Set_Cursor:
  1789                           
  1790                           	psect	text8
  1791  024E                     __ptext8:	
  1792 ;; *************** function _LCD_Init_8bits *****************
  1793 ;; Defined at:
  1794 ;;		line 5 in file "LCD.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0
  1810 ;;      Temps:          0       2       0       0       0
  1811 ;;      Totals:         0       2       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 4
  1815 ;; This function calls:
  1816 ;;		_CMD_LCD
  1817 ;;		_PORT_LCD
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _LCD_Init_8bits
  1825  024E                     _LCD_Init_8bits:
  1826  024E                     l1293:	
  1827                           ;incstack = 0
  1828                           ; Regs used in _LCD_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  1829                           
  1830                           
  1831                           ;LCD.c: 6:     PORT_LCD(0);
  1832  024E  3000               	movlw	0
  1833  024F  120A  118A  21FC  120A  118A  	fcall	_PORT_LCD
  1834  0254                     l1295:
  1835                           
  1836                           ;LCD.c: 7:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1837  0254  3034               	movlw	52
  1838  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0257  00A2               	movwf	??_LCD_Init_8bits+1
  1841  0258  30F1               	movlw	241
  1842  0259  00A1               	movwf	??_LCD_Init_8bits
  1843  025A                     u1037:
  1844  025A  0BA1               	decfsz	??_LCD_Init_8bits,f
  1845  025B  2A5A               	goto	u1037
  1846  025C  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1847  025D  2A5A               	goto	u1037
  1848  025E                     l1297:
  1849                           
  1850                           ;LCD.c: 8:     CMD_LCD(0b111000);
  1851  025E  3038               	movlw	56
  1852  025F  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1853                           
  1854                           ;LCD.c: 9:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1855  0264  3034               	movlw	52
  1856  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0267  00A2               	movwf	??_LCD_Init_8bits+1
  1859  0268  30F1               	movlw	241
  1860  0269  00A1               	movwf	??_LCD_Init_8bits
  1861  026A                     u1047:
  1862  026A  0BA1               	decfsz	??_LCD_Init_8bits,f
  1863  026B  2A6A               	goto	u1047
  1864  026C  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1865  026D  2A6A               	goto	u1047
  1866  026E                     l1299:
  1867                           
  1868                           ;LCD.c: 10:     CMD_LCD(0b1100);
  1869  026E  300C               	movlw	12
  1870  026F  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1871  0274                     l1301:
  1872                           
  1873                           ;LCD.c: 11:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1874  0274  3034               	movlw	52
  1875  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0277  00A2               	movwf	??_LCD_Init_8bits+1
  1878  0278  30F1               	movlw	241
  1879  0279  00A1               	movwf	??_LCD_Init_8bits
  1880  027A                     u1057:
  1881  027A  0BA1               	decfsz	??_LCD_Init_8bits,f
  1882  027B  2A7A               	goto	u1057
  1883  027C  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1884  027D  2A7A               	goto	u1057
  1885                           
  1886                           ;LCD.c: 12:     CMD_LCD(0b1);
  1887  027E  3001               	movlw	1
  1888  027F  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1889                           
  1890                           ;LCD.c: 14:     CMD_LCD(0b111000);
  1891  0284  3038               	movlw	56
  1892  0285  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1893                           
  1894                           ;LCD.c: 15:     CMD_LCD(0b1000);
  1895  028A  3008               	movlw	8
  1896  028B  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1897                           
  1898                           ;LCD.c: 16:     CMD_LCD(0b1);
  1899  0290  3001               	movlw	1
  1900  0291  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1901                           
  1902                           ;LCD.c: 17:     CMD_LCD(0b110);
  1903  0296  3006               	movlw	6
  1904  0297  120A  118A  23B7  120A  118A  	fcall	_CMD_LCD
  1905  029C                     l182:
  1906  029C  0008               	return
  1907  029D                     __end_of_LCD_Init_8bits:
  1908                           
  1909                           	psect	text9
  1910  03B7                     __ptext9:	
  1911 ;; *************** function _CMD_LCD *****************
  1912 ;; Defined at:
  1913 ;;		line 30 in file "LCD.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  v               1    wreg     unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  v               1    0[BANK0 ] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       1       0       0       0
  1929 ;;      Temps:          1       0       0       0       0
  1930 ;;      Totals:         1       1       0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 3
  1934 ;; This function calls:
  1935 ;;		_PORT_LCD
  1936 ;; This function is called by:
  1937 ;;		_LCD_Init_8bits
  1938 ;;		_Lcd_Set_Cursor
  1939 ;;		_Clear_LCD
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _CMD_LCD
  1945  03B7                     _CMD_LCD:
  1946                           
  1947                           ;incstack = 0
  1948                           ; Regs used in _CMD_LCD: [wreg+status,2+status,0+pclath+cstack]
  1949                           ;CMD_LCD@v stored from wreg
  1950  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1951  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1952  03B9  00A0               	movwf	CMD_LCD@v
  1953  03BA                     l1149:
  1954                           
  1955                           ;LCD.c: 31:     PORTEbits.RE0 = 0;
  1956  03BA  1009               	bcf	9,0	;volatile
  1957  03BB                     l1151:
  1958                           
  1959                           ;LCD.c: 32:     PORT_LCD(v);
  1960  03BB  0820               	movf	CMD_LCD@v,w
  1961  03BC  120A  118A  21FC  120A  118A  	fcall	_PORT_LCD
  1962  03C1                     l1153:
  1963                           
  1964                           ;LCD.c: 33:     PORTEbits.RE1 = 1;
  1965  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1966  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1967  03C3  1489               	bsf	9,1	;volatile
  1968  03C4                     l1155:
  1969                           
  1970                           ;LCD.c: 34:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  1971  03C4  30C7               	movlw	199
  1972  03C5  00F7               	movwf	??_CMD_LCD
  1973  03C6                     u1067:
  1974  03C6  2BC7               	nop2
  1975  03C7  0BF7               	decfsz	??_CMD_LCD,f
  1976  03C8  2BC6               	goto	u1067
  1977  03C9  2BCA               	nop2
  1978  03CA  2BCB               	nop2
  1979  03CB                     l1157:
  1980                           
  1981                           ;LCD.c: 35:     PORTEbits.RE1 = 0;
  1982  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1983  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1984  03CD  1089               	bcf	9,1	;volatile
  1985  03CE                     l188:
  1986  03CE  0008               	return
  1987  03CF                     __end_of_CMD_LCD:
  1988                           
  1989                           	psect	text10
  1990  01FC                     __ptext10:	
  1991 ;; *************** function _PORT_LCD *****************
  1992 ;; Defined at:
  1993 ;;		line 20 in file "LCD.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  v               1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  v               1    6[COMMON] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         1       0       0       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 2
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_LCD_Init_8bits
  2018 ;;		_CMD_LCD
  2019 ;;		_Char_LCD
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _PORT_LCD
  2025  01FC                     _PORT_LCD:
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _PORT_LCD: [wreg]
  2029                           ;PORT_LCD@v stored from wreg
  2030  01FC  00F6               	movwf	PORT_LCD@v
  2031  01FD                     l1129:
  2032                           
  2033                           ;LCD.c: 21:     PORTAbits.RA0 = v & 1 ? 1 : 0;
  2034  01FD  1876               	btfsc	PORT_LCD@v,0
  2035  01FE  2A00               	goto	u551
  2036  01FF  2A04               	goto	u550
  2037  0200                     u551:
  2038  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0202  1405               	bsf	5,0	;volatile
  2041  0203  2A07               	goto	u564
  2042  0204                     u550:
  2043  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0206  1005               	bcf	5,0	;volatile
  2046  0207                     u564:
  2047                           
  2048                           ;LCD.c: 22:     PORTAbits.RA1 = v & 2 ? 1 : 0;
  2049  0207  18F6               	btfsc	PORT_LCD@v,1
  2050  0208  2A0A               	goto	u571
  2051  0209  2A0E               	goto	u570
  2052  020A                     u571:
  2053  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2054  020B  1303               	bcf	3,6	;RP1=0, select bank0
  2055  020C  1485               	bsf	5,1	;volatile
  2056  020D  2A11               	goto	u584
  2057  020E                     u570:
  2058  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2059  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0210  1085               	bcf	5,1	;volatile
  2061  0211                     u584:
  2062                           
  2063                           ;LCD.c: 23:     PORTAbits.RA2 = v & 4 ? 1 : 0;
  2064  0211  1976               	btfsc	PORT_LCD@v,2
  2065  0212  2A14               	goto	u591
  2066  0213  2A18               	goto	u590
  2067  0214                     u591:
  2068  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0216  1505               	bsf	5,2	;volatile
  2071  0217  2A1B               	goto	u604
  2072  0218                     u590:
  2073  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2075  021A  1105               	bcf	5,2	;volatile
  2076  021B                     u604:
  2077                           
  2078                           ;LCD.c: 24:     PORTAbits.RA3 = v & 8 ? 1 : 0;
  2079  021B  19F6               	btfsc	PORT_LCD@v,3
  2080  021C  2A1E               	goto	u611
  2081  021D  2A22               	goto	u610
  2082  021E                     u611:
  2083  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2084  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0220  1585               	bsf	5,3	;volatile
  2086  0221  2A25               	goto	u624
  2087  0222                     u610:
  2088  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0224  1185               	bcf	5,3	;volatile
  2091  0225                     u624:
  2092                           
  2093                           ;LCD.c: 25:     PORTAbits.RA4 = v & 16 ? 1 : 0;
  2094  0225  1A76               	btfsc	PORT_LCD@v,4
  2095  0226  2A28               	goto	u631
  2096  0227  2A2C               	goto	u630
  2097  0228                     u631:
  2098  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2100  022A  1605               	bsf	5,4	;volatile
  2101  022B  2A2F               	goto	u644
  2102  022C                     u630:
  2103  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2104  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2105  022E  1205               	bcf	5,4	;volatile
  2106  022F                     u644:
  2107                           
  2108                           ;LCD.c: 26:     PORTAbits.RA5 = v & 32 ? 1 : 0;
  2109  022F  1AF6               	btfsc	PORT_LCD@v,5
  2110  0230  2A32               	goto	u651
  2111  0231  2A36               	goto	u650
  2112  0232                     u651:
  2113  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0234  1685               	bsf	5,5	;volatile
  2116  0235  2A39               	goto	u664
  2117  0236                     u650:
  2118  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0238  1285               	bcf	5,5	;volatile
  2121  0239                     u664:
  2122                           
  2123                           ;LCD.c: 27:     PORTAbits.RA6 = v & 64 ? 1 : 0;
  2124  0239  1B76               	btfsc	PORT_LCD@v,6
  2125  023A  2A3C               	goto	u671
  2126  023B  2A40               	goto	u670
  2127  023C                     u671:
  2128  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2129  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2130  023E  1705               	bsf	5,6	;volatile
  2131  023F  2A43               	goto	u684
  2132  0240                     u670:
  2133  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0242  1305               	bcf	5,6	;volatile
  2136  0243                     u684:
  2137                           
  2138                           ;LCD.c: 28:     PORTAbits.RA7 = v & 128 ? 1 : 0;
  2139  0243  1BF6               	btfsc	PORT_LCD@v,7
  2140  0244  2A46               	goto	u691
  2141  0245  2A4A               	goto	u690
  2142  0246                     u691:
  2143  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0248  1785               	bsf	5,7	;volatile
  2146  0249  2A4D               	goto	u704
  2147  024A                     u690:
  2148  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2149  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2150  024C  1385               	bcf	5,7	;volatile
  2151  024D                     u704:
  2152  024D                     l185:
  2153  024D  0008               	return
  2154  024E                     __end_of_PORT_LCD:
  2155                           
  2156                           	psect	text11
  2157  0411                     __ptext11:	
  2158 ;; *************** function _Config_USART *****************
  2159 ;; Defined at:
  2160 ;;		line 40 in file "Libreria.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 2
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function _Config_USART
  2190  0411                     _Config_USART:
  2191  0411                     l1283:	
  2192                           ;incstack = 0
  2193                           ; Regs used in _Config_USART: [wreg]
  2194                           
  2195                           
  2196                           ;Libreria.c: 42:     TXEN = 1;
  2197  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2199  0413  1698               	bsf	24,5	;volatile
  2200                           
  2201                           ;Libreria.c: 43:     SYNC = 0;
  2202  0414  1218               	bcf	24,4	;volatile
  2203                           
  2204                           ;Libreria.c: 44:     SPEN = 1;
  2205  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0417  1798               	bsf	24,7	;volatile
  2208                           
  2209                           ;Libreria.c: 47:     CREN = 1;
  2210  0418  1618               	bsf	24,4	;volatile
  2211                           
  2212                           ;Libreria.c: 48:     PIE1bits.RCIE = 1;
  2213  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2214  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2215  041B  168C               	bsf	12,5	;volatile
  2216                           
  2217                           ;Libreria.c: 49:     PIR1bits.RCIF = 0;
  2218  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2219  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2220  041E  128C               	bcf	12,5	;volatile
  2221  041F                     l1285:
  2222                           
  2223                           ;Libreria.c: 50:     SPBRG=12;
  2224  041F  300C               	movlw	12
  2225  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0421  1303               	bcf	3,6	;RP1=0, select bank1
  2227  0422  0099               	movwf	25	;volatile
  2228  0423                     l136:
  2229  0423  0008               	return
  2230  0424                     __end_of_Config_USART:
  2231                           
  2232                           	psect	text12
  2233  0424                     __ptext12:	
  2234 ;; *************** function _Config_TMR0 *****************
  2235 ;; Defined at:
  2236 ;;		line 13 in file "Libreria.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  valor_tmr0      1    0        unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         0       0       0       0       0
  2251 ;;      Locals:         0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0
  2253 ;;      Totals:         0       0       0       0       0
  2254 ;;Total ram usage:        0 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 2
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function _Config_TMR0
  2266  0424                     _Config_TMR0:
  2267  0424                     l1271:	
  2268                           ;incstack = 0
  2269                           ; Regs used in _Config_TMR0: [wreg]
  2270                           
  2271                           
  2272                           ;Libreria.c: 16:     char valor_tmr0;;Libreria.c: 17:     PS0 = 1;
  2273  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2274  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2275  0426  1401               	bsf	1,0	;volatile
  2276                           
  2277                           ;Libreria.c: 18:     PS1 = 1;
  2278  0427  1481               	bsf	1,1	;volatile
  2279                           
  2280                           ;Libreria.c: 19:     PS2 = 1;
  2281  0428  1501               	bsf	1,2	;volatile
  2282                           
  2283                           ;Libreria.c: 20:     T0CS = 0;
  2284  0429  1281               	bcf	1,5	;volatile
  2285                           
  2286                           ;Libreria.c: 21:     PSA = 0;
  2287  042A  1181               	bcf	1,3	;volatile
  2288  042B                     l1273:
  2289                           
  2290                           ;Libreria.c: 22:     INTCON = 0b10101000;
  2291  042B  30A8               	movlw	168
  2292  042C  008B               	movwf	11	;volatile
  2293                           
  2294                           ;Libreria.c: 24:     TMR0 = valor_tmr0;
  2295  042D  3064               	movlw	100
  2296  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2297  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0430  0081               	movwf	1	;volatile
  2299                           
  2300                           ;Libreria.c: 25:     return valor_tmr0;
  2301  0431  3064               	movlw	100
  2302  0432                     l130:
  2303  0432  0008               	return
  2304  0433                     __end_of_Config_TMR0:
  2305                           
  2306                           	psect	text13
  2307  03E7                     __ptext13:	
  2308 ;; *************** function _Config_Puertos *****************
  2309 ;; Defined at:
  2310 ;;		line 53 in file "Libreria.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 2
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _Config_Puertos
  2340  03E7                     _Config_Puertos:
  2341  03E7                     l1287:	
  2342                           ;incstack = 0
  2343                           ; Regs used in _Config_Puertos: [wreg+status,2]
  2344                           
  2345                           
  2346                           ;Libreria.c: 55:     ANSEL = 0;
  2347  03E7  1683               	bsf	3,5	;RP0=1, select bank3
  2348  03E8  1703               	bsf	3,6	;RP1=1, select bank3
  2349  03E9  0188               	clrf	8	;volatile
  2350                           
  2351                           ;Libreria.c: 56:     ANSELH = 0;
  2352  03EA  0189               	clrf	9	;volatile
  2353                           
  2354                           ;Libreria.c: 57:     TRISA = 0;
  2355  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2356  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2357  03ED  0185               	clrf	5	;volatile
  2358  03EE                     l1289:
  2359                           
  2360                           ;Libreria.c: 58:     TRISB = 0b11;
  2361  03EE  3003               	movlw	3
  2362  03EF  0086               	movwf	6	;volatile
  2363  03F0                     l1291:
  2364                           
  2365                           ;Libreria.c: 59:     TRISC = 0b10000000;
  2366  03F0  3080               	movlw	128
  2367  03F1  0087               	movwf	7	;volatile
  2368                           
  2369                           ;Libreria.c: 60:     TRISD = 0;
  2370  03F2  0188               	clrf	8	;volatile
  2371                           
  2372                           ;Libreria.c: 61:     TRISE = 0;
  2373  03F3  0189               	clrf	9	;volatile
  2374                           
  2375                           ;Libreria.c: 64:     PORTA = 0;
  2376  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2377  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2378  03F6  0185               	clrf	5	;volatile
  2379                           
  2380                           ;Libreria.c: 65:     PORTB = 0;
  2381  03F7  0186               	clrf	6	;volatile
  2382                           
  2383                           ;Libreria.c: 66:     PORTC = 0;
  2384  03F8  0187               	clrf	7	;volatile
  2385                           
  2386                           ;Libreria.c: 67:     PORTD = 0;
  2387  03F9  0188               	clrf	8	;volatile
  2388                           
  2389                           ;Libreria.c: 68:     PORTE = 0;
  2390  03FA  0189               	clrf	9	;volatile
  2391  03FB                     l139:
  2392  03FB  0008               	return
  2393  03FC                     __end_of_Config_Puertos:
  2394                           
  2395                           	psect	text14
  2396  0433                     __ptext14:	
  2397 ;; *************** function _Config_Oscilador *****************
  2398 ;; Defined at:
  2399 ;;		line 6 in file "Libreria.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 2
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _Config_Oscilador
  2429  0433                     _Config_Oscilador:
  2430  0433                     l1267:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _Config_Oscilador: [wreg]
  2433                           
  2434                           
  2435                           ;Libreria.c: 8:     IRCF0 = 1;
  2436  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0435  160F               	bsf	15,4	;volatile
  2439                           
  2440                           ;Libreria.c: 9:     IRCF1 = 1;
  2441  0436  168F               	bsf	15,5	;volatile
  2442                           
  2443                           ;Libreria.c: 10:     IRCF2 = 1;
  2444  0437  170F               	bsf	15,6	;volatile
  2445  0438                     l1269:
  2446                           
  2447                           ;Libreria.c: 11:     INTCON = 0b11101000;
  2448  0438  30E8               	movlw	232
  2449  0439  008B               	movwf	11	;volatile
  2450  043A                     l127:
  2451  043A  0008               	return
  2452  043B                     __end_of_Config_Oscilador:
  2453                           
  2454                           	psect	text15
  2455  03CF                     __ptext15:	
  2456 ;; *************** function _Config_ADC *****************
  2457 ;; Defined at:
  2458 ;;		line 28 in file "Libreria.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0
  2474 ;;      Temps:          1       0       0       0       0
  2475 ;;      Totals:         1       0       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 2
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function _Config_ADC
  2488  03CF                     _Config_ADC:
  2489  03CF                     l1277:	
  2490                           ;incstack = 0
  2491                           ; Regs used in _Config_ADC: [wreg]
  2492                           
  2493                           
  2494                           ;Libreria.c: 29:     PIE1bits.ADIE = 1;
  2495  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  2496  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  2497  03D1  170C               	bsf	12,6	;volatile
  2498                           
  2499                           ;Libreria.c: 30:     ADIF = 0;
  2500  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2501  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2502  03D4  130C               	bcf	12,6	;volatile
  2503                           
  2504                           ;Libreria.c: 31:     ADCON1bits.ADFM = 0;
  2505  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  2506  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  2507  03D7  139F               	bcf	31,7	;volatile
  2508                           
  2509                           ;Libreria.c: 32:     ADCON1bits.VCFG0 = 0;
  2510  03D8  121F               	bcf	31,4	;volatile
  2511                           
  2512                           ;Libreria.c: 33:     ADCON1bits.VCFG0 = 0;
  2513  03D9  121F               	bcf	31,4	;volatile
  2514                           
  2515                           ;Libreria.c: 34:     ADCON0bits.ADCS0 = 0;
  2516  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2517  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2518  03DC  131F               	bcf	31,6	;volatile
  2519                           
  2520                           ;Libreria.c: 35:     ADCON0bits.ADCS1 = 1;
  2521  03DD  179F               	bsf	31,7	;volatile
  2522                           
  2523                           ;Libreria.c: 36:     ADCON0bits.ADON = 1;
  2524  03DE  141F               	bsf	31,0	;volatile
  2525  03DF                     l1279:
  2526                           
  2527                           ;Libreria.c: 37:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2528  03DF  3021               	movlw	33
  2529  03E0  00F6               	movwf	??_Config_ADC
  2530  03E1                     u1077:
  2531  03E1  0BF6               	decfsz	??_Config_ADC,f
  2532  03E2  2BE1               	goto	u1077
  2533  03E3                     l1281:
  2534                           
  2535                           ;Libreria.c: 38:     ADCON0bits.GO = 1;
  2536  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2537  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2538  03E5  149F               	bsf	31,1	;volatile
  2539  03E6                     l133:
  2540  03E6  0008               	return
  2541  03E7                     __end_of_Config_ADC:
  2542                           
  2543                           	psect	text16
  2544  029D                     __ptext16:	
  2545 ;; *************** function _isr *****************
  2546 ;; Defined at:
  2547 ;;		line 59 in file "Lab_02.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          4       0       0       0       0
  2564 ;;      Totals:         4       0       0       0       0
  2565 ;;Total ram usage:        4 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 1
  2568 ;; This function calls:
  2569 ;;		_Valor_ADC
  2570 ;; This function is called by:
  2571 ;;		Interrupt level 1
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _isr
  2577  029D                     _isr:
  2578  029D                     i1l1333:
  2579                           
  2580                           ;Lab_02.c: 61: 
  2581  029D  1D0B               	btfss	11,2	;volatile
  2582  029E  2AA0               	goto	u98_21
  2583  029F  2AA1               	goto	u98_20
  2584  02A0                     u98_21:
  2585  02A0  2AA6               	goto	i1l1339
  2586  02A1                     u98_20:
  2587  02A1                     i1l1335:
  2588                           
  2589                           ;Lab_02.c: 63: }
  2590  02A1  110B               	bcf	11,2	;volatile
  2591  02A2                     i1l1337:
  2592  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2593  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2594  02A4  0838               	movf	_Valor_TMR0,w
  2595  02A5  0081               	movwf	1	;volatile
  2596  02A6                     i1l1339:
  2597  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2598  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2599  02A8  1F0C               	btfss	12,6	;volatile
  2600  02A9  2AAB               	goto	u99_21
  2601  02AA  2AAC               	goto	u99_20
  2602  02AB                     u99_21:
  2603  02AB  2ACC               	goto	i1l1349
  2604  02AC                     u99_20:
  2605  02AC                     i1l1341:
  2606  02AC  130C               	bcf	12,6	;volatile
  2607  02AD                     i1l1343:
  2608  02AD  300C               	movlw	12
  2609  02AE  120A  118A  23FC  120A  118A  	fcall	_Valor_ADC
  2610  02B3  00F2               	movwf	??_isr
  2611  02B4  0872               	movf	??_isr,w
  2612  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2613  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2614  02B7  00B6               	movwf	_Valor_Canal_12
  2615  02B8                     i1l1345:
  2616  02B8  301A               	movlw	26
  2617  02B9  00F3               	movwf	??_isr+1
  2618  02BA  30F8               	movlw	248
  2619  02BB  00F2               	movwf	??_isr
  2620  02BC                     u108_27:
  2621  02BC  0BF2               	decfsz	??_isr,f
  2622  02BD  2ABC               	goto	u108_27
  2623  02BE  0BF3               	decfsz	??_isr+1,f
  2624  02BF  2ABC               	goto	u108_27
  2625  02C0  0000               	nop
  2626  02C1                     i1l1347:
  2627  02C1  300A               	movlw	10
  2628  02C2  120A  118A  23FC  120A  118A  	fcall	_Valor_ADC
  2629  02C7  00F2               	movwf	??_isr
  2630  02C8  0872               	movf	??_isr,w
  2631  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2632  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2633  02CB  00B7               	movwf	_Valor_Canal_10
  2634  02CC                     i1l1349:
  2635  02CC  1E8C               	btfss	12,5	;volatile
  2636  02CD  2ACF               	goto	u100_21
  2637  02CE  2AD0               	goto	u100_20
  2638  02CF                     u100_21:
  2639  02CF  2AD1               	goto	i1l44
  2640  02D0                     u100_20:
  2641  02D0                     i1l1351:
  2642  02D0  128C               	bcf	12,5	;volatile
  2643  02D1                     i1l44:
  2644  02D1  0875               	movf	??_isr+3,w
  2645  02D2  008A               	movwf	10
  2646  02D3  0E74               	swapf	??_isr+2,w
  2647  02D4  0083               	movwf	3
  2648  02D5  0EFE               	swapf	btemp,f
  2649  02D6  0E7E               	swapf	btemp,w
  2650  02D7  0009               	retfie
  2651  02D8                     __end_of_isr:
  2652                           
  2653                           	psect	intentry
  2654  0004                     __pintentry:	
  2655                           ;incstack = 0
  2656                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2657                           
  2658  0004                     interrupt_function:
  2659  007E                     saved_w	set	btemp
  2660  0004  00FE               	movwf	btemp
  2661  0005  0E03               	swapf	3,w
  2662  0006  00F4               	movwf	??_isr+2
  2663  0007  080A               	movf	10,w
  2664  0008  00F5               	movwf	??_isr+3
  2665  0009  120A  118A  2A9D   	ljmp	_isr
  2666                           
  2667                           	psect	text17
  2668  03FC                     __ptext17:	
  2669 ;; *************** function _Valor_ADC *****************
  2670 ;; Defined at:
  2671 ;;		line 72 in file "Libreria.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  canal           1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  canal           1    1[COMMON] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      unsigned char 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2685 ;;      Params:         0       0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0
  2687 ;;      Temps:          1       0       0       0       0
  2688 ;;      Totals:         2       0       0       0       0
  2689 ;;Total ram usage:        2 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_isr
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _Valor_ADC
  2700  03FC                     _Valor_ADC:
  2701                           
  2702                           ;incstack = 0
  2703                           ; Regs used in _Valor_ADC: [wreg+status,2+status,0]
  2704                           ;Valor_ADC@canal stored from wreg
  2705  03FC  00F1               	movwf	Valor_ADC@canal
  2706  03FD                     i1l1257:
  2707                           
  2708                           ;Libreria.c: 73:     ADCON0bits.CHS = canal;
  2709  03FD  0871               	movf	Valor_ADC@canal,w
  2710  03FE  00F0               	movwf	??_Valor_ADC
  2711  03FF  0DF0               	rlf	??_Valor_ADC,f
  2712  0400  0DF0               	rlf	??_Valor_ADC,f
  2713  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0403  081F               	movf	31,w	;volatile
  2716  0404  0670               	xorwf	??_Valor_ADC,w
  2717  0405  39C3               	andlw	-61
  2718  0406  0670               	xorwf	??_Valor_ADC,w
  2719  0407  009F               	movwf	31	;volatile
  2720  0408                     i1l1259:
  2721                           
  2722                           ;Libreria.c: 74:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2723  0408  3021               	movlw	33
  2724  0409  00F0               	movwf	??_Valor_ADC
  2725  040A                     u109_27:
  2726  040A  0BF0               	decfsz	??_Valor_ADC,f
  2727  040B  2C0A               	goto	u109_27
  2728  040C                     i1l1261:
  2729                           
  2730                           ;Libreria.c: 75:     ADCON0bits.GO = 1;
  2731  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2732  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2733  040E  149F               	bsf	31,1	;volatile
  2734  040F                     i1l1263:
  2735                           
  2736                           ;Libreria.c: 76:     return ADRESH;
  2737  040F  081E               	movf	30,w	;volatile
  2738  0410                     i1l142:
  2739  0410  0008               	return
  2740  0411                     __end_of_Valor_ADC:
  2741  007E                     btemp	set	126	;btemp
  2742  007E                     wtemp0	set	126
  2743                           
  2744                           	psect	config
  2745                           
  2746                           ;Config register CONFIG1 @ 0x2007
  2747                           ;	Oscillator Selection bits
  2748                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2749                           ;	Watchdog Timer Enable bit
  2750                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2751                           ;	Power-up Timer Enable bit
  2752                           ;	PWRTE = OFF, PWRT disabled
  2753                           ;	RE3/MCLR pin function select bit
  2754                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2755                           ;	Code Protection bit
  2756                           ;	CP = OFF, Program memory code protection is disabled
  2757                           ;	Data Code Protection bit
  2758                           ;	CPD = OFF, Data memory code protection is disabled
  2759                           ;	Brown Out Reset Selection bits
  2760                           ;	BOREN = OFF, BOR disabled
  2761                           ;	Internal External Switchover bit
  2762                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2763                           ;	Fail-Safe Clock Monitor Enabled bit
  2764                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2765                           ;	Low Voltage Programming Enable bit
  2766                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2767                           ;	In-Circuit Debugger Mode bit
  2768                           ;	DEBUG = 0x1, unprogrammed default
  2769  2007                     	org	8199
  2770  2007  20D4               	dw	8404
  2771                           
  2772                           ;Config register CONFIG2 @ 0x2008
  2773                           ;	Brown-out Reset Selection bit
  2774                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2775                           ;	Flash Program Memory Self Write Enable bits
  2776                           ;	WRT = OFF, Write protection off
  2777  2008                     	org	8200
  2778  2008  3FFF               	dw	16383

Data Sizes:
    Strings     38
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     22      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_LCD@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[8]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _Print_Num->___wmul
    _Write_LCD->_Char_LCD
    _Char_LCD->_PORT_LCD
    _Lcd_Set_Cursor->_CMD_LCD
    _LCD_Init_8bits->_CMD_LCD
    _CMD_LCD->_PORT_LCD

Critical Paths under _isr in COMMON

    _isr->_Valor_ADC

Critical Paths under _main in BANK0

    _main->_Print_Num
    _Print_Num->___awdiv
    _tabla_num->_Write_LCD
    _Write_LCD->_Char_LCD
    _Lcd_Set_Cursor->_CMD_LCD
    _LCD_Init_8bits->_CMD_LCD

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5031
                                             19 BANK0      3     3      0
                         _Config_ADC
                   _Config_Oscilador
                     _Config_Puertos
                        _Config_TMR0
                       _Config_USART
                     _LCD_Init_8bits
                     _Lcd_Set_Cursor
                          _Print_Num
                          _Write_LCD
 ---------------------------------------------------------------------------------
 (1) _Print_Num                                           11    11      0    3411
                                              8 BANK0     11    11      0
                          _Write_LCD
                            ___awdiv
                             ___wmul
                          _tabla_num
 ---------------------------------------------------------------------------------
 (2) _tabla_num                                            2     0      2    1165
                                              4 BANK0      2     0      2
                          _Write_LCD
 ---------------------------------------------------------------------------------
 (1) _Write_LCD                                            3     3      0     717
                                              1 BANK0      3     3      0
                           _Char_LCD
 ---------------------------------------------------------------------------------
 (2) _Char_LCD                                             2     2      0     198
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              6 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              6 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     484
                                              1 BANK0      4     3      1
                            _CMD_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_8bits                                       2     2      0     374
                                              1 BANK0      2     2      0
                            _CMD_LCD
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (2) _CMD_LCD                                              2     2      0     198
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (3) _PORT_LCD                                             1     1      0     176
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0                                          1     1      0      45
 ---------------------------------------------------------------------------------
 (1) _Config_Puertos                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Oscilador                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_ADC                                           1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0      22
                                              2 COMMON     4     4      0
                          _Valor_ADC
 ---------------------------------------------------------------------------------
 (7) _Valor_ADC                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_ADC
   _Config_Oscilador
   _Config_Puertos
   _Config_TMR0
   _Config_USART
   _LCD_Init_8bits
     _CMD_LCD
       _PORT_LCD
     _PORT_LCD
   _Lcd_Set_Cursor
     _CMD_LCD
   _Print_Num
     _Write_LCD
       _Char_LCD
         _PORT_LCD
     ___awdiv
     ___wmul
     _tabla_num
       _Write_LCD
   _Write_LCD

 _isr (ROOT)
   _Valor_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 27 17:24:15 2021

                        pc 0002               ___awdiv@sign 0025                         fsr 0004  
      ___wmul@multiplicand 0022                        l200 03B6                        l130 0432  
                      l133 03E6                        l206 0378                        l127 043A  
                      l231 00A7                        l136 0423                        l225 00A7  
                      l209 012C                        l139 03FB                        l317 033A  
                      l182 029C                        l319 0352                        l185 024D  
                      l194 039E                        l188 03CE                        l470 0195  
                      _PS0 0408                        _PS1 0409                        _PS2 040A  
                      u610 0222                        u611 021E                        u604 021B  
                      u630 022C                        u550 0204                        u710 0378  
                      u631 0228                        u551 0200                        u711 0377  
                      u704 024D                        u624 0225                        u800 0093  
                      u720 0023                        u801 0092                        u721 0022  
                      u650 0236                        u570 020E                        u810 00A0  
                      u730 0031                        u651 0232                        u571 020A  
                      u811 009F                        u731 0030                        u644 022F  
                      u564 0207                        u900 0162                        u820 0334  
                      u740 003F                        u901 0161                        u821 0333  
                      u741 003E                        u670 0240                        u590 0218  
                      u750 004D                        u671 023C                        u591 0214  
                      u751 004C                        _PSA 040B                        u664 0239  
                      u584 0211                        u920 0173                        u760 005B  
                      u921 0172                        u761 005A                        u690 024A  
                      u850 034E                        u770 0069                        u691 0246  
                      u915 0163                        u851 034D                        u835 033B  
                      u771 0068                        u684 0243                        u940 0187  
                      u860 0134                        u780 0077                        u941 0186  
                      u925 016F                        u861 0133                        u845 0342  
                      u781 0076                        u950 018C                        u870 013F  
                      u790 0085                        u951 018B                        u935 017B  
                      u871 013E                        u791 0084                        u960 0381  
                      u880 0150                        u961 0380                        u881 014F  
                      u970 0393                        u971 0392                        u895 0154  
                      _isr 029D                        fsr0 0004            __end_of_CMD_LCD 03CF  
                     l1201 032E                       l1203 0334                       l1131 03A2  
                     l1301 0274                       l1221 013B                       l1213 012D  
                     l1205 0341                       l1133 03A3                       l1141 0356  
                     l1151 03BB                       l1311 0393                       l1303 037C  
                     l1231 0150                       l1223 013F                       l1215 0130  
                     l1207 0348                       l1135 03A9                       l1143 0358  
                     l1129 01FD                       l1153 03C1                       l1313 0398  
                     l1305 0381                       l1241 0173                       l1233 0153  
                     l1225 0144                       l1217 0134                       l1209 034E  
                     l1137 03AC                       l1145 0365                       l1161 0023  
                     l1321 00DD                       l1155 03C4                       l1307 0386  
                     l1251 018C                       l1243 0179                       l1235 015A  
                     l1227 0148                       l1219 0139                       l1139 03B3  
                     l1147 036B                       l1171 0046                       l1163 002A  
                     l1331 0121                       l1323 00F0                       l1315 00AB  
                     l1157 03CB                       l1149 03BA                       l1309 038D  
                     l1253 0191                       l1245 017A                       l1237 015E  
                     l1229 014A                       l1181 0069                       l1173 004D  
                     l1165 0031                       l1325 0107                       l1317 00B3  
                     l1271 0424                       l1247 0181                       l1239 0162  
                     l1191 008C                       l1183 0070                       l1175 0054  
                     l1167 0038                       l1159 001B                       l1327 0110  
                     l1319 00C6                       l1281 03E3                       l1273 042B  
                     l1249 0187                       l1193 0093                       l1185 0077  
                     l1177 005B                       l1169 003F                       l1329 0116  
                     l1361 01AF                       l1353 0196                       l1267 0433  
                     l1291 03F0                       l1283 0411                       l1195 009A  
                     l1187 007E                       l1179 0062                       l1371 01D1  
                     l1363 01B4                       l1355 019B                       l1277 03CF  
                     l1269 0438                       l1285 041F                       l1293 024E  
                     l1197 00A0                       l1189 0085                       l1373 01DB  
                     l1365 01B9                       l1357 01A5                       l1279 03DF  
                     l1287 03E7                       l1295 0254                       l1199 032C  
                     l1375 01E1                       l1367 01C3                       l1359 01AA  
                     l1289 03EE                       l1297 025E                       l1377 01E9  
                     l1369 01C9                       l1299 026E                       _ADIF 0066  
                     ?_isr 0070                       STR_1 0306                       STR_2 030E  
                     STR_3 0316                       STR_4 031A                       STR_5 031C  
                     STR_6 031E                       STR_7 0320                       STR_8 0322  
                     STR_9 0324                       _T0IF 005A                       _CREN 00C4  
                     _T0CS 040D                       u1017 01F1                       u1027 03AE  
                     u1037 025A                       u1047 026A                       u1057 027A  
                     u1067 03C6                       u1077 03E1                       i1l44 02D1  
                     _RCIF 0065                       _TMR0 0001                       _SPEN 00C7  
                     _TXEN 04C5                       _SYNC 04C4     __end_of_LCD_Init_8bits 029D  
                     _main 0196                       btemp 007E                       start 000C  
      __end_of_Config_TMR0 0433                      ??_isr 0072                      ?_main 0070  
          __end_of___awdiv 0196                      STR_10 0326                      STR_11 0328  
                    STR_12 032A                      STR_13 0318                      _ANSEL 0188  
          ___awdiv@divisor 0020                      _IRCF0 047C                      _IRCF1 047D  
                    _IRCF2 047E                      i1l142 0410                 _Config_ADC 03CF  
          ___awdiv@counter 0024                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019                      u98_20 02A1  
                    u98_21 02A0                      u99_20 02AC                      u99_21 02AB  
         __end_of_PORT_LCD 024E                      pclath 000A            ?_LCD_Init_8bits 0070  
         __end_of_Char_LCD 03B7                      status 0003                      wtemp0 007E  
     __end_of_Config_USART 0424            __initialization 000F               __end_of_main 01FC  
                   ??_main 0033                  ??_CMD_LCD 0077                     _ADRESH 001E  
         ___awdiv@dividend 0022                     _ANSELH 0189                     u100_20 02D0  
                   u100_21 02CF                     i1l1261 040C                     i1l1341 02AC  
                   i1l1333 029D                     i1l1263 040F                     i1l1351 02D0  
                   i1l1343 02AD                     i1l1335 02A1                     i1l1257 03FD  
                   i1l1345 02B8                     i1l1337 02A2                     i1l1259 0408  
                   i1l1347 02C1                     i1l1339 02A6                     i1l1349 02CC  
                   u108_27 02BC                     u109_27 040A                     _INTCON 000B  
              _Config_TMR0 0424             _Valor_Canal_10 0037             _Valor_Canal_12 0036  
               _Valor_TMR0 0038                     ___wmul 032C                  ??___awdiv 0076  
 __end_of_Config_Oscilador 043B           ___awdiv@quotient 0026         __size_of_Valor_ADC 0015  
              ?_Config_ADC 0070         __size_of_Print_Num 0085                     saved_w 007E  
          Lcd_Set_Cursor@a 0023            Lcd_Set_Cursor@b 0021    __end_of__initialization 0017  
       __size_of_Write_LCD 0026             __pcstackCOMMON 0070               __pidataBANK0 043B  
                ?_PORT_LCD 0070             _Lcd_Set_Cursor 0379                  ?_Char_LCD 0070  
  __size_of_Config_Puertos 0015                 __pbssBANK0 0036      __size_of_Config_USART 0013  
        __end_of_Valor_ADC 0411                 Write_LCD@a 0023                 Write_LCD@i 0022  
      __size_of_Config_ADC 0018          __end_of_Print_Num 012D         __size_of_tabla_num 008D  
               __pmaintext 0196                    ?___wmul 0020                 __pintentry 0004  
               ??_PORT_LCD 0076     __end_of_Lcd_Set_Cursor 039F                    _CMD_LCD 03B7  
        __end_of_Write_LCD 0379                 ??_Char_LCD 0077                  PORT_LCD@v 0076  
             _Config_USART 0411           ??_LCD_Init_8bits 0021                 __stringtab 0300  
                  ___awdiv 012D            __size_of___wmul 0027            ?_Lcd_Set_Cursor 0021  
                  __ptext1 00A8                    __ptext2 001B                    __ptext3 0353  
                  __ptext4 039F                    __ptext5 032C                    __ptext6 012D  
                  __ptext7 0379                    __ptext8 024E                    __ptext9 03B7  
                Char_LCD@a 0020            tabla_num@numero 0024               __size_of_isr 003B  
        __end_of_tabla_num 00A8       end_of_initialization 0017               ?_Config_TMR0 0070  
        ?_Config_Oscilador 0070                  _PORTAbits 0005         ??_Config_Oscilador 0076  
                _PORTEbits 0009               ??_Config_ADC 0076             Print_Num@valor 002C  
           _Config_Puertos 03E7         __end_of_Config_ADC 03E7             __end_of___wmul 0353  
        __size_of_PORT_LCD 0052     __end_of_Config_Puertos 03FC        start_initialization 000F  
        __size_of_Char_LCD 0018                __end_of_isr 02D8                  _Valor_ADC 03FC  
                 ??___wmul 0076                   CMD_LCD@v 0020                  _Print_Num 00A8  
              __pdataBANK0 0038                   ?_CMD_LCD 0070            ?_Config_Puertos 0070  
                ___latbits 0002              __pcstackBANK0 0020                  _Write_LCD 0353  
     __size_of_Config_TMR0 000F                 ?_Valor_ADC 0070           ??_Lcd_Set_Cursor 0022  
                 ?___awdiv 0020                 ?_Print_Num 0070                  __pstrings 0300  
               ?_Write_LCD 0070                  _tabla_num 001B          interrupt_function 0004  
           ___wmul@product 0076                   _PIE1bits 008C                   _PIR1bits 000C  
                 _PORT_LCD 01FC              Print_Num@temp 0031                 _ADCON0bits 001F  
              __stringbase 0305                 _ADCON1bits 009F          ___wmul@multiplier 0020  
                 _Char_LCD 039F           __size_of_CMD_LCD 0018  __size_of_Config_Oscilador 0008  
               ?_tabla_num 0024    __size_of_LCD_Init_8bits 004F                ??_Valor_ADC 0070  
              ??_Print_Num 0028             Valor_ADC@canal 0071           __size_of___awdiv 0069  
       __end_of__stringtab 0306                ??_Write_LCD 0021                   __ptext10 01FC  
                 __ptext11 0411                   __ptext12 0424                   __ptext13 03E7  
                 __ptext14 0433                   __ptext15 03CF                   __ptext16 029D  
                 __ptext17 03FC              __size_of_main 0066           ??_Config_Puertos 0076  
            ?_Config_USART 0070                   intlevel1 0000                ??_tabla_num 0078  
                stringcode 0300         Lcd_Set_Cursor@temp 0024           Print_Num@centena 002F  
           ??_Config_USART 0076                   stringdir 0300                   stringtab 0300  
          Print_Num@decena 002D           _Config_Oscilador 0433              ??_Config_TMR0 0076  
          Print_Num@unidad 002A             _LCD_Init_8bits 024E  
