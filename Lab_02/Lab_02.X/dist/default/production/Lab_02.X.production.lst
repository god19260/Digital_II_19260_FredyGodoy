

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 27 20:21:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	idataBANK0
   387  069B                     __pidataBANK0:
   388                           
   389                           ;initializer for _Valor_TMR0
   390  069B  3464               	retlw	100
   391  0009                     _PORTEbits	set	9
   392  0005                     _PORTAbits	set	5
   393  0019                     _TXREG	set	25
   394  001E                     _ADRESH	set	30
   395  0009                     _PORTE	set	9
   396  0008                     _PORTD	set	8
   397  0007                     _PORTC	set	7
   398  0006                     _PORTB	set	6
   399  0005                     _PORTA	set	5
   400  000C                     _PIR1bits	set	12
   401  001F                     _ADCON0bits	set	31
   402  000B                     _INTCON	set	11
   403  001A                     _RCREG	set	26
   404  0001                     _TMR0	set	1
   405  00C4                     _CREN	set	196
   406  00C7                     _SPEN	set	199
   407  0065                     _RCIF	set	101
   408  0066                     _ADIF	set	102
   409  005A                     _T0IF	set	90
   410  0089                     _TRISE	set	137
   411  0088                     _TRISD	set	136
   412  0087                     _TRISC	set	135
   413  0086                     _TRISB	set	134
   414  0085                     _TRISA	set	133
   415  0099                     _SPBRG	set	153
   416  009F                     _ADCON1bits	set	159
   417  008C                     _PIE1bits	set	140
   418  04C4                     _SYNC	set	1220
   419  04C5                     _TXEN	set	1221
   420  040B                     _PSA	set	1035
   421  040D                     _T0CS	set	1037
   422  040A                     _PS2	set	1034
   423  0409                     _PS1	set	1033
   424  0408                     _PS0	set	1032
   425  047E                     _IRCF2	set	1150
   426  047D                     _IRCF1	set	1149
   427  047C                     _IRCF0	set	1148
   428  0189                     _ANSELH	set	393
   429  0188                     _ANSEL	set	392
   430                           
   431                           	psect	strings
   432  0500                     __pstrings:
   433  0500                     stringtab:
   434  0500                     __stringtab:
   435  0500                     stringcode:	
   436                           ;	String table - string pointers are 1 byte each
   437                           
   438  0500                     stringdir:
   439  0500  3005               	movlw	high stringdir
   440  0501  008A               	movwf	10
   441  0502  0804               	movf	4,w
   442  0503  0A84               	incf	4,f
   443  0504  0782               	addwf	2,f
   444  0505                     __stringbase:
   445  0505  3400               	retlw	0
   446  0506                     __end_of__stringtab:
   447  0506                     STR_1:
   448  0506  3450               	retlw	80	;'P'
   449  0507  344F               	retlw	79	;'O'
   450  0508  3454               	retlw	84	;'T'
   451  0509  3420               	retlw	32	;' '
   452  050A  3431               	retlw	49	;'1'
   453  050B  3420               	retlw	32	;' '
   454  050C  3420               	retlw	32	;' '
   455  050D  3420               	retlw	32	;' '
   456  050E  3420               	retlw	32	;' '
   457  050F  3400               	retlw	0
   458  0510                     STR_3:
   459  0510  3420               	retlw	32	;' '
   460  0511  342D               	retlw	45	;'-'
   461  0512  342D               	retlw	45	;'-'
   462  0513  342D               	retlw	45	;'-'
   463  0514  3420               	retlw	32	;' '
   464  0515  3400               	retlw	0
   465  0516                     STR_2:
   466  0516  3450               	retlw	80	;'P'
   467  0517  344F               	retlw	79	;'O'
   468  0518  3454               	retlw	84	;'T'
   469  0519  3420               	retlw	32	;' '
   470  051A  3432               	retlw	50	;'2'
   471  051B  3400               	retlw	0
   472  051C                     STR_4:
   473  051C  3453               	retlw	83	;'S'
   474  051D  3431               	retlw	49	;'1'
   475  051E  3400               	retlw	0
   476  051F                     STR_5:
   477  051F  3453               	retlw	83	;'S'
   478  0520  3432               	retlw	50	;'2'
   479  0521  3400               	retlw	0
   480  0522                     STR_6:
   481  0522  3453               	retlw	83	;'S'
   482  0523  3433               	retlw	51	;'3'
   483  0524  3400               	retlw	0
   484  0525                     STR_7:
   485  0525  342E               	retlw	46	;'.'
   486  0526  3400               	retlw	0
   487  0527                     STR_17:
   488  0527  3430               	retlw	48	;'0'
   489  0528  3400               	retlw	0
   490  0529                     STR_11:
   491  0529  3434               	retlw	52	;'4'
   492  052A  3400               	retlw	0
   493  052B                     STR_12:
   494  052B  3435               	retlw	53	;'5'
   495  052C  3400               	retlw	0
   496  052D                     STR_13:
   497  052D  3436               	retlw	54	;'6'
   498  052E  3400               	retlw	0
   499  052F                     STR_14:
   500  052F  3437               	retlw	55	;'7'
   501  0530  3400               	retlw	0
   502  0531                     STR_15:
   503  0531  3438               	retlw	56	;'8'
   504  0532  3400               	retlw	0
   505  0533                     STR_16:
   506  0533  3439               	retlw	57	;'9'
   507  0534  3400               	retlw	0
   508  051D                     
   509                           	psect	cinit
   510  000F                     start_initialization:	
   511                           ; #config settings
   512                           
   513  000F                     __initialization:
   514                           
   515                           ; Initialize objects allocated to BANK0
   516  000F  120A  118A  269B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   517  0014  00BD               	movwf	__pdataBANK0& (0+127)
   518                           
   519                           ; Clear objects allocated to BANK0
   520  0015  01BA               	clrf	__pbssBANK0& (0+127)
   521  0016  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   522  0017  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   523  0018                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526  0018                     __end_of__initialization:
   527  0018  0183               	clrf	3
   528  0019  120A  118A  2B98   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	bssBANK0
   531  003A                     __pbssBANK0:
   532  003A                     _contador:
   533  003A                     	ds	1
   534  003B                     _Valor_Canal_12:
   535  003B                     	ds	1
   536  003C                     _Valor_Canal_10:
   537  003C                     	ds	1
   538                           
   539                           	psect	dataBANK0
   540  003D                     __pdataBANK0:
   541  003D                     _Valor_TMR0:
   542  003D                     	ds	1
   543                           
   544                           	psect	cstackCOMMON
   545  0070                     __pcstackCOMMON:
   546  0070                     ?_Valor_ADC:
   547  0070                     ??_Valor_ADC:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Config_Oscilador:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_Config_TMR0:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Config_ADC:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_Config_USART:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_Config_Puertos:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_LCD_Init_8bits:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_Texto_USART:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Write_LCD:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_Print_Num:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Print_Cont:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_PORT_LCD:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_CMD_LCD:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_isr:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_main:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_Transmisor_USART:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_Char_LCD:	
   596                           ; 1 bytes @ 0x0
   597                           
   598                           
   599                           ; 1 bytes @ 0x0
   600  0070                     	ds	1
   601  0071                     Valor_ADC@canal:
   602                           
   603                           ; 1 bytes @ 0x1
   604  0071                     	ds	1
   605  0072                     ??_isr:
   606                           
   607                           ; 1 bytes @ 0x2
   608  0072                     	ds	4
   609  0076                     ??_Config_Oscilador:
   610  0076                     ??_Config_TMR0:	
   611                           ; 1 bytes @ 0x6
   612                           
   613  0076                     ??_Config_ADC:	
   614                           ; 1 bytes @ 0x6
   615                           
   616  0076                     ??_Config_USART:	
   617                           ; 1 bytes @ 0x6
   618                           
   619  0076                     ??_Config_Puertos:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  0076                     ?_tabla_USART:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  0076                     ??_Texto_USART:	
   626                           ; 1 bytes @ 0x6
   627                           
   628  0076                     ??_PORT_LCD:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0076                     ??___wmul:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0076                     ??___awdiv:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     PORT_LCD@v:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     tabla_USART@numero:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0076                     ___wmul@product:	
   644                           ; 2 bytes @ 0x6
   645                           
   646                           
   647                           ; 2 bytes @ 0x6
   648  0076                     	ds	1
   649  0077                     ??_CMD_LCD:
   650  0077                     ??_Char_LCD:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 1 bytes @ 0x7
   655  0077                     	ds	1
   656  0078                     ??_USART:
   657  0078                     ??_tabla_USART:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  0078                     ??_tabla_num:	
   661                           ; 1 bytes @ 0x8
   662                           
   663                           
   664                           	psect	cstackBANK0
   665  0020                     __pcstackBANK0:	
   666                           ; 1 bytes @ 0x8
   667                           
   668  0020                     ?___wmul:
   669  0020                     ?___awdiv:	
   670                           ; 2 bytes @ 0x0
   671                           
   672  0020                     Texto_USART@i:	
   673                           ; 2 bytes @ 0x0
   674                           
   675  0020                     CMD_LCD@v:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0020                     Char_LCD@a:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0020                     ___wmul@multiplier:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0020                     ___awdiv@divisor:	
   685                           ; 2 bytes @ 0x0
   686                           
   687                           
   688                           ; 2 bytes @ 0x0
   689  0020                     	ds	1
   690  0021                     ??_LCD_Init_8bits:
   691  0021                     ?_Lcd_Set_Cursor:	
   692                           ; 1 bytes @ 0x1
   693                           
   694  0021                     ??_Write_LCD:	
   695                           ; 1 bytes @ 0x1
   696                           
   697  0021                     Texto_USART@texto:	
   698                           ; 1 bytes @ 0x1
   699                           
   700  0021                     Lcd_Set_Cursor@b:	
   701                           ; 1 bytes @ 0x1
   702                           
   703                           
   704                           ; 1 bytes @ 0x1
   705  0021                     	ds	1
   706  0022                     ??_Lcd_Set_Cursor:
   707  0022                     Write_LCD@i:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0022                     ___wmul@multiplicand:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0022                     ___awdiv@dividend:	
   714                           ; 2 bytes @ 0x2
   715                           
   716                           
   717                           ; 2 bytes @ 0x2
   718  0022                     	ds	1
   719  0023                     Lcd_Set_Cursor@a:
   720  0023                     Write_LCD@a:	
   721                           ; 1 bytes @ 0x3
   722                           
   723                           
   724                           ; 1 bytes @ 0x3
   725  0023                     	ds	1
   726  0024                     ?_tabla_num:
   727  0024                     Lcd_Set_Cursor@temp:	
   728                           ; 1 bytes @ 0x4
   729                           
   730  0024                     ___awdiv@counter:	
   731                           ; 1 bytes @ 0x4
   732                           
   733  0024                     tabla_num@numero:	
   734                           ; 1 bytes @ 0x4
   735                           
   736                           
   737                           ; 2 bytes @ 0x4
   738  0024                     	ds	1
   739  0025                     ___awdiv@sign:
   740                           
   741                           ; 1 bytes @ 0x5
   742  0025                     	ds	1
   743  0026                     ___awdiv@quotient:
   744                           
   745                           ; 2 bytes @ 0x6
   746  0026                     	ds	2
   747  0028                     ??_Print_Num:
   748  0028                     ??_Print_Cont:	
   749                           ; 1 bytes @ 0x8
   750                           
   751  0028                     ??_Transmisor_USART:	
   752                           ; 1 bytes @ 0x8
   753                           
   754                           
   755                           ; 1 bytes @ 0x8
   756  0028                     	ds	2
   757  002A                     Transmisor_USART@unidad:
   758  002A                     Print_Num@unidad:	
   759                           ; 2 bytes @ 0xA
   760                           
   761  002A                     Print_Cont@unidad:	
   762                           ; 2 bytes @ 0xA
   763                           
   764                           
   765                           ; 2 bytes @ 0xA
   766  002A                     	ds	2
   767  002C                     Transmisor_USART@valor:
   768  002C                     Print_Num@valor:	
   769                           ; 1 bytes @ 0xC
   770                           
   771  002C                     Print_Cont@temp:	
   772                           ; 1 bytes @ 0xC
   773                           
   774                           
   775                           ; 2 bytes @ 0xC
   776  002C                     	ds	1
   777  002D                     Transmisor_USART@decena:
   778  002D                     Print_Num@decena:	
   779                           ; 2 bytes @ 0xD
   780                           
   781                           
   782                           ; 2 bytes @ 0xD
   783  002D                     	ds	1
   784  002E                     Print_Cont@decena:
   785                           
   786                           ; 2 bytes @ 0xE
   787  002E                     	ds	1
   788  002F                     Transmisor_USART@centena:
   789  002F                     Print_Num@centena:	
   790                           ; 2 bytes @ 0xF
   791                           
   792                           
   793                           ; 2 bytes @ 0xF
   794  002F                     	ds	1
   795  0030                     Print_Cont@centena:
   796                           
   797                           ; 2 bytes @ 0x10
   798  0030                     	ds	1
   799  0031                     Transmisor_USART@temp:
   800  0031                     Print_Num@temp:	
   801                           ; 2 bytes @ 0x11
   802                           
   803                           
   804                           ; 2 bytes @ 0x11
   805  0031                     	ds	1
   806  0032                     Print_Cont@valor:
   807                           
   808                           ; 1 bytes @ 0x12
   809  0032                     	ds	1
   810  0033                     ?_USART:
   811  0033                     ?_LCD:	
   812                           ; 1 bytes @ 0x13
   813                           
   814  0033                     USART@canal_12:	
   815                           ; 1 bytes @ 0x13
   816                           
   817  0033                     LCD@canal_12:	
   818                           ; 1 bytes @ 0x13
   819                           
   820                           
   821                           ; 1 bytes @ 0x13
   822  0033                     	ds	1
   823  0034                     USART@canal_10:
   824  0034                     LCD@cont:	
   825                           ; 1 bytes @ 0x14
   826                           
   827                           
   828                           ; 1 bytes @ 0x14
   829  0034                     	ds	1
   830  0035                     ??_LCD:
   831                           
   832                           ; 1 bytes @ 0x15
   833  0035                     	ds	1
   834  0036                     LCD@canal_10:
   835                           
   836                           ; 1 bytes @ 0x16
   837  0036                     	ds	1
   838  0037                     ??_main:
   839                           
   840                           ; 1 bytes @ 0x17
   841  0037                     	ds	3
   842                           
   843                           	psect	maintext
   844  0398                     __pmaintext:	
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 91 in file "Lab_02.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : B00/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          0       3       0       0       0
   867 ;;      Totals:         0       3       0       0       0
   868 ;;Total ram usage:        3 bytes
   869 ;; Hardware stack levels required when called: 8
   870 ;; This function calls:
   871 ;;		_Config_ADC
   872 ;;		_Config_Oscilador
   873 ;;		_Config_Puertos
   874 ;;		_Config_TMR0
   875 ;;		_Config_USART
   876 ;;		_LCD
   877 ;;		_LCD_Init_8bits
   878 ;;		_USART
   879 ;; This function is called by:
   880 ;;		Startup code after reset
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _main
   886  0398                     _main:
   887  0398                     l1553:	
   888                           ;incstack = 0
   889                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   890                           
   891  0398  120A  118A  2693  120A  118A  	fcall	_Config_Oscilador
   892  039D                     l1555:
   893  039D  120A  118A  2684  120A  118A  	fcall	_Config_TMR0
   894  03A2  1283               	bcf	3,5	;RP0=0, select bank0
   895  03A3  1303               	bcf	3,6	;RP1=0, select bank0
   896  03A4  00B7               	movwf	??_main
   897  03A5  0837               	movf	??_main,w
   898  03A6  00BD               	movwf	_Valor_TMR0
   899  03A7                     l1557:
   900  03A7  120A  118A  262F  120A  118A  	fcall	_Config_ADC
   901  03AC                     l1559:
   902  03AC  120A  118A  2671  120A  118A  	fcall	_Config_USART
   903  03B1                     l1561:
   904  03B1  120A  118A  2647  120A  118A  	fcall	_Config_Puertos
   905  03B6                     l1563:
   906  03B6  120A  118A  243C  120A  118A  	fcall	_LCD_Init_8bits
   907  03BB                     l1565:
   908  03BB  1283               	bcf	3,5	;RP0=0, select bank0
   909  03BC  1303               	bcf	3,6	;RP1=0, select bank0
   910  03BD  083B               	movf	_Valor_Canal_12,w
   911  03BE  00B7               	movwf	??_main
   912  03BF  0837               	movf	??_main,w
   913  03C0  00B3               	movwf	USART@canal_12
   914  03C1  083C               	movf	_Valor_Canal_10,w
   915  03C2  120A  118A  2535  120A  118A  	fcall	_USART
   916  03C7                     l1567:
   917  03C7  1283               	bcf	3,5	;RP0=0, select bank0
   918  03C8  1303               	bcf	3,6	;RP1=0, select bank0
   919  03C9  083B               	movf	_Valor_Canal_12,w
   920  03CA  00B7               	movwf	??_main
   921  03CB  0837               	movf	??_main,w
   922  03CC  00B3               	movwf	LCD@canal_12
   923  03CD  083A               	movf	_contador,w
   924  03CE  00B8               	movwf	??_main+1
   925  03CF  0838               	movf	??_main+1,w
   926  03D0  00B4               	movwf	LCD@cont
   927  03D1  083C               	movf	_Valor_Canal_10,w
   928  03D2  120A  118A  22BD  120A  118A  	fcall	_LCD
   929  03D7                     l1569:
   930  03D7  3002               	movlw	2
   931  03D8  1283               	bcf	3,5	;RP0=0, select bank0
   932  03D9  1303               	bcf	3,6	;RP1=0, select bank0
   933  03DA  00B9               	movwf	??_main+2
   934  03DB  3004               	movlw	4
   935  03DC  00B8               	movwf	??_main+1
   936  03DD  30B9               	movlw	185
   937  03DE  00B7               	movwf	??_main
   938  03DF                     u1197:
   939  03DF  0BB7               	decfsz	??_main,f
   940  03E0  2BDF               	goto	u1197
   941  03E1  0BB8               	decfsz	??_main+1,f
   942  03E2  2BDF               	goto	u1197
   943  03E3  0BB9               	decfsz	??_main+2,f
   944  03E4  2BDF               	goto	u1197
   945  03E5  2BE6               	nop2
   946  03E6  2BBB               	goto	l1565
   947  03E7  120A  118A  280C   	ljmp	start
   948  03EA                     __end_of_main:
   949                           
   950                           	psect	text1
   951  0535                     __ptext1:	
   952 ;; *************** function _USART *****************
   953 ;; Defined at:
   954 ;;		line 128 in file "Libreria.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  canal_10        1    wreg     unsigned char 
   957 ;;  canal_12        1   19[BANK0 ] unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  canal_10        1   20[BANK0 ] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   969 ;;      Params:         0       1       0       0       0
   970 ;;      Locals:         0       1       0       0       0
   971 ;;      Temps:          0       0       0       0       0
   972 ;;      Totals:         0       2       0       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 4
   976 ;; This function calls:
   977 ;;		_Texto_USART
   978 ;;		_Transmisor_USART
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _USART
   986  0535                     _USART:
   987                           
   988                           ;incstack = 0
   989                           ; Regs used in _USART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   990                           ;USART@canal_10 stored from wreg
   991  0535  1283               	bcf	3,5	;RP0=0, select bank0
   992  0536  1303               	bcf	3,6	;RP1=0, select bank0
   993  0537  00B4               	movwf	USART@canal_10
   994  0538                     l1497:
   995                           
   996                           ;Libreria.c: 129:     Texto_USART("POT 1    ");
   997  0538  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   998  0539  120A  118A  2561  120A  118A  	fcall	_Texto_USART
   999                           
  1000                           ;Libreria.c: 130:     Texto_USART("POT 2");
  1001  053E  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1002  053F  120A  118A  2561  120A  118A  	fcall	_Texto_USART
  1003  0544                     l1499:
  1004                           
  1005                           ;Libreria.c: 131:     TXREG = '\r';
  1006  0544  300D               	movlw	13
  1007  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0547  0099               	movwf	25	;volatile
  1010  0548                     l1501:
  1011                           
  1012                           ;Libreria.c: 132:     Transmisor_USART(canal_10);
  1013  0548  0834               	movf	USART@canal_10,w
  1014  0549  120A  118A  201C  120A  118A  	fcall	_Transmisor_USART
  1015  054E                     l1503:
  1016                           
  1017                           ;Libreria.c: 133:     Texto_USART(" --- ");
  1018  054E  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1019  054F  120A  118A  2561  120A  118A  	fcall	_Texto_USART
  1020  0554                     l1505:
  1021                           
  1022                           ;Libreria.c: 134:     Transmisor_USART(canal_12);
  1023  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0556  0833               	movf	USART@canal_12,w
  1026  0557  120A  118A  201C  120A  118A  	fcall	_Transmisor_USART
  1027                           
  1028                           ;Libreria.c: 135:     TXREG = '\r';
  1029  055C  300D               	movlw	13
  1030  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1031  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1032  055F  0099               	movwf	25	;volatile
  1033  0560                     l185:
  1034  0560  0008               	return
  1035  0561                     __end_of_USART:
  1036                           
  1037                           	psect	text2
  1038  001C                     __ptext2:	
  1039 ;; *************** function _Transmisor_USART *****************
  1040 ;; Defined at:
  1041 ;;		line 81 in file "Libreria.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  valor           1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  valor           1   12[BANK0 ] unsigned char 
  1046 ;;  temp            2   17[BANK0 ] int 
  1047 ;;  centena         2   15[BANK0 ] int 
  1048 ;;  decena          2   13[BANK0 ] int 
  1049 ;;  unidad          2   10[BANK0 ] int 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       9       0       0       0
  1061 ;;      Temps:          0       2       0       0       0
  1062 ;;      Totals:         0      11       0       0       0
  1063 ;;Total ram usage:       11 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 3
  1066 ;; This function calls:
  1067 ;;		___awdiv
  1068 ;;		___wmul
  1069 ;;		_tabla_USART
  1070 ;; This function is called by:
  1071 ;;		_USART
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _Transmisor_USART
  1077  001C                     _Transmisor_USART:
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in _Transmisor_USART: [wreg+status,2+status,0+pclath+cstack]
  1081                           ;Transmisor_USART@valor stored from wreg
  1082  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1083  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1084  001E  00AC               	movwf	Transmisor_USART@valor
  1085  001F                     l1381:
  1086                           
  1087                           ;Libreria.c: 82:     int temp;;Libreria.c: 83:     int unidad, decena, centena;;Libreria
      +                          .c: 84:     temp = valor * 2;
  1088  001F  082C               	movf	Transmisor_USART@valor,w
  1089  0020  00A8               	movwf	??_Transmisor_USART
  1090  0021  01A9               	clrf	??_Transmisor_USART+1
  1091  0022  1003               	clrc
  1092  0023  0D28               	rlf	??_Transmisor_USART,w
  1093  0024  00B1               	movwf	Transmisor_USART@temp
  1094  0025  0D29               	rlf	??_Transmisor_USART+1,w
  1095  0026  00B2               	movwf	Transmisor_USART@temp+1
  1096  0027                     l1383:
  1097                           
  1098                           ;Libreria.c: 85:     centena = temp/100;
  1099  0027  3064               	movlw	100
  1100  0028  00A0               	movwf	___awdiv@divisor
  1101  0029  3000               	movlw	0
  1102  002A  00A1               	movwf	___awdiv@divisor+1
  1103  002B  0832               	movf	Transmisor_USART@temp+1,w
  1104  002C  00A3               	movwf	___awdiv@dividend+1
  1105  002D  0831               	movf	Transmisor_USART@temp,w
  1106  002E  00A2               	movwf	___awdiv@dividend
  1107  002F  120A  118A  232F  120A  118A  	fcall	___awdiv
  1108  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0036  0821               	movf	?___awdiv+1,w
  1111  0037  00B0               	movwf	Transmisor_USART@centena+1
  1112  0038  0820               	movf	?___awdiv,w
  1113  0039  00AF               	movwf	Transmisor_USART@centena
  1114  003A                     l1385:
  1115                           
  1116                           ;Libreria.c: 86:     temp = temp - centena*100;
  1117  003A  0830               	movf	Transmisor_USART@centena+1,w
  1118  003B  00A1               	movwf	___wmul@multiplier+1
  1119  003C  082F               	movf	Transmisor_USART@centena,w
  1120  003D  00A0               	movwf	___wmul@multiplier
  1121  003E  309C               	movlw	156
  1122  003F  00A2               	movwf	___wmul@multiplicand
  1123  0040  30FF               	movlw	255
  1124  0041  00A3               	movwf	___wmul@multiplicand+1
  1125  0042  120A  118A  258C  120A  118A  	fcall	___wmul
  1126  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0049  0831               	movf	Transmisor_USART@temp,w
  1129  004A  0720               	addwf	?___wmul,w
  1130  004B  00B1               	movwf	Transmisor_USART@temp
  1131  004C  0832               	movf	Transmisor_USART@temp+1,w
  1132  004D  1803               	skipnc
  1133  004E  0A32               	incf	Transmisor_USART@temp+1,w
  1134  004F  0721               	addwf	?___wmul+1,w
  1135  0050  00B2               	movwf	Transmisor_USART@temp+1
  1136  0051                     l1387:
  1137                           
  1138                           ;Libreria.c: 87:     decena = temp/10;
  1139  0051  300A               	movlw	10
  1140  0052  00A0               	movwf	___awdiv@divisor
  1141  0053  3000               	movlw	0
  1142  0054  00A1               	movwf	___awdiv@divisor+1
  1143  0055  0832               	movf	Transmisor_USART@temp+1,w
  1144  0056  00A3               	movwf	___awdiv@dividend+1
  1145  0057  0831               	movf	Transmisor_USART@temp,w
  1146  0058  00A2               	movwf	___awdiv@dividend
  1147  0059  120A  118A  232F  120A  118A  	fcall	___awdiv
  1148  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1149  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0060  0821               	movf	?___awdiv+1,w
  1151  0061  00AE               	movwf	Transmisor_USART@decena+1
  1152  0062  0820               	movf	?___awdiv,w
  1153  0063  00AD               	movwf	Transmisor_USART@decena
  1154  0064                     l1389:
  1155                           
  1156                           ;Libreria.c: 88:     unidad = temp - decena*10;
  1157  0064  082E               	movf	Transmisor_USART@decena+1,w
  1158  0065  00A1               	movwf	___wmul@multiplier+1
  1159  0066  082D               	movf	Transmisor_USART@decena,w
  1160  0067  00A0               	movwf	___wmul@multiplier
  1161  0068  30F6               	movlw	246
  1162  0069  00A2               	movwf	___wmul@multiplicand
  1163  006A  30FF               	movlw	255
  1164  006B  00A3               	movwf	___wmul@multiplicand+1
  1165  006C  120A  118A  258C  120A  118A  	fcall	___wmul
  1166  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0073  0831               	movf	Transmisor_USART@temp,w
  1169  0074  0720               	addwf	?___wmul,w
  1170  0075  00AA               	movwf	Transmisor_USART@unidad
  1171  0076  0832               	movf	Transmisor_USART@temp+1,w
  1172  0077  1803               	skipnc
  1173  0078  0A32               	incf	Transmisor_USART@temp+1,w
  1174  0079  0721               	addwf	?___wmul+1,w
  1175  007A  00AB               	movwf	Transmisor_USART@unidad+1
  1176  007B                     l1391:
  1177                           
  1178                           ;Libreria.c: 89:     tabla_USART(centena);
  1179  007B  0830               	movf	Transmisor_USART@centena+1,w
  1180  007C  00F7               	movwf	tabla_USART@numero+1
  1181  007D  082F               	movf	Transmisor_USART@centena,w
  1182  007E  00F6               	movwf	tabla_USART@numero
  1183  007F  120A  118A  2246  120A  118A  	fcall	_tabla_USART
  1184  0084                     l1393:
  1185                           
  1186                           ;Libreria.c: 90:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1187  0084  300D               	movlw	13
  1188  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0087  00A9               	movwf	??_Transmisor_USART+1
  1191  0088  30FB               	movlw	251
  1192  0089  00A8               	movwf	??_Transmisor_USART
  1193  008A                     u1207:
  1194  008A  0BA8               	decfsz	??_Transmisor_USART,f
  1195  008B  288A               	goto	u1207
  1196  008C  0BA9               	decfsz	??_Transmisor_USART+1,f
  1197  008D  288A               	goto	u1207
  1198  008E                     l1395:
  1199                           
  1200                           ;Libreria.c: 91:     TXREG = '.';
  1201  008E  302E               	movlw	46
  1202  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0091  0099               	movwf	25	;volatile
  1205  0092                     l1397:
  1206                           
  1207                           ;Libreria.c: 92:     tabla_USART(decena);
  1208  0092  082E               	movf	Transmisor_USART@decena+1,w
  1209  0093  00F7               	movwf	tabla_USART@numero+1
  1210  0094  082D               	movf	Transmisor_USART@decena,w
  1211  0095  00F6               	movwf	tabla_USART@numero
  1212  0096  120A  118A  2246  120A  118A  	fcall	_tabla_USART
  1213                           
  1214                           ;Libreria.c: 93:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1215  009B  300D               	movlw	13
  1216  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1217  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1218  009E  00A9               	movwf	??_Transmisor_USART+1
  1219  009F  30FB               	movlw	251
  1220  00A0  00A8               	movwf	??_Transmisor_USART
  1221  00A1                     u1217:
  1222  00A1  0BA8               	decfsz	??_Transmisor_USART,f
  1223  00A2  28A1               	goto	u1217
  1224  00A3  0BA9               	decfsz	??_Transmisor_USART+1,f
  1225  00A4  28A1               	goto	u1217
  1226  00A5                     l1399:
  1227                           
  1228                           ;Libreria.c: 94:     tabla_USART(unidad);
  1229  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1230  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1231  00A7  082B               	movf	Transmisor_USART@unidad+1,w
  1232  00A8  00F7               	movwf	tabla_USART@numero+1
  1233  00A9  082A               	movf	Transmisor_USART@unidad,w
  1234  00AA  00F6               	movwf	tabla_USART@numero
  1235  00AB  120A  118A  2246  120A  118A  	fcall	_tabla_USART
  1236  00B0                     l1401:
  1237                           
  1238                           ;Libreria.c: 95:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1239  00B0  300D               	movlw	13
  1240  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1241  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1242  00B3  00A9               	movwf	??_Transmisor_USART+1
  1243  00B4  30FB               	movlw	251
  1244  00B5  00A8               	movwf	??_Transmisor_USART
  1245  00B6                     u1227:
  1246  00B6  0BA8               	decfsz	??_Transmisor_USART,f
  1247  00B7  28B6               	goto	u1227
  1248  00B8  0BA9               	decfsz	??_Transmisor_USART+1,f
  1249  00B9  28B6               	goto	u1227
  1250  00BA                     l160:
  1251  00BA  0008               	return
  1252  00BB                     __end_of_Transmisor_USART:
  1253                           
  1254                           	psect	text3
  1255  0246                     __ptext3:	
  1256 ;; *************** function _tabla_USART *****************
  1257 ;; Defined at:
  1258 ;;		line 102 in file "Libreria.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  numero          2    6[COMMON] int 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         2       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0
  1275 ;;      Totals:         2       0       0       0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 2
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_Transmisor_USART
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _tabla_USART
  1288  0246                     _tabla_USART:
  1289  0246                     l1233:	
  1290                           ;incstack = 0
  1291                           ; Regs used in _tabla_USART: [wreg+status,2+status,0]
  1292                           
  1293                           
  1294                           ;Libreria.c: 105:     if (numero == 1){
  1295  0246  0376               	decf	tabla_USART@numero,w
  1296  0247  0477               	iorwf	tabla_USART@numero+1,w
  1297  0248  1D03               	btfss	3,2
  1298  0249  2A4B               	goto	u771
  1299  024A  2A4C               	goto	u770
  1300  024B                     u771:
  1301  024B  2A51               	goto	l1237
  1302  024C                     u770:
  1303  024C                     l1235:
  1304                           
  1305                           ;Libreria.c: 106:         TXREG = '1';
  1306  024C  3031               	movlw	49
  1307  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1308  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1309  024F  0099               	movwf	25	;volatile
  1310                           
  1311                           ;Libreria.c: 107:     } else if (numero == 2){
  1312  0250  2ABC               	goto	l182
  1313  0251                     l1237:
  1314  0251  3002               	movlw	2
  1315  0252  0676               	xorwf	tabla_USART@numero,w
  1316  0253  0477               	iorwf	tabla_USART@numero+1,w
  1317  0254  1D03               	btfss	3,2
  1318  0255  2A57               	goto	u781
  1319  0256  2A58               	goto	u780
  1320  0257                     u781:
  1321  0257  2A5D               	goto	l1241
  1322  0258                     u780:
  1323  0258                     l1239:
  1324                           
  1325                           ;Libreria.c: 108:         TXREG = '2';
  1326  0258  3032               	movlw	50
  1327  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1328  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1329  025B  0099               	movwf	25	;volatile
  1330                           
  1331                           ;Libreria.c: 109:     } else if (numero == 3){
  1332  025C  2ABC               	goto	l182
  1333  025D                     l1241:
  1334  025D  3003               	movlw	3
  1335  025E  0676               	xorwf	tabla_USART@numero,w
  1336  025F  0477               	iorwf	tabla_USART@numero+1,w
  1337  0260  1D03               	btfss	3,2
  1338  0261  2A63               	goto	u791
  1339  0262  2A64               	goto	u790
  1340  0263                     u791:
  1341  0263  2A69               	goto	l1245
  1342  0264                     u790:
  1343  0264                     l1243:
  1344                           
  1345                           ;Libreria.c: 110:         TXREG = '3';
  1346  0264  3033               	movlw	51
  1347  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0267  0099               	movwf	25	;volatile
  1350                           
  1351                           ;Libreria.c: 111:     } else if (numero == 4){
  1352  0268  2ABC               	goto	l182
  1353  0269                     l1245:
  1354  0269  3004               	movlw	4
  1355  026A  0676               	xorwf	tabla_USART@numero,w
  1356  026B  0477               	iorwf	tabla_USART@numero+1,w
  1357  026C  1D03               	btfss	3,2
  1358  026D  2A6F               	goto	u801
  1359  026E  2A70               	goto	u800
  1360  026F                     u801:
  1361  026F  2A75               	goto	l1249
  1362  0270                     u800:
  1363  0270                     l1247:
  1364                           
  1365                           ;Libreria.c: 112:         TXREG = '4';
  1366  0270  3034               	movlw	52
  1367  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0273  0099               	movwf	25	;volatile
  1370                           
  1371                           ;Libreria.c: 113:     } else if (numero == 5){
  1372  0274  2ABC               	goto	l182
  1373  0275                     l1249:
  1374  0275  3005               	movlw	5
  1375  0276  0676               	xorwf	tabla_USART@numero,w
  1376  0277  0477               	iorwf	tabla_USART@numero+1,w
  1377  0278  1D03               	btfss	3,2
  1378  0279  2A7B               	goto	u811
  1379  027A  2A7C               	goto	u810
  1380  027B                     u811:
  1381  027B  2A81               	goto	l1253
  1382  027C                     u810:
  1383  027C                     l1251:
  1384                           
  1385                           ;Libreria.c: 114:         TXREG = '5';
  1386  027C  3035               	movlw	53
  1387  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1388  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1389  027F  0099               	movwf	25	;volatile
  1390                           
  1391                           ;Libreria.c: 115:     } else if (numero == 6){
  1392  0280  2ABC               	goto	l182
  1393  0281                     l1253:
  1394  0281  3006               	movlw	6
  1395  0282  0676               	xorwf	tabla_USART@numero,w
  1396  0283  0477               	iorwf	tabla_USART@numero+1,w
  1397  0284  1D03               	btfss	3,2
  1398  0285  2A87               	goto	u821
  1399  0286  2A88               	goto	u820
  1400  0287                     u821:
  1401  0287  2A8D               	goto	l1257
  1402  0288                     u820:
  1403  0288                     l1255:
  1404                           
  1405                           ;Libreria.c: 116:         TXREG = '6';
  1406  0288  3036               	movlw	54
  1407  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1408  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1409  028B  0099               	movwf	25	;volatile
  1410                           
  1411                           ;Libreria.c: 117:     } else if (numero == 7){
  1412  028C  2ABC               	goto	l182
  1413  028D                     l1257:
  1414  028D  3007               	movlw	7
  1415  028E  0676               	xorwf	tabla_USART@numero,w
  1416  028F  0477               	iorwf	tabla_USART@numero+1,w
  1417  0290  1D03               	btfss	3,2
  1418  0291  2A93               	goto	u831
  1419  0292  2A94               	goto	u830
  1420  0293                     u831:
  1421  0293  2A99               	goto	l1261
  1422  0294                     u830:
  1423  0294                     l1259:
  1424                           
  1425                           ;Libreria.c: 118:         TXREG = '7';
  1426  0294  3037               	movlw	55
  1427  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0297  0099               	movwf	25	;volatile
  1430                           
  1431                           ;Libreria.c: 119:     } else if (numero == 8){
  1432  0298  2ABC               	goto	l182
  1433  0299                     l1261:
  1434  0299  3008               	movlw	8
  1435  029A  0676               	xorwf	tabla_USART@numero,w
  1436  029B  0477               	iorwf	tabla_USART@numero+1,w
  1437  029C  1D03               	btfss	3,2
  1438  029D  2A9F               	goto	u841
  1439  029E  2AA0               	goto	u840
  1440  029F                     u841:
  1441  029F  2AA5               	goto	l1265
  1442  02A0                     u840:
  1443  02A0                     l1263:
  1444                           
  1445                           ;Libreria.c: 120:         TXREG = '8';
  1446  02A0  3038               	movlw	56
  1447  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1448  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1449  02A3  0099               	movwf	25	;volatile
  1450                           
  1451                           ;Libreria.c: 121:     } else if (numero == 9){
  1452  02A4  2ABC               	goto	l182
  1453  02A5                     l1265:
  1454  02A5  3009               	movlw	9
  1455  02A6  0676               	xorwf	tabla_USART@numero,w
  1456  02A7  0477               	iorwf	tabla_USART@numero+1,w
  1457  02A8  1D03               	btfss	3,2
  1458  02A9  2AAB               	goto	u851
  1459  02AA  2AAC               	goto	u850
  1460  02AB                     u851:
  1461  02AB  2AB1               	goto	l1269
  1462  02AC                     u850:
  1463  02AC                     l1267:
  1464                           
  1465                           ;Libreria.c: 122:         TXREG = '9';
  1466  02AC  3039               	movlw	57
  1467  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1468  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1469  02AF  0099               	movwf	25	;volatile
  1470                           
  1471                           ;Libreria.c: 123:     } else if (numero == 0){
  1472  02B0  2ABC               	goto	l182
  1473  02B1                     l1269:
  1474  02B1  0876               	movf	tabla_USART@numero,w
  1475  02B2  0477               	iorwf	tabla_USART@numero+1,w
  1476  02B3  1D03               	btfss	3,2
  1477  02B4  2AB6               	goto	u861
  1478  02B5  2AB7               	goto	u860
  1479  02B6                     u861:
  1480  02B6  2ABC               	goto	l176
  1481  02B7                     u860:
  1482  02B7                     l1271:
  1483                           
  1484                           ;Libreria.c: 124:         TXREG = '0';
  1485  02B7  3030               	movlw	48
  1486  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1487  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1488  02BA  0099               	movwf	25	;volatile
  1489  02BB  2ABC               	goto	l182
  1490  02BC                     l176:
  1491  02BC                     l182:
  1492  02BC  0008               	return
  1493  02BD                     __end_of_tabla_USART:
  1494                           
  1495                           	psect	text4
  1496  0561                     __ptext4:	
  1497 ;; *************** function _Texto_USART *****************
  1498 ;; Defined at:
  1499 ;;		line 138 in file "Libreria.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  texto           1    wreg     PTR unsigned char 
  1502 ;;		 -> STR_3(6), STR_2(6), STR_1(10), 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  texto           1    1[BANK0 ] PTR unsigned char 
  1505 ;;		 -> STR_3(6), STR_2(6), STR_1(10), 
  1506 ;;  i               1    0[BANK0 ] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       2       0       0       0
  1518 ;;      Temps:          2       0       0       0       0
  1519 ;;      Totals:         2       2       0       0       0
  1520 ;;Total ram usage:        4 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 2
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_USART
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function _Texto_USART
  1532  0561                     _Texto_USART:
  1533                           
  1534                           ;incstack = 0
  1535                           ; Regs used in _Texto_USART: [wreg-fsr0h+status,2+status,0+pclath]
  1536                           ;Texto_USART@texto stored from wreg
  1537  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0563  00A1               	movwf	Texto_USART@texto
  1540  0564                     l1403:
  1541                           
  1542                           ;Libreria.c: 139:     char i = 0;
  1543  0564  01A0               	clrf	Texto_USART@i
  1544                           
  1545                           ;Libreria.c: 140:     while(texto[i] != '\0'){
  1546  0565  2D7C               	goto	l1411
  1547  0566                     l1405:
  1548                           
  1549                           ;Libreria.c: 141:         TXREG = texto[i];
  1550  0566  0820               	movf	Texto_USART@i,w
  1551  0567  0721               	addwf	Texto_USART@texto,w
  1552  0568  0084               	movwf	4
  1553  0569  120A  118A  2500  120A  118A  	fcall	stringdir
  1554  056E  0099               	movwf	25	;volatile
  1555  056F                     l1407:
  1556                           
  1557                           ;Libreria.c: 142:         i++;
  1558  056F  3001               	movlw	1
  1559  0570  00F6               	movwf	??_Texto_USART
  1560  0571  0876               	movf	??_Texto_USART,w
  1561  0572  07A0               	addwf	Texto_USART@i,f
  1562  0573                     l1409:
  1563                           
  1564                           ;Libreria.c: 143:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1565  0573  3003               	movlw	3
  1566  0574  00F7               	movwf	??_Texto_USART+1
  1567  0575  3097               	movlw	151
  1568  0576  00F6               	movwf	??_Texto_USART
  1569  0577                     u1237:
  1570  0577  0BF6               	decfsz	??_Texto_USART,f
  1571  0578  2D77               	goto	u1237
  1572  0579  0BF7               	decfsz	??_Texto_USART+1,f
  1573  057A  2D77               	goto	u1237
  1574  057B  2D7C               	nop2
  1575  057C                     l1411:
  1576                           
  1577                           ;Libreria.c: 140:     while(texto[i] != '\0'){
  1578  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1579  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1580  057E  0820               	movf	Texto_USART@i,w
  1581  057F  0721               	addwf	Texto_USART@texto,w
  1582  0580  0084               	movwf	4
  1583  0581  120A  118A  2500  120A  118A  	fcall	stringdir
  1584  0586  3A00               	xorlw	0
  1585  0587  1D03               	skipz
  1586  0588  2D8A               	goto	u1111
  1587  0589  2D8B               	goto	u1110
  1588  058A                     u1111:
  1589  058A  2D66               	goto	l1405
  1590  058B                     u1110:
  1591  058B                     l191:
  1592  058B  0008               	return
  1593  058C                     __end_of_Texto_USART:
  1594                           
  1595                           	psect	text5
  1596  043C                     __ptext5:	
  1597 ;; *************** function _LCD_Init_8bits *****************
  1598 ;; Defined at:
  1599 ;;		line 5 in file "LCD.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0
  1615 ;;      Temps:          0       2       0       0       0
  1616 ;;      Totals:         0       2       0       0       0
  1617 ;;Total ram usage:        2 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; Hardware stack levels required when called: 4
  1620 ;; This function calls:
  1621 ;;		_CMD_LCD
  1622 ;;		_PORT_LCD
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _LCD_Init_8bits
  1630  043C                     _LCD_Init_8bits:
  1631  043C                     l1487:	
  1632                           ;incstack = 0
  1633                           ; Regs used in _LCD_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  1634                           
  1635                           
  1636                           ;LCD.c: 6:     PORT_LCD(0);
  1637  043C  3000               	movlw	0
  1638  043D  120A  118A  23EA  120A  118A  	fcall	_PORT_LCD
  1639  0442                     l1489:
  1640                           
  1641                           ;LCD.c: 7:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1642  0442  3034               	movlw	52
  1643  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0445  00A2               	movwf	??_LCD_Init_8bits+1
  1646  0446  30F1               	movlw	241
  1647  0447  00A1               	movwf	??_LCD_Init_8bits
  1648  0448                     u1247:
  1649  0448  0BA1               	decfsz	??_LCD_Init_8bits,f
  1650  0449  2C48               	goto	u1247
  1651  044A  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1652  044B  2C48               	goto	u1247
  1653  044C                     l1491:
  1654                           
  1655                           ;LCD.c: 8:     CMD_LCD(0b111000);
  1656  044C  3038               	movlw	56
  1657  044D  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  1658                           
  1659                           ;LCD.c: 9:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1660  0452  3034               	movlw	52
  1661  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0455  00A2               	movwf	??_LCD_Init_8bits+1
  1664  0456  30F1               	movlw	241
  1665  0457  00A1               	movwf	??_LCD_Init_8bits
  1666  0458                     u1257:
  1667  0458  0BA1               	decfsz	??_LCD_Init_8bits,f
  1668  0459  2C58               	goto	u1257
  1669  045A  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1670  045B  2C58               	goto	u1257
  1671  045C                     l1493:
  1672                           
  1673                           ;LCD.c: 10:     CMD_LCD(0b1100);
  1674  045C  300C               	movlw	12
  1675  045D  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  1676  0462                     l1495:
  1677                           
  1678                           ;LCD.c: 11:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1679  0462  3034               	movlw	52
  1680  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1681  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1682  0465  00A2               	movwf	??_LCD_Init_8bits+1
  1683  0466  30F1               	movlw	241
  1684  0467  00A1               	movwf	??_LCD_Init_8bits
  1685  0468                     u1267:
  1686  0468  0BA1               	decfsz	??_LCD_Init_8bits,f
  1687  0469  2C68               	goto	u1267
  1688  046A  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1689  046B  2C68               	goto	u1267
  1690                           
  1691                           ;LCD.c: 12:     CMD_LCD(0b1);
  1692  046C  3001               	movlw	1
  1693  046D  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  1694                           
  1695                           ;LCD.c: 14:     CMD_LCD(0b111000);
  1696  0472  3038               	movlw	56
  1697  0473  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  1698                           
  1699                           ;LCD.c: 15:     CMD_LCD(0b1000);
  1700  0478  3008               	movlw	8
  1701  0479  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  1702                           
  1703                           ;LCD.c: 16:     CMD_LCD(0b1);
  1704  047E  3001               	movlw	1
  1705  047F  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  1706                           
  1707                           ;LCD.c: 17:     CMD_LCD(0b110);
  1708  0484  3006               	movlw	6
  1709  0485  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  1710  048A                     l209:
  1711  048A  0008               	return
  1712  048B                     __end_of_LCD_Init_8bits:
  1713                           
  1714                           	psect	text6
  1715  02BD                     __ptext6:	
  1716 ;; *************** function _LCD *****************
  1717 ;; Defined at:
  1718 ;;		line 146 in file "Libreria.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  canal_10        1    wreg     unsigned char 
  1721 ;;  canal_12        1   19[BANK0 ] unsigned char 
  1722 ;;  cont            1   20[BANK0 ] unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  canal_10        1   22[BANK0 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       2       0       0       0
  1735 ;;      Locals:         0       1       0       0       0
  1736 ;;      Temps:          0       1       0       0       0
  1737 ;;      Totals:         0       4       0       0       0
  1738 ;;Total ram usage:        4 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 7
  1741 ;; This function calls:
  1742 ;;		_Lcd_Set_Cursor
  1743 ;;		_Print_Cont
  1744 ;;		_Print_Num
  1745 ;;		_Write_LCD
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _LCD
  1753  02BD                     _LCD:
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1757                           ;LCD@canal_10 stored from wreg
  1758  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1759  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1760  02BF  00B6               	movwf	LCD@canal_10
  1761  02C0                     l1507:
  1762                           
  1763                           ;Libreria.c: 147:     Lcd_Set_Cursor(1,2);
  1764  02C0  3002               	movlw	2
  1765  02C1  00B5               	movwf	??_LCD
  1766  02C2  0835               	movf	??_LCD,w
  1767  02C3  00A1               	movwf	Lcd_Set_Cursor@b
  1768  02C4  3001               	movlw	1
  1769  02C5  120A  118A  25D9  120A  118A  	fcall	_Lcd_Set_Cursor
  1770  02CA                     l1509:
  1771                           
  1772                           ;Libreria.c: 148:     Write_LCD("S1");
  1773  02CA  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1774  02CB  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  1775  02D0                     l1511:
  1776                           
  1777                           ;Libreria.c: 149:     Lcd_Set_Cursor(2,1);
  1778  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1779  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1780  02D2  01A1               	clrf	Lcd_Set_Cursor@b
  1781  02D3  0AA1               	incf	Lcd_Set_Cursor@b,f
  1782  02D4  3002               	movlw	2
  1783  02D5  120A  118A  25D9  120A  118A  	fcall	_Lcd_Set_Cursor
  1784                           
  1785                           ;Libreria.c: 150:     Print_Num(canal_10);
  1786  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1787  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1788  02DC  0836               	movf	LCD@canal_10,w
  1789  02DD  120A  118A  2148  120A  118A  	fcall	_Print_Num
  1790  02E2                     l1513:
  1791                           
  1792                           ;Libreria.c: 152:     Lcd_Set_Cursor(1,8);
  1793  02E2  3008               	movlw	8
  1794  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1795  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1796  02E5  00B5               	movwf	??_LCD
  1797  02E6  0835               	movf	??_LCD,w
  1798  02E7  00A1               	movwf	Lcd_Set_Cursor@b
  1799  02E8  3001               	movlw	1
  1800  02E9  120A  118A  25D9  120A  118A  	fcall	_Lcd_Set_Cursor
  1801  02EE                     l1515:
  1802                           
  1803                           ;Libreria.c: 153:     Write_LCD("S2");
  1804  02EE  301A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1805  02EF  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  1806                           
  1807                           ;Libreria.c: 154:     Lcd_Set_Cursor(2,7);
  1808  02F4  3007               	movlw	7
  1809  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1810  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1811  02F7  00B5               	movwf	??_LCD
  1812  02F8  0835               	movf	??_LCD,w
  1813  02F9  00A1               	movwf	Lcd_Set_Cursor@b
  1814  02FA  3002               	movlw	2
  1815  02FB  120A  118A  25D9  120A  118A  	fcall	_Lcd_Set_Cursor
  1816  0300                     l1517:
  1817                           
  1818                           ;Libreria.c: 155:     Print_Num(canal_12);
  1819  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0302  0833               	movf	LCD@canal_12,w
  1822  0303  120A  118A  2148  120A  118A  	fcall	_Print_Num
  1823  0308                     l1519:
  1824                           
  1825                           ;Libreria.c: 157:     Lcd_Set_Cursor(1,13);
  1826  0308  300D               	movlw	13
  1827  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1828  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1829  030B  00B5               	movwf	??_LCD
  1830  030C  0835               	movf	??_LCD,w
  1831  030D  00A1               	movwf	Lcd_Set_Cursor@b
  1832  030E  3001               	movlw	1
  1833  030F  120A  118A  25D9  120A  118A  	fcall	_Lcd_Set_Cursor
  1834                           
  1835                           ;Libreria.c: 158:     Write_LCD("S3");
  1836  0314  301D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1837  0315  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  1838  031A                     l1521:
  1839                           
  1840                           ;Libreria.c: 159:     Lcd_Set_Cursor(2,13);
  1841  031A  300D               	movlw	13
  1842  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1843  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1844  031D  00B5               	movwf	??_LCD
  1845  031E  0835               	movf	??_LCD,w
  1846  031F  00A1               	movwf	Lcd_Set_Cursor@b
  1847  0320  3002               	movlw	2
  1848  0321  120A  118A  25D9  120A  118A  	fcall	_Lcd_Set_Cursor
  1849  0326                     l1523:
  1850                           
  1851                           ;Libreria.c: 160:     Print_Cont(cont);
  1852  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0328  0834               	movf	LCD@cont,w
  1855  0329  120A  118A  21CD  120A  118A  	fcall	_Print_Cont
  1856  032E                     l194:
  1857  032E  0008               	return
  1858  032F                     __end_of_LCD:
  1859                           
  1860                           	psect	text7
  1861  0148                     __ptext7:	
  1862 ;; *************** function _Print_Num *****************
  1863 ;; Defined at:
  1864 ;;		line 65 in file "LCD.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  valor           1    wreg     unsigned char 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  valor           1   12[BANK0 ] unsigned char 
  1869 ;;  temp            2   17[BANK0 ] int 
  1870 ;;  centena         2   15[BANK0 ] int 
  1871 ;;  decena          2   13[BANK0 ] int 
  1872 ;;  unidad          2   10[BANK0 ] int 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         0       9       0       0       0
  1884 ;;      Temps:          0       2       0       0       0
  1885 ;;      Totals:         0      11       0       0       0
  1886 ;;Total ram usage:       11 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 6
  1889 ;; This function calls:
  1890 ;;		_Write_LCD
  1891 ;;		___awdiv
  1892 ;;		___wmul
  1893 ;;		_tabla_num
  1894 ;; This function is called by:
  1895 ;;		_LCD
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _Print_Num
  1901  0148                     _Print_Num:
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _Print_Num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1905                           ;Print_Num@valor stored from wreg
  1906  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1908  014A  00AC               	movwf	Print_Num@valor
  1909  014B                     l1425:
  1910                           
  1911                           ;LCD.c: 66:     int temp;;LCD.c: 67:     int unidad, decena, centena;;LCD.c: 68:     tem
      +                          p = valor * 2;
  1912  014B  082C               	movf	Print_Num@valor,w
  1913  014C  00A8               	movwf	??_Print_Num
  1914  014D  01A9               	clrf	??_Print_Num+1
  1915  014E  1003               	clrc
  1916  014F  0D28               	rlf	??_Print_Num,w
  1917  0150  00B1               	movwf	Print_Num@temp
  1918  0151  0D29               	rlf	??_Print_Num+1,w
  1919  0152  00B2               	movwf	Print_Num@temp+1
  1920  0153                     l1427:
  1921                           
  1922                           ;LCD.c: 69:     centena = temp/100;
  1923  0153  3064               	movlw	100
  1924  0154  00A0               	movwf	___awdiv@divisor
  1925  0155  3000               	movlw	0
  1926  0156  00A1               	movwf	___awdiv@divisor+1
  1927  0157  0832               	movf	Print_Num@temp+1,w
  1928  0158  00A3               	movwf	___awdiv@dividend+1
  1929  0159  0831               	movf	Print_Num@temp,w
  1930  015A  00A2               	movwf	___awdiv@dividend
  1931  015B  120A  118A  232F  120A  118A  	fcall	___awdiv
  1932  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0162  0821               	movf	?___awdiv+1,w
  1935  0163  00B0               	movwf	Print_Num@centena+1
  1936  0164  0820               	movf	?___awdiv,w
  1937  0165  00AF               	movwf	Print_Num@centena
  1938  0166                     l1429:
  1939                           
  1940                           ;LCD.c: 70:     temp = temp - centena*100;
  1941  0166  0830               	movf	Print_Num@centena+1,w
  1942  0167  00A1               	movwf	___wmul@multiplier+1
  1943  0168  082F               	movf	Print_Num@centena,w
  1944  0169  00A0               	movwf	___wmul@multiplier
  1945  016A  309C               	movlw	156
  1946  016B  00A2               	movwf	___wmul@multiplicand
  1947  016C  30FF               	movlw	255
  1948  016D  00A3               	movwf	___wmul@multiplicand+1
  1949  016E  120A  118A  258C  120A  118A  	fcall	___wmul
  1950  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0175  0831               	movf	Print_Num@temp,w
  1953  0176  0720               	addwf	?___wmul,w
  1954  0177  00B1               	movwf	Print_Num@temp
  1955  0178  0832               	movf	Print_Num@temp+1,w
  1956  0179  1803               	skipnc
  1957  017A  0A32               	incf	Print_Num@temp+1,w
  1958  017B  0721               	addwf	?___wmul+1,w
  1959  017C  00B2               	movwf	Print_Num@temp+1
  1960  017D                     l1431:
  1961                           
  1962                           ;LCD.c: 71:     decena = temp/10;
  1963  017D  300A               	movlw	10
  1964  017E  00A0               	movwf	___awdiv@divisor
  1965  017F  3000               	movlw	0
  1966  0180  00A1               	movwf	___awdiv@divisor+1
  1967  0181  0832               	movf	Print_Num@temp+1,w
  1968  0182  00A3               	movwf	___awdiv@dividend+1
  1969  0183  0831               	movf	Print_Num@temp,w
  1970  0184  00A2               	movwf	___awdiv@dividend
  1971  0185  120A  118A  232F  120A  118A  	fcall	___awdiv
  1972  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1973  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1974  018C  0821               	movf	?___awdiv+1,w
  1975  018D  00AE               	movwf	Print_Num@decena+1
  1976  018E  0820               	movf	?___awdiv,w
  1977  018F  00AD               	movwf	Print_Num@decena
  1978  0190                     l1433:
  1979                           
  1980                           ;LCD.c: 72:     unidad = temp - decena*10;
  1981  0190  082E               	movf	Print_Num@decena+1,w
  1982  0191  00A1               	movwf	___wmul@multiplier+1
  1983  0192  082D               	movf	Print_Num@decena,w
  1984  0193  00A0               	movwf	___wmul@multiplier
  1985  0194  30F6               	movlw	246
  1986  0195  00A2               	movwf	___wmul@multiplicand
  1987  0196  30FF               	movlw	255
  1988  0197  00A3               	movwf	___wmul@multiplicand+1
  1989  0198  120A  118A  258C  120A  118A  	fcall	___wmul
  1990  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1991  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1992  019F  0831               	movf	Print_Num@temp,w
  1993  01A0  0720               	addwf	?___wmul,w
  1994  01A1  00AA               	movwf	Print_Num@unidad
  1995  01A2  0832               	movf	Print_Num@temp+1,w
  1996  01A3  1803               	skipnc
  1997  01A4  0A32               	incf	Print_Num@temp+1,w
  1998  01A5  0721               	addwf	?___wmul+1,w
  1999  01A6  00AB               	movwf	Print_Num@unidad+1
  2000  01A7                     l1435:
  2001                           
  2002                           ;LCD.c: 73:     tabla_num(centena);
  2003  01A7  0830               	movf	Print_Num@centena+1,w
  2004  01A8  00A5               	movwf	tabla_num@numero+1
  2005  01A9  082F               	movf	Print_Num@centena,w
  2006  01AA  00A4               	movwf	tabla_num@numero
  2007  01AB  120A  118A  20BB  120A  118A  	fcall	_tabla_num
  2008  01B0                     l1437:
  2009                           
  2010                           ;LCD.c: 74:     Write_LCD(".");
  2011  01B0  3020               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2012  01B1  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2013  01B6                     l1439:
  2014                           
  2015                           ;LCD.c: 75:     tabla_num(decena);
  2016  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2017  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2018  01B8  082E               	movf	Print_Num@decena+1,w
  2019  01B9  00A5               	movwf	tabla_num@numero+1
  2020  01BA  082D               	movf	Print_Num@decena,w
  2021  01BB  00A4               	movwf	tabla_num@numero
  2022  01BC  120A  118A  20BB  120A  118A  	fcall	_tabla_num
  2023  01C1                     l1441:
  2024                           
  2025                           ;LCD.c: 76:     tabla_num(unidad);
  2026  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2027  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2028  01C3  082B               	movf	Print_Num@unidad+1,w
  2029  01C4  00A5               	movwf	tabla_num@numero+1
  2030  01C5  082A               	movf	Print_Num@unidad,w
  2031  01C6  00A4               	movwf	tabla_num@numero
  2032  01C7  120A  118A  20BB  120A  118A  	fcall	_tabla_num
  2033  01CC                     l236:
  2034  01CC  0008               	return
  2035  01CD                     __end_of_Print_Num:
  2036                           
  2037                           	psect	text8
  2038  01CD                     __ptext8:	
  2039 ;; *************** function _Print_Cont *****************
  2040 ;; Defined at:
  2041 ;;		line 79 in file "LCD.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  valor           1    wreg     unsigned char 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  valor           1   18[BANK0 ] unsigned char 
  2046 ;;  centena         2   16[BANK0 ] int 
  2047 ;;  decena          2   14[BANK0 ] int 
  2048 ;;  temp            2   12[BANK0 ] int 
  2049 ;;  unidad          2   10[BANK0 ] int 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         0       9       0       0       0
  2061 ;;      Temps:          0       2       0       0       0
  2062 ;;      Totals:         0      11       0       0       0
  2063 ;;Total ram usage:       11 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 6
  2066 ;; This function calls:
  2067 ;;		___awdiv
  2068 ;;		___wmul
  2069 ;;		_tabla_num
  2070 ;; This function is called by:
  2071 ;;		_LCD
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _Print_Cont
  2077  01CD                     _Print_Cont:
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _Print_Cont: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2081                           ;Print_Cont@valor stored from wreg
  2082  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2083  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2084  01CF  00B2               	movwf	Print_Cont@valor
  2085  01D0                     l1443:
  2086                           
  2087                           ;LCD.c: 80:     int temp;;LCD.c: 81:     int unidad, decena, centena;;LCD.c: 82:     cen
      +                          tena = valor/100;
  2088  01D0  3064               	movlw	100
  2089  01D1  00A0               	movwf	___awdiv@divisor
  2090  01D2  3000               	movlw	0
  2091  01D3  00A1               	movwf	___awdiv@divisor+1
  2092  01D4  0832               	movf	Print_Cont@valor,w
  2093  01D5  00A8               	movwf	??_Print_Cont
  2094  01D6  01A9               	clrf	??_Print_Cont+1
  2095  01D7  0828               	movf	??_Print_Cont,w
  2096  01D8  00A2               	movwf	___awdiv@dividend
  2097  01D9  0829               	movf	??_Print_Cont+1,w
  2098  01DA  00A3               	movwf	___awdiv@dividend+1
  2099  01DB  120A  118A  232F  120A  118A  	fcall	___awdiv
  2100  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2101  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2102  01E2  0821               	movf	?___awdiv+1,w
  2103  01E3  00B1               	movwf	Print_Cont@centena+1
  2104  01E4  0820               	movf	?___awdiv,w
  2105  01E5  00B0               	movwf	Print_Cont@centena
  2106                           
  2107                           ;LCD.c: 83:     temp = valor - centena*100;
  2108  01E6  0831               	movf	Print_Cont@centena+1,w
  2109  01E7  00A1               	movwf	___wmul@multiplier+1
  2110  01E8  0830               	movf	Print_Cont@centena,w
  2111  01E9  00A0               	movwf	___wmul@multiplier
  2112  01EA  309C               	movlw	156
  2113  01EB  00A2               	movwf	___wmul@multiplicand
  2114  01EC  30FF               	movlw	255
  2115  01ED  00A3               	movwf	___wmul@multiplicand+1
  2116  01EE  120A  118A  258C  120A  118A  	fcall	___wmul
  2117  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2118  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2119  01F5  0832               	movf	Print_Cont@valor,w
  2120  01F6  0720               	addwf	?___wmul,w
  2121  01F7  00AC               	movwf	Print_Cont@temp
  2122  01F8  0821               	movf	?___wmul+1,w
  2123  01F9  1803               	skipnc
  2124  01FA  0A21               	incf	?___wmul+1,w
  2125  01FB  00AD               	movwf	Print_Cont@temp+1
  2126                           
  2127                           ;LCD.c: 84:     decena = temp/10;
  2128  01FC  300A               	movlw	10
  2129  01FD  00A0               	movwf	___awdiv@divisor
  2130  01FE  3000               	movlw	0
  2131  01FF  00A1               	movwf	___awdiv@divisor+1
  2132  0200  082D               	movf	Print_Cont@temp+1,w
  2133  0201  00A3               	movwf	___awdiv@dividend+1
  2134  0202  082C               	movf	Print_Cont@temp,w
  2135  0203  00A2               	movwf	___awdiv@dividend
  2136  0204  120A  118A  232F  120A  118A  	fcall	___awdiv
  2137  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2138  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2139  020B  0821               	movf	?___awdiv+1,w
  2140  020C  00AF               	movwf	Print_Cont@decena+1
  2141  020D  0820               	movf	?___awdiv,w
  2142  020E  00AE               	movwf	Print_Cont@decena
  2143                           
  2144                           ;LCD.c: 85:     unidad = temp - decena*10;
  2145  020F  082F               	movf	Print_Cont@decena+1,w
  2146  0210  00A1               	movwf	___wmul@multiplier+1
  2147  0211  082E               	movf	Print_Cont@decena,w
  2148  0212  00A0               	movwf	___wmul@multiplier
  2149  0213  30F6               	movlw	246
  2150  0214  00A2               	movwf	___wmul@multiplicand
  2151  0215  30FF               	movlw	255
  2152  0216  00A3               	movwf	___wmul@multiplicand+1
  2153  0217  120A  118A  258C  120A  118A  	fcall	___wmul
  2154  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2155  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2156  021E  082C               	movf	Print_Cont@temp,w
  2157  021F  0720               	addwf	?___wmul,w
  2158  0220  00AA               	movwf	Print_Cont@unidad
  2159  0221  082D               	movf	Print_Cont@temp+1,w
  2160  0222  1803               	skipnc
  2161  0223  0A2D               	incf	Print_Cont@temp+1,w
  2162  0224  0721               	addwf	?___wmul+1,w
  2163  0225  00AB               	movwf	Print_Cont@unidad+1
  2164  0226                     l1445:
  2165                           
  2166                           ;LCD.c: 86:     tabla_num(centena);
  2167  0226  0831               	movf	Print_Cont@centena+1,w
  2168  0227  00A5               	movwf	tabla_num@numero+1
  2169  0228  0830               	movf	Print_Cont@centena,w
  2170  0229  00A4               	movwf	tabla_num@numero
  2171  022A  120A  118A  20BB  120A  118A  	fcall	_tabla_num
  2172  022F                     l1447:
  2173                           
  2174                           ;LCD.c: 87:     tabla_num(decena);
  2175  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0231  082F               	movf	Print_Cont@decena+1,w
  2178  0232  00A5               	movwf	tabla_num@numero+1
  2179  0233  082E               	movf	Print_Cont@decena,w
  2180  0234  00A4               	movwf	tabla_num@numero
  2181  0235  120A  118A  20BB  120A  118A  	fcall	_tabla_num
  2182  023A                     l1449:
  2183                           
  2184                           ;LCD.c: 88:     tabla_num(unidad);
  2185  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2186  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2187  023C  082B               	movf	Print_Cont@unidad+1,w
  2188  023D  00A5               	movwf	tabla_num@numero+1
  2189  023E  082A               	movf	Print_Cont@unidad,w
  2190  023F  00A4               	movwf	tabla_num@numero
  2191  0240  120A  118A  20BB  120A  118A  	fcall	_tabla_num
  2192  0245                     l239:
  2193  0245  0008               	return
  2194  0246                     __end_of_Print_Cont:
  2195                           
  2196                           	psect	text9
  2197  00BB                     __ptext9:	
  2198 ;; *************** function _tabla_num *****************
  2199 ;; Defined at:
  2200 ;;		line 91 in file "LCD.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  numero          2    4[BANK0 ] int 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       2       0       0       0
  2215 ;;      Locals:         0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0
  2217 ;;      Totals:         0       2       0       0       0
  2218 ;;Total ram usage:        2 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 5
  2221 ;; This function calls:
  2222 ;;		_Write_LCD
  2223 ;; This function is called by:
  2224 ;;		_Print_Num
  2225 ;;		_Print_Cont
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function _tabla_num
  2231  00BB                     _tabla_num:
  2232  00BB                     l1283:	
  2233                           ;incstack = 0
  2234                           ; Regs used in _tabla_num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2235                           
  2236                           
  2237                           ;LCD.c: 95:     if (numero == 1){
  2238  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2239  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2240  00BD  0324               	decf	tabla_num@numero,w
  2241  00BE  0425               	iorwf	tabla_num@numero+1,w
  2242  00BF  1D03               	btfss	3,2
  2243  00C0  28C2               	goto	u871
  2244  00C1  28C3               	goto	u870
  2245  00C2                     u871:
  2246  00C2  28CA               	goto	l1287
  2247  00C3                     u870:
  2248  00C3                     l1285:
  2249                           
  2250                           ;LCD.c: 96:     Write_LCD("1");
  2251  00C3  3018               	movlw	(low (((STR_4+1)-__stringbase)| (0+32768)))& (0+255)
  2252  00C4  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2253                           
  2254                           ;LCD.c: 97:     } else if (numero == 2){
  2255  00C9  2947               	goto	l261
  2256  00CA                     l1287:
  2257  00CA  3002               	movlw	2
  2258  00CB  0624               	xorwf	tabla_num@numero,w
  2259  00CC  0425               	iorwf	tabla_num@numero+1,w
  2260  00CD  1D03               	btfss	3,2
  2261  00CE  28D0               	goto	u881
  2262  00CF  28D1               	goto	u880
  2263  00D0                     u881:
  2264  00D0  28D8               	goto	l1291
  2265  00D1                     u880:
  2266  00D1                     l1289:
  2267                           
  2268                           ;LCD.c: 98:         Write_LCD("2");
  2269  00D1  3015               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
  2270  00D2  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2271                           
  2272                           ;LCD.c: 99:     } else if (numero == 3){
  2273  00D7  2947               	goto	l261
  2274  00D8                     l1291:
  2275  00D8  3003               	movlw	3
  2276  00D9  0624               	xorwf	tabla_num@numero,w
  2277  00DA  0425               	iorwf	tabla_num@numero+1,w
  2278  00DB  1D03               	btfss	3,2
  2279  00DC  28DE               	goto	u891
  2280  00DD  28DF               	goto	u890
  2281  00DE                     u891:
  2282  00DE  28E6               	goto	l1295
  2283  00DF                     u890:
  2284  00DF                     l1293:
  2285                           
  2286                           ;LCD.c: 100:         Write_LCD("3");
  2287  00DF  301E               	movlw	(low (((STR_6+1)-__stringbase)| (0+32768)))& (0+255)
  2288  00E0  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2289                           
  2290                           ;LCD.c: 101:     } else if (numero == 4){
  2291  00E5  2947               	goto	l261
  2292  00E6                     l1295:
  2293  00E6  3004               	movlw	4
  2294  00E7  0624               	xorwf	tabla_num@numero,w
  2295  00E8  0425               	iorwf	tabla_num@numero+1,w
  2296  00E9  1D03               	btfss	3,2
  2297  00EA  28EC               	goto	u901
  2298  00EB  28ED               	goto	u900
  2299  00EC                     u901:
  2300  00EC  28F4               	goto	l1299
  2301  00ED                     u900:
  2302  00ED                     l1297:
  2303                           
  2304                           ;LCD.c: 102:         Write_LCD("4");
  2305  00ED  3024               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2306  00EE  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2307                           
  2308                           ;LCD.c: 103:     } else if (numero == 5){
  2309  00F3  2947               	goto	l261
  2310  00F4                     l1299:
  2311  00F4  3005               	movlw	5
  2312  00F5  0624               	xorwf	tabla_num@numero,w
  2313  00F6  0425               	iorwf	tabla_num@numero+1,w
  2314  00F7  1D03               	btfss	3,2
  2315  00F8  28FA               	goto	u911
  2316  00F9  28FB               	goto	u910
  2317  00FA                     u911:
  2318  00FA  2902               	goto	l1303
  2319  00FB                     u910:
  2320  00FB                     l1301:
  2321                           
  2322                           ;LCD.c: 104:         Write_LCD("5");
  2323  00FB  3026               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2324  00FC  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2325                           
  2326                           ;LCD.c: 105:     } else if (numero == 6){
  2327  0101  2947               	goto	l261
  2328  0102                     l1303:
  2329  0102  3006               	movlw	6
  2330  0103  0624               	xorwf	tabla_num@numero,w
  2331  0104  0425               	iorwf	tabla_num@numero+1,w
  2332  0105  1D03               	btfss	3,2
  2333  0106  2908               	goto	u921
  2334  0107  2909               	goto	u920
  2335  0108                     u921:
  2336  0108  2910               	goto	l1307
  2337  0109                     u920:
  2338  0109                     l1305:
  2339                           
  2340                           ;LCD.c: 106:         Write_LCD("6");
  2341  0109  3028               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2342  010A  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2343                           
  2344                           ;LCD.c: 107:     } else if (numero == 7){
  2345  010F  2947               	goto	l261
  2346  0110                     l1307:
  2347  0110  3007               	movlw	7
  2348  0111  0624               	xorwf	tabla_num@numero,w
  2349  0112  0425               	iorwf	tabla_num@numero+1,w
  2350  0113  1D03               	btfss	3,2
  2351  0114  2916               	goto	u931
  2352  0115  2917               	goto	u930
  2353  0116                     u931:
  2354  0116  291E               	goto	l1311
  2355  0117                     u930:
  2356  0117                     l1309:
  2357                           
  2358                           ;LCD.c: 108:         Write_LCD("7");
  2359  0117  302A               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2360  0118  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2361                           
  2362                           ;LCD.c: 109:     } else if (numero == 8){
  2363  011D  2947               	goto	l261
  2364  011E                     l1311:
  2365  011E  3008               	movlw	8
  2366  011F  0624               	xorwf	tabla_num@numero,w
  2367  0120  0425               	iorwf	tabla_num@numero+1,w
  2368  0121  1D03               	btfss	3,2
  2369  0122  2924               	goto	u941
  2370  0123  2925               	goto	u940
  2371  0124                     u941:
  2372  0124  292C               	goto	l1315
  2373  0125                     u940:
  2374  0125                     l1313:
  2375                           
  2376                           ;LCD.c: 110:         Write_LCD("8");
  2377  0125  302C               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2378  0126  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2379                           
  2380                           ;LCD.c: 111:     } else if (numero == 9){
  2381  012B  2947               	goto	l261
  2382  012C                     l1315:
  2383  012C  3009               	movlw	9
  2384  012D  0624               	xorwf	tabla_num@numero,w
  2385  012E  0425               	iorwf	tabla_num@numero+1,w
  2386  012F  1D03               	btfss	3,2
  2387  0130  2932               	goto	u951
  2388  0131  2933               	goto	u950
  2389  0132                     u951:
  2390  0132  293A               	goto	l1319
  2391  0133                     u950:
  2392  0133                     l1317:
  2393                           
  2394                           ;LCD.c: 112:         Write_LCD("9");
  2395  0133  302E               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2396  0134  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2397                           
  2398                           ;LCD.c: 113:     } else if (numero == 0){
  2399  0139  2947               	goto	l261
  2400  013A                     l1319:
  2401  013A  0824               	movf	tabla_num@numero,w
  2402  013B  0425               	iorwf	tabla_num@numero+1,w
  2403  013C  1D03               	btfss	3,2
  2404  013D  293F               	goto	u961
  2405  013E  2940               	goto	u960
  2406  013F                     u961:
  2407  013F  2947               	goto	l255
  2408  0140                     u960:
  2409  0140                     l1321:
  2410                           
  2411                           ;LCD.c: 114:         Write_LCD("0");
  2412  0140  3022               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2413  0141  120A  118A  25B3  120A  118A  	fcall	_Write_LCD
  2414  0146  2947               	goto	l261
  2415  0147                     l255:
  2416  0147                     l261:
  2417  0147  0008               	return
  2418  0148                     __end_of_tabla_num:
  2419                           
  2420                           	psect	text10
  2421  05B3                     __ptext10:	
  2422 ;; *************** function _Write_LCD *****************
  2423 ;; Defined at:
  2424 ;;		line 59 in file "LCD.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  a               1    wreg     PTR unsigned char 
  2427 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  2428 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  2429 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(3), 
  2430 ;;		 -> STR_5(3), STR_4(3), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  a               1    3[BANK0 ] PTR unsigned char 
  2433 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  2434 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  2435 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(3), 
  2436 ;;		 -> STR_5(3), STR_4(3), 
  2437 ;;  i               1    2[BANK0 ] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         0       0       0       0       0
  2448 ;;      Locals:         0       2       0       0       0
  2449 ;;      Temps:          0       1       0       0       0
  2450 ;;      Totals:         0       3       0       0       0
  2451 ;;Total ram usage:        3 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 4
  2454 ;; This function calls:
  2455 ;;		_Char_LCD
  2456 ;; This function is called by:
  2457 ;;		_LCD
  2458 ;;		_Print_Num
  2459 ;;		_tabla_num
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _Write_LCD
  2465  05B3                     _Write_LCD:
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _Write_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2469                           ;Write_LCD@a stored from wreg
  2470  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2471  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2472  05B5  00A3               	movwf	Write_LCD@a
  2473  05B6                     l1225:
  2474                           
  2475                           ;LCD.c: 60:     char i;;LCD.c: 61:     for (i = 0; a[i] != '\0'; i++)
  2476  05B6  01A2               	clrf	Write_LCD@i
  2477  05B7  2DCB               	goto	l1231
  2478  05B8                     l1227:
  2479                           
  2480                           ;LCD.c: 62:         Char_LCD(a[i]);
  2481  05B8  0822               	movf	Write_LCD@i,w
  2482  05B9  0723               	addwf	Write_LCD@a,w
  2483  05BA  0084               	movwf	4
  2484  05BB  120A  118A  2500  120A  118A  	fcall	stringdir
  2485  05C0  120A  118A  25FF  120A  118A  	fcall	_Char_LCD
  2486  05C5                     l1229:
  2487  05C5  3001               	movlw	1
  2488  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2489  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2490  05C8  00A1               	movwf	??_Write_LCD
  2491  05C9  0821               	movf	??_Write_LCD,w
  2492  05CA  07A2               	addwf	Write_LCD@i,f
  2493  05CB                     l1231:
  2494  05CB  0822               	movf	Write_LCD@i,w
  2495  05CC  0723               	addwf	Write_LCD@a,w
  2496  05CD  0084               	movwf	4
  2497  05CE  120A  118A  2500  120A  118A  	fcall	stringdir
  2498  05D3  3A00               	xorlw	0
  2499  05D4  1D03               	skipz
  2500  05D5  2DD7               	goto	u761
  2501  05D6  2DD8               	goto	u760
  2502  05D7                     u761:
  2503  05D7  2DB8               	goto	l1227
  2504  05D8                     u760:
  2505  05D8                     l233:
  2506  05D8  0008               	return
  2507  05D9                     __end_of_Write_LCD:
  2508                           
  2509                           	psect	text11
  2510  05FF                     __ptext11:	
  2511 ;; *************** function _Char_LCD *****************
  2512 ;; Defined at:
  2513 ;;		line 52 in file "LCD.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  a               1    wreg     unsigned char 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  a               1    0[BANK0 ] unsigned char 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       0       0       0       0
  2528 ;;      Locals:         0       1       0       0       0
  2529 ;;      Temps:          1       0       0       0       0
  2530 ;;      Totals:         1       1       0       0       0
  2531 ;;Total ram usage:        2 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 3
  2534 ;; This function calls:
  2535 ;;		_PORT_LCD
  2536 ;; This function is called by:
  2537 ;;		_Write_LCD
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _Char_LCD
  2543  05FF                     _Char_LCD:
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _Char_LCD: [wreg+status,2+status,0+pclath+cstack]
  2547                           ;Char_LCD@a stored from wreg
  2548  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0601  00A0               	movwf	Char_LCD@a
  2551  0602                     l1215:
  2552                           
  2553                           ;LCD.c: 53:     PORTEbits.RE0 = 1;
  2554  0602  1409               	bsf	9,0	;volatile
  2555  0603                     l1217:
  2556                           
  2557                           ;LCD.c: 54:     PORT_LCD(a);
  2558  0603  0820               	movf	Char_LCD@a,w
  2559  0604  120A  118A  23EA  120A  118A  	fcall	_PORT_LCD
  2560  0609                     l1219:
  2561                           
  2562                           ;LCD.c: 55:     PORTEbits.RE1 = 1;
  2563  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2564  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2565  060B  1489               	bsf	9,1	;volatile
  2566  060C                     l1221:
  2567                           
  2568                           ;LCD.c: 56:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2569  060C  30C7               	movlw	199
  2570  060D  00F7               	movwf	??_Char_LCD
  2571  060E                     u1277:
  2572  060E  2E0F               	nop2
  2573  060F  0BF7               	decfsz	??_Char_LCD,f
  2574  0610  2E0E               	goto	u1277
  2575  0611  2E12               	nop2
  2576  0612  2E13               	nop2
  2577  0613                     l1223:
  2578                           
  2579                           ;LCD.c: 57:     PORTEbits.RE1 = 0;
  2580  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0615  1089               	bcf	9,1	;volatile
  2583  0616                     l227:
  2584  0616  0008               	return
  2585  0617                     __end_of_Char_LCD:
  2586                           
  2587                           	psect	text12
  2588  058C                     __ptext12:	
  2589 ;; *************** function ___wmul *****************
  2590 ;; Defined at:
  2591 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2594 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  product         2    6[COMMON] unsigned int 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2    0[BANK0 ] unsigned int 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       4       0       0       0
  2607 ;;      Locals:         2       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0
  2609 ;;      Totals:         2       4       0       0       0
  2610 ;;Total ram usage:        6 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 2
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_Transmisor_USART
  2617 ;;		_Print_Num
  2618 ;;		_Print_Cont
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           
  2623                           ;psect for function ___wmul
  2624  058C                     ___wmul:
  2625  058C                     l1323:	
  2626                           ;incstack = 0
  2627                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2628                           
  2629  058C  01F6               	clrf	___wmul@product
  2630  058D  01F7               	clrf	___wmul@product+1
  2631  058E                     l1325:
  2632  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2633  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0590  1C20               	btfss	___wmul@multiplier,0
  2635  0591  2D93               	goto	u971
  2636  0592  2D94               	goto	u970
  2637  0593                     u971:
  2638  0593  2D9A               	goto	l347
  2639  0594                     u970:
  2640  0594                     l1327:
  2641  0594  0822               	movf	___wmul@multiplicand,w
  2642  0595  07F6               	addwf	___wmul@product,f
  2643  0596  1803               	skipnc
  2644  0597  0AF7               	incf	___wmul@product+1,f
  2645  0598  0823               	movf	___wmul@multiplicand+1,w
  2646  0599  07F7               	addwf	___wmul@product+1,f
  2647  059A                     l347:
  2648  059A  3001               	movlw	1
  2649  059B                     u985:
  2650  059B  1003               	clrc
  2651  059C  0DA2               	rlf	___wmul@multiplicand,f
  2652  059D  0DA3               	rlf	___wmul@multiplicand+1,f
  2653  059E  3EFF               	addlw	-1
  2654  059F  1D03               	skipz
  2655  05A0  2D9B               	goto	u985
  2656  05A1                     l1329:
  2657  05A1  3001               	movlw	1
  2658  05A2                     u995:
  2659  05A2  1003               	clrc
  2660  05A3  0CA1               	rrf	___wmul@multiplier+1,f
  2661  05A4  0CA0               	rrf	___wmul@multiplier,f
  2662  05A5  3EFF               	addlw	-1
  2663  05A6  1D03               	skipz
  2664  05A7  2DA2               	goto	u995
  2665  05A8                     l1331:
  2666  05A8  0820               	movf	___wmul@multiplier,w
  2667  05A9  0421               	iorwf	___wmul@multiplier+1,w
  2668  05AA  1D03               	btfss	3,2
  2669  05AB  2DAD               	goto	u1001
  2670  05AC  2DAE               	goto	u1000
  2671  05AD                     u1001:
  2672  05AD  2D8E               	goto	l1325
  2673  05AE                     u1000:
  2674  05AE                     l1333:
  2675  05AE  0877               	movf	___wmul@product+1,w
  2676  05AF  00A1               	movwf	?___wmul+1
  2677  05B0  0876               	movf	___wmul@product,w
  2678  05B1  00A0               	movwf	?___wmul
  2679  05B2                     l349:
  2680  05B2  0008               	return
  2681  05B3                     __end_of___wmul:
  2682                           
  2683                           	psect	text13
  2684  032F                     __ptext13:	
  2685 ;; *************** function ___awdiv *****************
  2686 ;; Defined at:
  2687 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  divisor         2    0[BANK0 ] int 
  2690 ;;  dividend        2    2[BANK0 ] int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  quotient        2    6[BANK0 ] int 
  2693 ;;  sign            1    5[BANK0 ] unsigned char 
  2694 ;;  counter         1    4[BANK0 ] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[BANK0 ] int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       4       0       0       0
  2705 ;;      Locals:         0       4       0       0       0
  2706 ;;      Temps:          1       0       0       0       0
  2707 ;;      Totals:         1       8       0       0       0
  2708 ;;Total ram usage:        9 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 2
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_Transmisor_USART
  2715 ;;		_Print_Num
  2716 ;;		_Print_Cont
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function ___awdiv
  2722  032F                     ___awdiv:
  2723  032F                     l1337:	
  2724                           ;incstack = 0
  2725                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2726                           
  2727  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0331  01A5               	clrf	___awdiv@sign
  2730  0332                     l1339:
  2731  0332  1FA1               	btfss	___awdiv@divisor+1,7
  2732  0333  2B35               	goto	u1011
  2733  0334  2B36               	goto	u1010
  2734  0335                     u1011:
  2735  0335  2B3D               	goto	l1345
  2736  0336                     u1010:
  2737  0336                     l1341:
  2738  0336  09A0               	comf	___awdiv@divisor,f
  2739  0337  09A1               	comf	___awdiv@divisor+1,f
  2740  0338  0AA0               	incf	___awdiv@divisor,f
  2741  0339  1903               	skipnz
  2742  033A  0AA1               	incf	___awdiv@divisor+1,f
  2743  033B                     l1343:
  2744  033B  01A5               	clrf	___awdiv@sign
  2745  033C  0AA5               	incf	___awdiv@sign,f
  2746  033D                     l1345:
  2747  033D  1FA3               	btfss	___awdiv@dividend+1,7
  2748  033E  2B40               	goto	u1021
  2749  033F  2B41               	goto	u1020
  2750  0340                     u1021:
  2751  0340  2B4A               	goto	l1351
  2752  0341                     u1020:
  2753  0341                     l1347:
  2754  0341  09A2               	comf	___awdiv@dividend,f
  2755  0342  09A3               	comf	___awdiv@dividend+1,f
  2756  0343  0AA2               	incf	___awdiv@dividend,f
  2757  0344  1903               	skipnz
  2758  0345  0AA3               	incf	___awdiv@dividend+1,f
  2759  0346                     l1349:
  2760  0346  3001               	movlw	1
  2761  0347  00F6               	movwf	??___awdiv
  2762  0348  0876               	movf	??___awdiv,w
  2763  0349  06A5               	xorwf	___awdiv@sign,f
  2764  034A                     l1351:
  2765  034A  01A6               	clrf	___awdiv@quotient
  2766  034B  01A7               	clrf	___awdiv@quotient+1
  2767  034C                     l1353:
  2768  034C  0820               	movf	___awdiv@divisor,w
  2769  034D  0421               	iorwf	___awdiv@divisor+1,w
  2770  034E  1903               	btfsc	3,2
  2771  034F  2B51               	goto	u1031
  2772  0350  2B52               	goto	u1030
  2773  0351                     u1031:
  2774  0351  2B89               	goto	l1373
  2775  0352                     u1030:
  2776  0352                     l1355:
  2777  0352  01A4               	clrf	___awdiv@counter
  2778  0353  0AA4               	incf	___awdiv@counter,f
  2779  0354  2B60               	goto	l1361
  2780  0355                     l1357:
  2781  0355  3001               	movlw	1
  2782  0356                     u1045:
  2783  0356  1003               	clrc
  2784  0357  0DA0               	rlf	___awdiv@divisor,f
  2785  0358  0DA1               	rlf	___awdiv@divisor+1,f
  2786  0359  3EFF               	addlw	-1
  2787  035A  1D03               	skipz
  2788  035B  2B56               	goto	u1045
  2789  035C                     l1359:
  2790  035C  3001               	movlw	1
  2791  035D  00F6               	movwf	??___awdiv
  2792  035E  0876               	movf	??___awdiv,w
  2793  035F  07A4               	addwf	___awdiv@counter,f
  2794  0360                     l1361:
  2795  0360  1FA1               	btfss	___awdiv@divisor+1,7
  2796  0361  2B63               	goto	u1051
  2797  0362  2B64               	goto	u1050
  2798  0363                     u1051:
  2799  0363  2B55               	goto	l1357
  2800  0364                     u1050:
  2801  0364                     l1363:
  2802  0364  3001               	movlw	1
  2803  0365                     u1065:
  2804  0365  1003               	clrc
  2805  0366  0DA6               	rlf	___awdiv@quotient,f
  2806  0367  0DA7               	rlf	___awdiv@quotient+1,f
  2807  0368  3EFF               	addlw	-1
  2808  0369  1D03               	skipz
  2809  036A  2B65               	goto	u1065
  2810  036B  0821               	movf	___awdiv@divisor+1,w
  2811  036C  0223               	subwf	___awdiv@dividend+1,w
  2812  036D  1D03               	skipz
  2813  036E  2B71               	goto	u1075
  2814  036F  0820               	movf	___awdiv@divisor,w
  2815  0370  0222               	subwf	___awdiv@dividend,w
  2816  0371                     u1075:
  2817  0371  1C03               	skipc
  2818  0372  2B74               	goto	u1071
  2819  0373  2B75               	goto	u1070
  2820  0374                     u1071:
  2821  0374  2B7C               	goto	l1369
  2822  0375                     u1070:
  2823  0375                     l1365:
  2824  0375  0820               	movf	___awdiv@divisor,w
  2825  0376  02A2               	subwf	___awdiv@dividend,f
  2826  0377  0821               	movf	___awdiv@divisor+1,w
  2827  0378  1C03               	skipc
  2828  0379  03A3               	decf	___awdiv@dividend+1,f
  2829  037A  02A3               	subwf	___awdiv@dividend+1,f
  2830  037B                     l1367:
  2831  037B  1426               	bsf	___awdiv@quotient,0
  2832  037C                     l1369:
  2833  037C  3001               	movlw	1
  2834  037D                     u1085:
  2835  037D  1003               	clrc
  2836  037E  0CA1               	rrf	___awdiv@divisor+1,f
  2837  037F  0CA0               	rrf	___awdiv@divisor,f
  2838  0380  3EFF               	addlw	-1
  2839  0381  1D03               	skipz
  2840  0382  2B7D               	goto	u1085
  2841  0383                     l1371:
  2842  0383  3001               	movlw	1
  2843  0384  02A4               	subwf	___awdiv@counter,f
  2844  0385  1D03               	btfss	3,2
  2845  0386  2B88               	goto	u1091
  2846  0387  2B89               	goto	u1090
  2847  0388                     u1091:
  2848  0388  2B64               	goto	l1363
  2849  0389                     u1090:
  2850  0389                     l1373:
  2851  0389  0825               	movf	___awdiv@sign,w
  2852  038A  1903               	btfsc	3,2
  2853  038B  2B8D               	goto	u1101
  2854  038C  2B8E               	goto	u1100
  2855  038D                     u1101:
  2856  038D  2B93               	goto	l1377
  2857  038E                     u1100:
  2858  038E                     l1375:
  2859  038E  09A6               	comf	___awdiv@quotient,f
  2860  038F  09A7               	comf	___awdiv@quotient+1,f
  2861  0390  0AA6               	incf	___awdiv@quotient,f
  2862  0391  1903               	skipnz
  2863  0392  0AA7               	incf	___awdiv@quotient+1,f
  2864  0393                     l1377:
  2865  0393  0827               	movf	___awdiv@quotient+1,w
  2866  0394  00A1               	movwf	?___awdiv+1
  2867  0395  0826               	movf	___awdiv@quotient,w
  2868  0396  00A0               	movwf	?___awdiv
  2869  0397                     l500:
  2870  0397  0008               	return
  2871  0398                     __end_of___awdiv:
  2872                           
  2873                           	psect	text14
  2874  05D9                     __ptext14:	
  2875 ;; *************** function _Lcd_Set_Cursor *****************
  2876 ;; Defined at:
  2877 ;;		line 37 in file "LCD.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  a               1    wreg     unsigned char 
  2880 ;;  b               1    1[BANK0 ] unsigned char 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  a               1    3[BANK0 ] unsigned char 
  2883 ;;  temp            1    4[BANK0 ] unsigned char 
  2884 ;;  y               1    0        unsigned char 
  2885 ;;  z               1    0        unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       1       0       0       0
  2896 ;;      Locals:         0       2       0       0       0
  2897 ;;      Temps:          0       1       0       0       0
  2898 ;;      Totals:         0       4       0       0       0
  2899 ;;Total ram usage:        4 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 4
  2902 ;; This function calls:
  2903 ;;		_CMD_LCD
  2904 ;; This function is called by:
  2905 ;;		_LCD
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           
  2910                           ;psect for function _Lcd_Set_Cursor
  2911  05D9                     _Lcd_Set_Cursor:
  2912                           
  2913                           ;incstack = 0
  2914                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2915                           ;Lcd_Set_Cursor@a stored from wreg
  2916  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2917  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2918  05DB  00A3               	movwf	Lcd_Set_Cursor@a
  2919  05DC                     l1413:
  2920                           
  2921                           ;LCD.c: 38:     char temp, z, y;;LCD.c: 39:     if (a == 1) {
  2922  05DC  0323               	decf	Lcd_Set_Cursor@a,w
  2923  05DD  1D03               	btfss	3,2
  2924  05DE  2DE0               	goto	u1121
  2925  05DF  2DE1               	goto	u1120
  2926  05E0                     u1121:
  2927  05E0  2DED               	goto	l1419
  2928  05E1                     u1120:
  2929  05E1                     l1415:
  2930                           
  2931                           ;LCD.c: 40:         temp = 0x80 + b - 1;
  2932  05E1  0821               	movf	Lcd_Set_Cursor@b,w
  2933  05E2  3E7F               	addlw	127
  2934  05E3  00A2               	movwf	??_Lcd_Set_Cursor
  2935  05E4  0822               	movf	??_Lcd_Set_Cursor,w
  2936  05E5  00A4               	movwf	Lcd_Set_Cursor@temp
  2937  05E6                     l1417:
  2938                           
  2939                           ;LCD.c: 41:         CMD_LCD(temp);
  2940  05E6  0824               	movf	Lcd_Set_Cursor@temp,w
  2941  05E7  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  2942                           
  2943                           ;LCD.c: 42:     } else if (a == 2) {
  2944  05EC  2DFE               	goto	l221
  2945  05ED                     l1419:
  2946  05ED  3002               	movlw	2
  2947  05EE  0623               	xorwf	Lcd_Set_Cursor@a,w
  2948  05EF  1D03               	btfss	3,2
  2949  05F0  2DF2               	goto	u1131
  2950  05F1  2DF3               	goto	u1130
  2951  05F2                     u1131:
  2952  05F2  2DFE               	goto	l221
  2953  05F3                     u1130:
  2954  05F3                     l1421:
  2955                           
  2956                           ;LCD.c: 43:         temp = 0xC0 + b - 1;
  2957  05F3  0821               	movf	Lcd_Set_Cursor@b,w
  2958  05F4  3EBF               	addlw	191
  2959  05F5  00A2               	movwf	??_Lcd_Set_Cursor
  2960  05F6  0822               	movf	??_Lcd_Set_Cursor,w
  2961  05F7  00A4               	movwf	Lcd_Set_Cursor@temp
  2962  05F8                     l1423:
  2963                           
  2964                           ;LCD.c: 44:         CMD_LCD(temp);
  2965  05F8  0824               	movf	Lcd_Set_Cursor@temp,w
  2966  05F9  120A  118A  2617  120A  118A  	fcall	_CMD_LCD
  2967  05FE                     l221:
  2968  05FE  0008               	return
  2969  05FF                     __end_of_Lcd_Set_Cursor:
  2970                           
  2971                           	psect	text15
  2972  0617                     __ptext15:	
  2973 ;; *************** function _CMD_LCD *****************
  2974 ;; Defined at:
  2975 ;;		line 30 in file "LCD.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  v               1    wreg     unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  v               1    0[BANK0 ] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       0       0       0
  2990 ;;      Locals:         0       1       0       0       0
  2991 ;;      Temps:          1       0       0       0       0
  2992 ;;      Totals:         1       1       0       0       0
  2993 ;;Total ram usage:        2 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 3
  2996 ;; This function calls:
  2997 ;;		_PORT_LCD
  2998 ;; This function is called by:
  2999 ;;		_LCD_Init_8bits
  3000 ;;		_Lcd_Set_Cursor
  3001 ;;		_Clear_LCD
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function _CMD_LCD
  3007  0617                     _CMD_LCD:
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in _CMD_LCD: [wreg+status,2+status,0+pclath+cstack]
  3011                           ;CMD_LCD@v stored from wreg
  3012  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0618  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0619  00A0               	movwf	CMD_LCD@v
  3015  061A                     l1273:
  3016                           
  3017                           ;LCD.c: 31:     PORTEbits.RE0 = 0;
  3018  061A  1009               	bcf	9,0	;volatile
  3019  061B                     l1275:
  3020                           
  3021                           ;LCD.c: 32:     PORT_LCD(v);
  3022  061B  0820               	movf	CMD_LCD@v,w
  3023  061C  120A  118A  23EA  120A  118A  	fcall	_PORT_LCD
  3024  0621                     l1277:
  3025                           
  3026                           ;LCD.c: 33:     PORTEbits.RE1 = 1;
  3027  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0623  1489               	bsf	9,1	;volatile
  3030  0624                     l1279:
  3031                           
  3032                           ;LCD.c: 34:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3033  0624  30C7               	movlw	199
  3034  0625  00F7               	movwf	??_CMD_LCD
  3035  0626                     u1287:
  3036  0626  2E27               	nop2
  3037  0627  0BF7               	decfsz	??_CMD_LCD,f
  3038  0628  2E26               	goto	u1287
  3039  0629  2E2A               	nop2
  3040  062A  2E2B               	nop2
  3041  062B                     l1281:
  3042                           
  3043                           ;LCD.c: 35:     PORTEbits.RE1 = 0;
  3044  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3045  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3046  062D  1089               	bcf	9,1	;volatile
  3047  062E                     l215:
  3048  062E  0008               	return
  3049  062F                     __end_of_CMD_LCD:
  3050                           
  3051                           	psect	text16
  3052  03EA                     __ptext16:	
  3053 ;; *************** function _PORT_LCD *****************
  3054 ;; Defined at:
  3055 ;;		line 20 in file "LCD.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  v               1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  v               1    6[COMMON] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       0       0       0       0
  3070 ;;      Locals:         1       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0
  3072 ;;      Totals:         1       0       0       0       0
  3073 ;;Total ram usage:        1 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 2
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_LCD_Init_8bits
  3080 ;;		_CMD_LCD
  3081 ;;		_Char_LCD
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _PORT_LCD
  3087  03EA                     _PORT_LCD:
  3088                           
  3089                           ;incstack = 0
  3090                           ; Regs used in _PORT_LCD: [wreg]
  3091                           ;PORT_LCD@v stored from wreg
  3092  03EA  00F6               	movwf	PORT_LCD@v
  3093  03EB                     l1213:
  3094                           
  3095                           ;LCD.c: 21:     PORTAbits.RA0 = v & 1 ? 1 : 0;
  3096  03EB  1876               	btfsc	PORT_LCD@v,0
  3097  03EC  2BEE               	goto	u601
  3098  03ED  2BF2               	goto	u600
  3099  03EE                     u601:
  3100  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3101  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3102  03F0  1405               	bsf	5,0	;volatile
  3103  03F1  2BF5               	goto	u614
  3104  03F2                     u600:
  3105  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3106  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3107  03F4  1005               	bcf	5,0	;volatile
  3108  03F5                     u614:
  3109                           
  3110                           ;LCD.c: 22:     PORTAbits.RA1 = v & 2 ? 1 : 0;
  3111  03F5  18F6               	btfsc	PORT_LCD@v,1
  3112  03F6  2BF8               	goto	u621
  3113  03F7  2BFC               	goto	u620
  3114  03F8                     u621:
  3115  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3116  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3117  03FA  1485               	bsf	5,1	;volatile
  3118  03FB  2BFF               	goto	u634
  3119  03FC                     u620:
  3120  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  3121  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  3122  03FE  1085               	bcf	5,1	;volatile
  3123  03FF                     u634:
  3124                           
  3125                           ;LCD.c: 23:     PORTAbits.RA2 = v & 4 ? 1 : 0;
  3126  03FF  1976               	btfsc	PORT_LCD@v,2
  3127  0400  2C02               	goto	u641
  3128  0401  2C06               	goto	u640
  3129  0402                     u641:
  3130  0402  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0403  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0404  1505               	bsf	5,2	;volatile
  3133  0405  2C09               	goto	u654
  3134  0406                     u640:
  3135  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0408  1105               	bcf	5,2	;volatile
  3138  0409                     u654:
  3139                           
  3140                           ;LCD.c: 24:     PORTAbits.RA3 = v & 8 ? 1 : 0;
  3141  0409  19F6               	btfsc	PORT_LCD@v,3
  3142  040A  2C0C               	goto	u661
  3143  040B  2C10               	goto	u660
  3144  040C                     u661:
  3145  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3146  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3147  040E  1585               	bsf	5,3	;volatile
  3148  040F  2C13               	goto	u674
  3149  0410                     u660:
  3150  0410  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0411  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0412  1185               	bcf	5,3	;volatile
  3153  0413                     u674:
  3154                           
  3155                           ;LCD.c: 25:     PORTAbits.RA4 = v & 16 ? 1 : 0;
  3156  0413  1A76               	btfsc	PORT_LCD@v,4
  3157  0414  2C16               	goto	u681
  3158  0415  2C1A               	goto	u680
  3159  0416                     u681:
  3160  0416  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0417  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0418  1605               	bsf	5,4	;volatile
  3163  0419  2C1D               	goto	u694
  3164  041A                     u680:
  3165  041A  1283               	bcf	3,5	;RP0=0, select bank0
  3166  041B  1303               	bcf	3,6	;RP1=0, select bank0
  3167  041C  1205               	bcf	5,4	;volatile
  3168  041D                     u694:
  3169                           
  3170                           ;LCD.c: 26:     PORTAbits.RA5 = v & 32 ? 1 : 0;
  3171  041D  1AF6               	btfsc	PORT_LCD@v,5
  3172  041E  2C20               	goto	u701
  3173  041F  2C24               	goto	u700
  3174  0420                     u701:
  3175  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0422  1685               	bsf	5,5	;volatile
  3178  0423  2C27               	goto	u714
  3179  0424                     u700:
  3180  0424  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0425  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0426  1285               	bcf	5,5	;volatile
  3183  0427                     u714:
  3184                           
  3185                           ;LCD.c: 27:     PORTAbits.RA6 = v & 64 ? 1 : 0;
  3186  0427  1B76               	btfsc	PORT_LCD@v,6
  3187  0428  2C2A               	goto	u721
  3188  0429  2C2E               	goto	u720
  3189  042A                     u721:
  3190  042A  1283               	bcf	3,5	;RP0=0, select bank0
  3191  042B  1303               	bcf	3,6	;RP1=0, select bank0
  3192  042C  1705               	bsf	5,6	;volatile
  3193  042D  2C31               	goto	u734
  3194  042E                     u720:
  3195  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3196  042F  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0430  1305               	bcf	5,6	;volatile
  3198  0431                     u734:
  3199                           
  3200                           ;LCD.c: 28:     PORTAbits.RA7 = v & 128 ? 1 : 0;
  3201  0431  1BF6               	btfsc	PORT_LCD@v,7
  3202  0432  2C34               	goto	u741
  3203  0433  2C38               	goto	u740
  3204  0434                     u741:
  3205  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0435  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0436  1785               	bsf	5,7	;volatile
  3208  0437  2C3B               	goto	u754
  3209  0438                     u740:
  3210  0438  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0439  1303               	bcf	3,6	;RP1=0, select bank0
  3212  043A  1385               	bcf	5,7	;volatile
  3213  043B                     u754:
  3214  043B                     l212:
  3215  043B  0008               	return
  3216  043C                     __end_of_PORT_LCD:
  3217                           
  3218                           	psect	text17
  3219  0671                     __ptext17:	
  3220 ;; *************** function _Config_USART *****************
  3221 ;; Defined at:
  3222 ;;		line 42 in file "Libreria.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 2
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _Config_USART
  3252  0671                     _Config_USART:
  3253  0671                     l1477:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _Config_USART: [wreg]
  3256                           
  3257                           
  3258                           ;Libreria.c: 44:     TXEN = 1;
  3259  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3260  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3261  0673  1698               	bsf	24,5	;volatile
  3262                           
  3263                           ;Libreria.c: 45:     SYNC = 0;
  3264  0674  1218               	bcf	24,4	;volatile
  3265                           
  3266                           ;Libreria.c: 46:     SPEN = 1;
  3267  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0677  1798               	bsf	24,7	;volatile
  3270                           
  3271                           ;Libreria.c: 49:     CREN = 1;
  3272  0678  1618               	bsf	24,4	;volatile
  3273                           
  3274                           ;Libreria.c: 50:     PIE1bits.RCIE = 1;
  3275  0679  1683               	bsf	3,5	;RP0=1, select bank1
  3276  067A  1303               	bcf	3,6	;RP1=0, select bank1
  3277  067B  168C               	bsf	12,5	;volatile
  3278                           
  3279                           ;Libreria.c: 51:     PIR1bits.RCIF = 0;
  3280  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3281  067D  1303               	bcf	3,6	;RP1=0, select bank0
  3282  067E  128C               	bcf	12,5	;volatile
  3283  067F                     l1479:
  3284                           
  3285                           ;Libreria.c: 52:     SPBRG=12;
  3286  067F  300C               	movlw	12
  3287  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0681  1303               	bcf	3,6	;RP1=0, select bank1
  3289  0682  0099               	movwf	25	;volatile
  3290  0683                     l151:
  3291  0683  0008               	return
  3292  0684                     __end_of_Config_USART:
  3293                           
  3294                           	psect	text18
  3295  0684                     __ptext18:	
  3296 ;; *************** function _Config_TMR0 *****************
  3297 ;; Defined at:
  3298 ;;		line 14 in file "Libreria.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  valor_tmr0      1    0        unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      unsigned char 
  3305 ;; Registers used:
  3306 ;;		wreg
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3312 ;;      Params:         0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0
  3315 ;;      Totals:         0       0       0       0       0
  3316 ;;Total ram usage:        0 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 2
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function _Config_TMR0
  3328  0684                     _Config_TMR0:
  3329  0684                     l1465:	
  3330                           ;incstack = 0
  3331                           ; Regs used in _Config_TMR0: [wreg]
  3332                           
  3333                           
  3334                           ;Libreria.c: 17:     char valor_tmr0;;Libreria.c: 18:     PS0 = 1;
  3335  0684  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0685  1303               	bcf	3,6	;RP1=0, select bank1
  3337  0686  1401               	bsf	1,0	;volatile
  3338                           
  3339                           ;Libreria.c: 19:     PS1 = 1;
  3340  0687  1481               	bsf	1,1	;volatile
  3341                           
  3342                           ;Libreria.c: 20:     PS2 = 1;
  3343  0688  1501               	bsf	1,2	;volatile
  3344                           
  3345                           ;Libreria.c: 21:     T0CS = 0;
  3346  0689  1281               	bcf	1,5	;volatile
  3347                           
  3348                           ;Libreria.c: 22:     PSA = 0;
  3349  068A  1181               	bcf	1,3	;volatile
  3350  068B                     l1467:
  3351                           
  3352                           ;Libreria.c: 23:     INTCON = 0b10101000;
  3353  068B  30A8               	movlw	168
  3354  068C  008B               	movwf	11	;volatile
  3355                           
  3356                           ;Libreria.c: 25:     TMR0 = valor_tmr0;
  3357  068D  3064               	movlw	100
  3358  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3359  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0690  0081               	movwf	1	;volatile
  3361                           
  3362                           ;Libreria.c: 26:     return valor_tmr0;
  3363  0691  3064               	movlw	100
  3364  0692                     l145:
  3365  0692  0008               	return
  3366  0693                     __end_of_Config_TMR0:
  3367                           
  3368                           	psect	text19
  3369  0647                     __ptext19:	
  3370 ;; *************** function _Config_Puertos *****************
  3371 ;; Defined at:
  3372 ;;		line 55 in file "Libreria.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 2
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _Config_Puertos
  3402  0647                     _Config_Puertos:
  3403  0647                     l1481:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _Config_Puertos: [wreg+status,2]
  3406                           
  3407                           
  3408                           ;Libreria.c: 57:     ANSEL = 0;
  3409  0647  1683               	bsf	3,5	;RP0=1, select bank3
  3410  0648  1703               	bsf	3,6	;RP1=1, select bank3
  3411  0649  0188               	clrf	8	;volatile
  3412                           
  3413                           ;Libreria.c: 58:     ANSELH = 0;
  3414  064A  0189               	clrf	9	;volatile
  3415                           
  3416                           ;Libreria.c: 59:     TRISA = 0;
  3417  064B  1683               	bsf	3,5	;RP0=1, select bank1
  3418  064C  1303               	bcf	3,6	;RP1=0, select bank1
  3419  064D  0185               	clrf	5	;volatile
  3420  064E                     l1483:
  3421                           
  3422                           ;Libreria.c: 60:     TRISB = 0b11;
  3423  064E  3003               	movlw	3
  3424  064F  0086               	movwf	6	;volatile
  3425  0650                     l1485:
  3426                           
  3427                           ;Libreria.c: 61:     TRISC = 0b10000000;
  3428  0650  3080               	movlw	128
  3429  0651  0087               	movwf	7	;volatile
  3430                           
  3431                           ;Libreria.c: 62:     TRISD = 0;
  3432  0652  0188               	clrf	8	;volatile
  3433                           
  3434                           ;Libreria.c: 63:     TRISE = 0;
  3435  0653  0189               	clrf	9	;volatile
  3436                           
  3437                           ;Libreria.c: 66:     PORTA = 0;
  3438  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0655  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0656  0185               	clrf	5	;volatile
  3441                           
  3442                           ;Libreria.c: 67:     PORTB = 0;
  3443  0657  0186               	clrf	6	;volatile
  3444                           
  3445                           ;Libreria.c: 68:     PORTC = 0;
  3446  0658  0187               	clrf	7	;volatile
  3447                           
  3448                           ;Libreria.c: 69:     PORTD = 0;
  3449  0659  0188               	clrf	8	;volatile
  3450                           
  3451                           ;Libreria.c: 70:     PORTE = 0;
  3452  065A  0189               	clrf	9	;volatile
  3453  065B                     l154:
  3454  065B  0008               	return
  3455  065C                     __end_of_Config_Puertos:
  3456                           
  3457                           	psect	text20
  3458  0693                     __ptext20:	
  3459 ;; *************** function _Config_Oscilador *****************
  3460 ;; Defined at:
  3461 ;;		line 7 in file "Libreria.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3475 ;;      Params:         0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 2
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           
  3490                           ;psect for function _Config_Oscilador
  3491  0693                     _Config_Oscilador:
  3492  0693                     l1461:	
  3493                           ;incstack = 0
  3494                           ; Regs used in _Config_Oscilador: [wreg]
  3495                           
  3496                           
  3497                           ;Libreria.c: 9:     IRCF0 = 1;
  3498  0693  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0694  1303               	bcf	3,6	;RP1=0, select bank1
  3500  0695  160F               	bsf	15,4	;volatile
  3501                           
  3502                           ;Libreria.c: 10:     IRCF1 = 1;
  3503  0696  168F               	bsf	15,5	;volatile
  3504                           
  3505                           ;Libreria.c: 11:     IRCF2 = 1;
  3506  0697  170F               	bsf	15,6	;volatile
  3507  0698                     l1463:
  3508                           
  3509                           ;Libreria.c: 12:     INTCON = 0b11101000;
  3510  0698  30E8               	movlw	232
  3511  0699  008B               	movwf	11	;volatile
  3512  069A                     l142:
  3513  069A  0008               	return
  3514  069B                     __end_of_Config_Oscilador:
  3515                           
  3516                           	psect	text21
  3517  062F                     __ptext21:	
  3518 ;; *************** function _Config_ADC *****************
  3519 ;; Defined at:
  3520 ;;		line 29 in file "Libreria.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0
  3536 ;;      Temps:          1       0       0       0       0
  3537 ;;      Totals:         1       0       0       0       0
  3538 ;;Total ram usage:        1 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 2
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _Config_ADC
  3550  062F                     _Config_ADC:
  3551  062F                     l1471:	
  3552                           ;incstack = 0
  3553                           ; Regs used in _Config_ADC: [wreg]
  3554                           
  3555                           
  3556                           ;Libreria.c: 31:     PIE1bits.ADIE = 1;
  3557  062F  1683               	bsf	3,5	;RP0=1, select bank1
  3558  0630  1303               	bcf	3,6	;RP1=0, select bank1
  3559  0631  170C               	bsf	12,6	;volatile
  3560                           
  3561                           ;Libreria.c: 32:     ADIF = 0;
  3562  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0634  130C               	bcf	12,6	;volatile
  3565                           
  3566                           ;Libreria.c: 33:     ADCON1bits.ADFM = 0;
  3567  0635  1683               	bsf	3,5	;RP0=1, select bank1
  3568  0636  1303               	bcf	3,6	;RP1=0, select bank1
  3569  0637  139F               	bcf	31,7	;volatile
  3570                           
  3571                           ;Libreria.c: 34:     ADCON1bits.VCFG0 = 0;
  3572  0638  121F               	bcf	31,4	;volatile
  3573                           
  3574                           ;Libreria.c: 35:     ADCON1bits.VCFG0 = 0;
  3575  0639  121F               	bcf	31,4	;volatile
  3576                           
  3577                           ;Libreria.c: 36:     ADCON0bits.ADCS0 = 0;
  3578  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3579  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3580  063C  131F               	bcf	31,6	;volatile
  3581                           
  3582                           ;Libreria.c: 37:     ADCON0bits.ADCS1 = 1;
  3583  063D  179F               	bsf	31,7	;volatile
  3584                           
  3585                           ;Libreria.c: 38:     ADCON0bits.ADON = 1;
  3586  063E  141F               	bsf	31,0	;volatile
  3587  063F                     l1473:
  3588                           
  3589                           ;Libreria.c: 39:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  3590  063F  3021               	movlw	33
  3591  0640  00F6               	movwf	??_Config_ADC
  3592  0641                     u1297:
  3593  0641  0BF6               	decfsz	??_Config_ADC,f
  3594  0642  2E41               	goto	u1297
  3595  0643                     l1475:
  3596                           
  3597                           ;Libreria.c: 40:     ADCON0bits.GO = 1;
  3598  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0645  149F               	bsf	31,1	;volatile
  3601  0646                     l148:
  3602  0646  0008               	return
  3603  0647                     __end_of_Config_ADC:
  3604                           
  3605                           	psect	text22
  3606  048B                     __ptext22:	
  3607 ;; *************** function _isr *****************
  3608 ;; Defined at:
  3609 ;;		line 60 in file "Lab_02.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0, pclath, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3623 ;;      Params:         0       0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0
  3625 ;;      Temps:          4       0       0       0       0
  3626 ;;      Totals:         4       0       0       0       0
  3627 ;;Total ram usage:        4 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 1
  3630 ;; This function calls:
  3631 ;;		_Valor_ADC
  3632 ;; This function is called by:
  3633 ;;		Interrupt level 1
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _isr
  3639  048B                     _isr:
  3640  048B                     i1l1525:
  3641                           
  3642                           ;Lab_02.c: 62: }
  3643  048B  1D0B               	btfss	11,2	;volatile
  3644  048C  2C8E               	goto	u114_21
  3645  048D  2C8F               	goto	u114_20
  3646  048E                     u114_21:
  3647  048E  2C94               	goto	i1l1531
  3648  048F                     u114_20:
  3649  048F                     i1l1527:
  3650  048F  110B               	bcf	11,2	;volatile
  3651  0490                     i1l1529:
  3652  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0492  083D               	movf	_Valor_TMR0,w
  3655  0493  0081               	movwf	1	;volatile
  3656  0494                     i1l1531:
  3657  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0496  1F0C               	btfss	12,6	;volatile
  3660  0497  2C99               	goto	u115_21
  3661  0498  2C9A               	goto	u115_20
  3662  0499                     u115_21:
  3663  0499  2CBA               	goto	i1l1541
  3664  049A                     u115_20:
  3665  049A                     i1l1533:
  3666  049A  130C               	bcf	12,6	;volatile
  3667  049B                     i1l1535:
  3668  049B  300C               	movlw	12
  3669  049C  120A  118A  265C  120A  118A  	fcall	_Valor_ADC
  3670  04A1  00F2               	movwf	??_isr
  3671  04A2  0872               	movf	??_isr,w
  3672  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3673  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3674  04A5  00BB               	movwf	_Valor_Canal_12
  3675  04A6                     i1l1537:
  3676  04A6  301A               	movlw	26
  3677  04A7  00F3               	movwf	??_isr+1
  3678  04A8  30F8               	movlw	248
  3679  04A9  00F2               	movwf	??_isr
  3680  04AA                     u130_27:
  3681  04AA  0BF2               	decfsz	??_isr,f
  3682  04AB  2CAA               	goto	u130_27
  3683  04AC  0BF3               	decfsz	??_isr+1,f
  3684  04AD  2CAA               	goto	u130_27
  3685  04AE  0000               	nop
  3686  04AF                     i1l1539:
  3687  04AF  300A               	movlw	10
  3688  04B0  120A  118A  265C  120A  118A  	fcall	_Valor_ADC
  3689  04B5  00F2               	movwf	??_isr
  3690  04B6  0872               	movf	??_isr,w
  3691  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3692  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3693  04B9  00BC               	movwf	_Valor_Canal_10
  3694  04BA                     i1l1541:
  3695  04BA  1E8C               	btfss	12,5	;volatile
  3696  04BB  2CBD               	goto	u116_21
  3697  04BC  2CBE               	goto	u116_20
  3698  04BD                     u116_21:
  3699  04BD  2CD2               	goto	i1l49
  3700  04BE                     u116_20:
  3701  04BE                     i1l1543:
  3702  04BE  302B               	movlw	43
  3703  04BF  061A               	xorwf	26,w	;volatile
  3704  04C0  1D03               	btfss	3,2
  3705  04C1  2CC3               	goto	u117_21
  3706  04C2  2CC4               	goto	u117_20
  3707  04C3                     u117_21:
  3708  04C3  2CC9               	goto	i1l1547
  3709  04C4                     u117_20:
  3710  04C4                     i1l1545:
  3711  04C4  3001               	movlw	1
  3712  04C5  00F2               	movwf	??_isr
  3713  04C6  0872               	movf	??_isr,w
  3714  04C7  07BA               	addwf	_contador,f
  3715  04C8  2CD1               	goto	i1l1551
  3716  04C9                     i1l1547:
  3717  04C9  302D               	movlw	45
  3718  04CA  061A               	xorwf	26,w	;volatile
  3719  04CB  1D03               	btfss	3,2
  3720  04CC  2CCE               	goto	u118_21
  3721  04CD  2CCF               	goto	u118_20
  3722  04CE                     u118_21:
  3723  04CE  2CD1               	goto	i1l1551
  3724  04CF                     u118_20:
  3725  04CF                     i1l1549:
  3726  04CF  3001               	movlw	1
  3727  04D0  02BA               	subwf	_contador,f
  3728  04D1                     i1l1551:
  3729  04D1  128C               	bcf	12,5	;volatile
  3730  04D2                     i1l49:
  3731  04D2  0875               	movf	??_isr+3,w
  3732  04D3  008A               	movwf	10
  3733  04D4  0E74               	swapf	??_isr+2,w
  3734  04D5  0083               	movwf	3
  3735  04D6  0EFE               	swapf	btemp,f
  3736  04D7  0E7E               	swapf	btemp,w
  3737  04D8  0009               	retfie
  3738  04D9                     __end_of_isr:
  3739                           
  3740                           	psect	intentry
  3741  0004                     __pintentry:	
  3742                           ;incstack = 0
  3743                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3744                           
  3745  0004                     interrupt_function:
  3746  007E                     saved_w	set	btemp
  3747  0004  00FE               	movwf	btemp
  3748  0005  0E03               	swapf	3,w
  3749  0006  00F4               	movwf	??_isr+2
  3750  0007  080A               	movf	10,w
  3751  0008  00F5               	movwf	??_isr+3
  3752  0009  120A  118A  2C8B   	ljmp	_isr
  3753                           
  3754                           	psect	text23
  3755  065C                     __ptext23:	
  3756 ;; *************** function _Valor_ADC *****************
  3757 ;; Defined at:
  3758 ;;		line 74 in file "Libreria.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  canal           1    wreg     unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  canal           1    1[COMMON] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      unsigned char 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         1       0       0       0       0
  3774 ;;      Temps:          1       0       0       0       0
  3775 ;;      Totals:         2       0       0       0       0
  3776 ;;Total ram usage:        2 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_isr
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _Valor_ADC
  3787  065C                     _Valor_ADC:
  3788                           
  3789                           ;incstack = 0
  3790                           ; Regs used in _Valor_ADC: [wreg+status,2+status,0]
  3791                           ;Valor_ADC@canal stored from wreg
  3792  065C  00F1               	movwf	Valor_ADC@canal
  3793  065D                     i1l1451:
  3794                           
  3795                           ;Libreria.c: 75:     ADCON0bits.CHS = canal;
  3796  065D  0871               	movf	Valor_ADC@canal,w
  3797  065E  00F0               	movwf	??_Valor_ADC
  3798  065F  0DF0               	rlf	??_Valor_ADC,f
  3799  0660  0DF0               	rlf	??_Valor_ADC,f
  3800  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3802  0663  081F               	movf	31,w	;volatile
  3803  0664  0670               	xorwf	??_Valor_ADC,w
  3804  0665  39C3               	andlw	-61
  3805  0666  0670               	xorwf	??_Valor_ADC,w
  3806  0667  009F               	movwf	31	;volatile
  3807  0668                     i1l1453:
  3808                           
  3809                           ;Libreria.c: 76:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  3810  0668  3021               	movlw	33
  3811  0669  00F0               	movwf	??_Valor_ADC
  3812  066A                     u131_27:
  3813  066A  0BF0               	decfsz	??_Valor_ADC,f
  3814  066B  2E6A               	goto	u131_27
  3815  066C                     i1l1455:
  3816                           
  3817                           ;Libreria.c: 77:     ADCON0bits.GO = 1;
  3818  066C  1283               	bcf	3,5	;RP0=0, select bank0
  3819  066D  1303               	bcf	3,6	;RP1=0, select bank0
  3820  066E  149F               	bsf	31,1	;volatile
  3821  066F                     i1l1457:
  3822                           
  3823                           ;Libreria.c: 78:     return ADRESH;
  3824  066F  081E               	movf	30,w	;volatile
  3825  0670                     i1l157:
  3826  0670  0008               	return
  3827  0671                     __end_of_Valor_ADC:
  3828  007E                     btemp	set	126	;btemp
  3829  007E                     wtemp0	set	126
  3830                           
  3831                           	psect	config
  3832                           
  3833                           ;Config register CONFIG1 @ 0x2007
  3834                           ;	Oscillator Selection bits
  3835                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3836                           ;	Watchdog Timer Enable bit
  3837                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3838                           ;	Power-up Timer Enable bit
  3839                           ;	PWRTE = OFF, PWRT disabled
  3840                           ;	RE3/MCLR pin function select bit
  3841                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3842                           ;	Code Protection bit
  3843                           ;	CP = OFF, Program memory code protection is disabled
  3844                           ;	Data Code Protection bit
  3845                           ;	CPD = OFF, Data memory code protection is disabled
  3846                           ;	Brown Out Reset Selection bits
  3847                           ;	BOREN = OFF, BOR disabled
  3848                           ;	Internal External Switchover bit
  3849                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3850                           ;	Fail-Safe Clock Monitor Enabled bit
  3851                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3852                           ;	Low Voltage Programming Enable bit
  3853                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3854                           ;	In-Circuit Debugger Mode bit
  3855                           ;	DEBUG = 0x1, unprogrammed default
  3856  2007                     	org	8199
  3857  2007  20D4               	dw	8404
  3858                           
  3859                           ;Config register CONFIG2 @ 0x2008
  3860                           ;	Brown-out Reset Selection bit
  3861                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3862                           ;	Flash Program Memory Self Write Enable bits
  3863                           ;	WRT = OFF, Write protection off
  3864  2008                     	org	8200
  3865  2008  3FFF               	dw	16383

Data Sizes:
    Strings     47
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     26      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_LCD@a	PTR unsigned char  size(1) Largest target is 3
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), 

    Texto_USART@texto	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _USART->_Texto_USART
    _Transmisor_USART->___wmul
    _Transmisor_USART->_tabla_USART
    _LCD_Init_8bits->_CMD_LCD
    _Print_Num->___wmul
    _Print_Cont->___wmul
    _Write_LCD->_Char_LCD
    _Char_LCD->_PORT_LCD
    _Lcd_Set_Cursor->_CMD_LCD
    _CMD_LCD->_PORT_LCD

Critical Paths under _isr in COMMON

    _isr->_Valor_ADC

Critical Paths under _main in BANK0

    _main->_LCD
    _USART->_Transmisor_USART
    _Transmisor_USART->___awdiv
    _LCD_Init_8bits->_CMD_LCD
    _LCD->_Print_Cont
    _LCD->_Print_Num
    _Print_Num->___awdiv
    _Print_Cont->___awdiv
    _tabla_num->_Write_LCD
    _Write_LCD->_Char_LCD
    _Lcd_Set_Cursor->_CMD_LCD

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13834
                                             23 BANK0      3     3      0
                         _Config_ADC
                   _Config_Oscilador
                     _Config_Puertos
                        _Config_TMR0
                       _Config_USART
                                _LCD
                     _LCD_Init_8bits
                              _USART
 ---------------------------------------------------------------------------------
 (1) _USART                                                2     1      1    3198
                                             19 BANK0      2     1      1
                        _Texto_USART
                   _Transmisor_USART
 ---------------------------------------------------------------------------------
 (2) _Transmisor_USART                                    11    11      0    2889
                                              8 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                        _tabla_USART
 ---------------------------------------------------------------------------------
 (3) _tabla_USART                                          2     0      2     448
                                              6 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Texto_USART                                          4     4      0     189
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_8bits                                       2     2      0     374
                                              1 BANK0      2     2      0
                            _CMD_LCD
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  4     2      2   10217
                                             19 BANK0      4     2      2
                     _Lcd_Set_Cursor
                         _Print_Cont
                          _Print_Num
                          _Write_LCD
 ---------------------------------------------------------------------------------
 (2) _Print_Num                                           11    11      0    4617
                                              8 BANK0     11    11      0
                          _Write_LCD
                            ___awdiv
                             ___wmul
                          _tabla_num
 ---------------------------------------------------------------------------------
 (2) _Print_Cont                                          11    11      0    3844
                                              8 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                          _tabla_num
 ---------------------------------------------------------------------------------
 (3) _tabla_num                                            2     0      2    1426
                                              4 BANK0      2     0      2
                          _Write_LCD
 ---------------------------------------------------------------------------------
 (2) _Write_LCD                                            3     3      0     750
                                              1 BANK0      3     3      0
                           _Char_LCD
 ---------------------------------------------------------------------------------
 (3) _Char_LCD                                             2     2      0     198
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1004
                                              6 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1212
                                              6 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     788
                                              1 BANK0      4     3      1
                            _CMD_LCD
 ---------------------------------------------------------------------------------
 (2) _CMD_LCD                                              2     2      0     198
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (2) _PORT_LCD                                             1     1      0     176
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0                                          1     1      0      45
 ---------------------------------------------------------------------------------
 (1) _Config_Puertos                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Oscilador                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_ADC                                           1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0      22
                                              2 COMMON     4     4      0
                          _Valor_ADC
 ---------------------------------------------------------------------------------
 (8) _Valor_ADC                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_ADC
   _Config_Oscilador
   _Config_Puertos
   _Config_TMR0
   _Config_USART
   _LCD
     _Lcd_Set_Cursor
       _CMD_LCD
         _PORT_LCD
     _Print_Cont
       ___awdiv
       ___wmul
       _tabla_num
         _Write_LCD
           _Char_LCD
             _PORT_LCD
     _Print_Num
       _Write_LCD
       ___awdiv
       ___wmul
       _tabla_num
     _Write_LCD
   _LCD_Init_8bits
     _CMD_LCD
     _PORT_LCD
   _USART
     _Texto_USART
     _Transmisor_USART
       ___awdiv
       ___wmul
       _tabla_USART

 _isr (ROOT)
   _Valor_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 27 20:21:30 2021

                        pc 0002               ___awdiv@sign 0025                         fsr 0004  
      ___wmul@multiplicand 0022                        l212 043B                        l221 05FE  
                      l142 069A                        l151 0683                        l215 062E  
                      l160 00BA                        l145 0692                        l233 05D8  
                      l209 048A                        l154 065B                        l227 0616  
                      l148 0646                        l500 0397                        l236 01CC  
                      l261 0147                        l182 02BC                        l255 0147  
                      l239 0245                        l191 058B                        l176 02BC  
                      l185 0560                        l194 032E                        l347 059A  
                      l349 05B2                        _LCD 02BD                        _PS0 0408  
                      _PS1 0409                        u600 03F2                        _PS2 040A  
                      u601 03EE                        u700 0424                        u620 03FC  
                      u701 0420                        u621 03F8                        u614 03F5  
                      u720 042E                        u640 0406                        u800 0270  
                      u721 042A                        u641 0402                        u801 026F  
                      u714 0427                        u634 03FF                        u810 027C  
                      u811 027B                        u740 0438                        u660 0410  
                      u900 00ED                        u820 0288                        u741 0434  
                      u661 040C                        u901 00EC                        u821 0287  
                      u734 0431                        u654 0409                        u910 00FB  
                      u830 0294                        u911 00FA                        u831 0293  
                      _PSA 040B                        u680 041A                        u760 05D8  
                      u920 0109                        u840 02A0                        u681 0416  
                      u761 05D7                        u921 0108                        u841 029F  
                      u754 043B                        u674 0413                        u930 0117  
                      u850 02AC                        u770 024C                        u931 0116  
                      u851 02AB                        u771 024B                        u940 0125  
                      u860 02B7                        u780 0258                        u941 0124  
                      u861 02B6                        u781 0257                        u694 041D  
                      u950 0133                        u870 00C3                        u790 0264  
                      u951 0132                        u871 00C2                        u791 0263  
                      u960 0140                        u880 00D1                        u961 013F  
                      u881 00D0                        u970 0594                        u890 00DF  
                      u971 0593                        u891 00DE                        u985 059B  
                      u995 05A2                        _isr 048B                        fsr0 0004  
          __end_of_CMD_LCD 062F                       ?_LCD 0033                       l1213 03EB  
                     l1221 060C                       l1301 00FB                       l1223 0613  
                     l1215 0602                       l1231 05CB                       l1311 011E  
                     l1303 0102                       l1217 0603                       l1225 05B6  
                     l1321 0140                       l1313 0125                       l1305 0109  
                     l1241 025D                       l1233 0246                       l1401 00B0  
                     l1331 05A8                       l1323 058C                       l1219 0609  
                     l1227 05B8                       l1315 012C                       l1307 0110  
                     l1411 057C                       l1403 0564                       l1251 027C  
                     l1243 0264                       l1235 024C                       l1421 05F3  
                     l1413 05DC                       l1341 0336                       l1333 05AE  
                     l1325 058E                       l1229 05C5                       l1317 0133  
                     l1309 0117                       l1405 0566                       l1261 0299  
                     l1253 0281                       l1245 0269                       l1237 0251  
                     l1501 0548                       l1423 05F8                       l1415 05E1  
                     l1351 034A                       l1343 033B                       l1327 0594  
                     l1319 013A                       l1431 017D                       l1511 02D0  
                     l1407 056F                       l1271 02B7                       l1263 02A0  
                     l1255 0288                       l1247 0270                       l1239 0258  
                     l1503 054E                       l1281 062B                       l1273 061A  
                     l1417 05E6                       l1361 0360                       l1353 034C  
                     l1345 033D                       l1337 032F                       l1329 05A1  
                     l1441 01C1                       l1433 0190                       l1425 014B  
                     l1521 031A                       l1513 02E2                       l1409 0573  
                     l1265 02A5                       l1257 028D                       l1249 0275  
                     l1505 0554                       l1275 061B                       l1419 05ED  
                     l1371 0383                       l1363 0364                       l1355 0352  
                     l1347 0341                       l1339 0332                       l1291 00D8  
                     l1283 00BB                       l1443 01D0                       l1435 01A7  
                     l1427 0153                       l1523 0326                       l1515 02EE  
                     l1507 02C0                       l1267 02AC                       l1259 0294  
                     l1461 0693                       l1277 0621                       l1365 0375  
                     l1357 0355                       l1373 0389                       l1349 0346  
                     l1293 00DF                       l1285 00C3                       l1445 0226  
                     l1437 01B0                       l1429 0166                       l1517 0300  
                     l1509 02CA                       l1269 02B1                       l1381 001F  
                     l1471 062F                       l1463 0698                       l1279 0624  
                     l1375 038E                       l1367 037B                       l1359 035C  
                     l1295 00E6                       l1287 00CA                       l1447 022F  
                     l1439 01B6                       l1519 0308                       l1391 007B  
                     l1383 0027                       l1473 063F                       l1481 0647  
                     l1465 0684                       l1377 0393                       l1369 037C  
                     l1297 00ED                       l1289 00D1                       l1449 023A  
                     l1393 0084                       l1385 003A                       l1561 03B1  
                     l1553 0398                       l1475 0643                       l1483 064E  
                     l1467 068B                       l1299 00F4                       l1491 044C  
                     l1395 008E                       l1387 0051                       l1563 03B6  
                     l1555 039D                       l1485 0650                       l1477 0671  
                     l1493 045C                       l1397 0092                       l1389 0064  
                     l1565 03BB                       l1557 03A7                       l1479 067F  
                     l1495 0462                       l1487 043C                       l1399 00A5  
                     l1567 03C7                       l1559 03AC                       l1489 0442  
                     l1497 0538                       l1569 03D7                       l1499 0544  
                     _ADIF 0066                       ?_isr 0070                       STR_1 0506  
                     STR_2 0516                       STR_3 0510                       STR_4 051C  
                     STR_5 051F                       STR_6 0522                       STR_7 0525  
                     STR_8 051D                       STR_9 051A                       u1000 05AE  
                     _T0IF 005A                       _CREN 00C4                       u1001 05AD  
                     _T0CS 040D                       u1010 0336                       u1011 0335  
                     u1100 038E                       u1020 0341                       u1101 038D  
                     u1021 0340                       u1030 0352                       u1110 058B  
                     u1031 0351                       u1111 058A                       u1120 05E1  
                     u1121 05E0                       u1130 05F3                       u1050 0364  
                     u1131 05F2                       u1051 0363                       u1045 0356  
                     u1070 0375                       u1071 0374                       u1207 008A  
                     u1065 0365                       u1217 00A1                       u1090 0389  
                     u1091 0388                       u1075 0371                       u1227 00B6  
                     u1085 037D                       u1237 0577                       u1247 0448  
                     u1257 0458                       u1267 0468                       u1277 060E  
                     u1197 03DF                       u1287 0626                       u1297 0641  
                     _RCIF 0065                       i1l49 04D2                       _TMR0 0001  
                     _SPEN 00C7                       _TXEN 04C5                       _SYNC 04C4  
   __end_of_LCD_Init_8bits 048B                       _main 0398                       btemp 007E  
                     start 000C     Transmisor_USART@decena 002D        __end_of_Config_TMR0 0693  
                    ??_LCD 0035     Transmisor_USART@unidad 002A                      ??_isr 0072  
                    ?_main 0070            __end_of___awdiv 0398                      STR_10 0523  
                    STR_11 0529                      STR_12 052B                      STR_13 052D  
                    STR_14 052F                      STR_15 0531                      STR_16 0533  
                    STR_17 0527                      _ANSEL 0188            ___awdiv@divisor 0020  
                    _IRCF0 047C                      _IRCF1 047D                      _IRCF2 047E  
               _Config_ADC 062F                      i1l157 0670            ___awdiv@counter 0024  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _USART 0535                      _TXREG 0019  
         __end_of_PORT_LCD 043C               ?_tabla_USART 0076                      pclath 000A  
          ?_LCD_Init_8bits 0070           __end_of_Char_LCD 0617                      status 0003  
                    wtemp0 007E              USART@canal_10 0034              USART@canal_12 0033  
  Transmisor_USART@centena 002F       __end_of_Config_USART 0684            __initialization 000F  
             __end_of_main 03EA                     ??_main 0037                  ??_CMD_LCD 0077  
                   ?_USART 0033                     _ADRESH 001E           ___awdiv@dividend 0022  
                   _ANSELH 0189                     i1l1451 065D                     i1l1531 0494  
                   i1l1453 0668                     i1l1533 049A                     i1l1541 04BA  
                   i1l1525 048B                     i1l1455 066C                     i1l1551 04D1  
                   i1l1543 04BE                     i1l1535 049B                     i1l1527 048F  
                   i1l1457 066F                     i1l1545 04C4                     i1l1537 04A6  
                   i1l1529 0490                     i1l1547 04C9                     i1l1539 04AF  
                   i1l1549 04CF                     u114_20 048F                     u114_21 048E  
                   u130_27 04AA                     u115_20 049A                     u115_21 0499  
                   u131_27 066A                     u116_20 04BE                     u116_21 04BD  
                   u117_20 04C4                     u117_21 04C3                     u118_20 04CF  
                   u118_21 04CE                     _INTCON 000B                _Config_TMR0 0684  
           _Valor_Canal_10 003C             _Valor_Canal_12 003B                 _Valor_TMR0 003D  
                   ___wmul 058C                  ??___awdiv 0076   __end_of_Config_Oscilador 069B  
         ___awdiv@quotient 0026                 _Print_Cont 01CD         __size_of_Valor_ADC 0015  
              ?_Config_ADC 0070         __size_of_Print_Num 0085                     saved_w 007E  
          Lcd_Set_Cursor@a 0023            Lcd_Set_Cursor@b 0021  __size_of_Transmisor_USART 009F  
  __end_of__initialization 0018         __size_of_Write_LCD 0026              ??_Texto_USART 0076  
            __end_of_USART 0561             __pcstackCOMMON 0070               __pidataBANK0 069B  
                ?_PORT_LCD 0070             _Lcd_Set_Cursor 05D9                  ?_Char_LCD 0070  
                  ??_USART 0078    __size_of_Config_Puertos 0015                 __pbssBANK0 003A  
                  LCD@cont 0034       __size_of_tabla_USART 0077      __size_of_Config_USART 0013  
        __end_of_Valor_ADC 0671                 Write_LCD@a 0023                 Write_LCD@i 0022  
      __size_of_Config_ADC 0018          __end_of_Print_Num 01CD         __size_of_tabla_num 008D  
               __pmaintext 0398                    ?___wmul 0020        __end_of_Texto_USART 058C  
               __pintentry 0004                 ??_PORT_LCD 0076                ?_Print_Cont 0070  
   __end_of_Lcd_Set_Cursor 05FF                    _CMD_LCD 0617          __end_of_Write_LCD 05D9  
               ??_Char_LCD 0077                  PORT_LCD@v 0076               _Config_USART 0671  
         ??_LCD_Init_8bits 0021                 __stringtab 0500                    ___awdiv 032F  
          __size_of___wmul 0027            ?_Lcd_Set_Cursor 0021                    __ptext1 0535  
                  __ptext2 001C                    __ptext3 0246                    __ptext4 0561  
                  __ptext5 043C                    __ptext6 02BD                    __ptext7 0148  
                  __ptext8 01CD                    __ptext9 00BB                  Char_LCD@a 0020  
             __size_of_LCD 0072            tabla_num@numero 0024           Texto_USART@texto 0021  
             __size_of_isr 004E          __end_of_tabla_num 0148       end_of_initialization 0018  
         _Transmisor_USART 001C             Print_Cont@temp 002C               ?_Config_TMR0 0070  
      __size_of_Print_Cont 0079                _Texto_USART 0561          ?_Config_Oscilador 0070  
                _PORTAbits 0005         ??_Config_Oscilador 0076                  _PORTEbits 0009  
             ??_Config_ADC 0076             Print_Num@valor 002C             _Config_Puertos 0647  
       __end_of_Config_ADC 0647      Transmisor_USART@valor 002C             __end_of___wmul 05B3  
        __size_of_PORT_LCD 0052     __end_of_Config_Puertos 065C        start_initialization 000F  
              __end_of_LCD 032F          __size_of_Char_LCD 0018                __end_of_isr 04D9  
        Print_Cont@centena 0030                  _Valor_ADC 065C                   ??___wmul 0076  
                 CMD_LCD@v 0020                  _Print_Num 0148                __pdataBANK0 003D  
             ??_Print_Cont 0028                   ?_CMD_LCD 0070            ?_Config_Puertos 0070  
                ___latbits 0002              __pcstackBANK0 0020                  _Write_LCD 05B3  
            ??_tabla_USART 0078         __end_of_Print_Cont 0246       __size_of_Config_TMR0 000F  
               ?_Valor_ADC 0070           ??_Lcd_Set_Cursor 0022                   ?___awdiv 0020  
               ?_Print_Num 0070   __end_of_Transmisor_USART 00BB                  __pstrings 0500  
           __size_of_USART 002C                 ?_Write_LCD 0070                  _tabla_num 00BB  
        interrupt_function 0004             ___wmul@product 0076        __end_of_tabla_USART 02BD  
             ?_Texto_USART 0070                   _PIE1bits 008C                   _PIR1bits 000C  
                 _PORT_LCD 03EA              Print_Num@temp 0031                 _ADCON0bits 001F  
              __stringbase 0505                 _ADCON1bits 009F          ___wmul@multiplier 0020  
                 _Char_LCD 05FF           __size_of_CMD_LCD 0018       Transmisor_USART@temp 0031  
__size_of_Config_Oscilador 0008                 ?_tabla_num 0024           Print_Cont@decena 002E  
  __size_of_LCD_Init_8bits 004F           Print_Cont@unidad 002A                ??_Valor_ADC 0070  
              ??_Print_Num 0028             Valor_ADC@canal 0071           __size_of___awdiv 0069  
       __end_of__stringtab 0506                ??_Write_LCD 0021                   __ptext10 05B3  
                 __ptext11 05FF                   __ptext20 0693                   __ptext12 058C  
                 __ptext21 062F                   __ptext13 032F                   __ptext22 048B  
                 __ptext14 05D9                   __ptext23 065C                   __ptext15 0617  
                 __ptext16 03EA                   __ptext17 0671                   __ptext18 0684  
                 __ptext19 0647                _tabla_USART 0246                   _contador 003A  
            __size_of_main 0052          tabla_USART@numero 0076           ??_Config_Puertos 0076  
          Print_Cont@valor 0032              ?_Config_USART 0070                   intlevel1 0000  
              ??_tabla_num 0078                  stringcode 0500       __size_of_Texto_USART 002B  
       Lcd_Set_Cursor@temp 0024          ?_Transmisor_USART 0070           Print_Num@centena 002F  
       ??_Transmisor_USART 0028             ??_Config_USART 0076               Texto_USART@i 0020  
                 stringdir 0500                   stringtab 0500            Print_Num@decena 002D  
         _Config_Oscilador 0693                LCD@canal_10 0036                LCD@canal_12 0033  
            ??_Config_TMR0 0076            Print_Num@unidad 002A             _LCD_Init_8bits 043C  
