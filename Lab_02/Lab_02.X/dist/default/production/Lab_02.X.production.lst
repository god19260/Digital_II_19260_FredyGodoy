

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 27 19:56:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	idataBANK0
   386  05BE                     __pidataBANK0:
   387                           
   388                           ;initializer for _Valor_TMR0
   389  05BE  3464               	retlw	100
   390  0009                     _PORTEbits	set	9
   391  0005                     _PORTAbits	set	5
   392  0019                     _TXREG	set	25
   393  001E                     _ADRESH	set	30
   394  0009                     _PORTE	set	9
   395  0008                     _PORTD	set	8
   396  0007                     _PORTC	set	7
   397  0006                     _PORTB	set	6
   398  0005                     _PORTA	set	5
   399  000C                     _PIR1bits	set	12
   400  001F                     _ADCON0bits	set	31
   401  000B                     _INTCON	set	11
   402  0001                     _TMR0	set	1
   403  00C4                     _CREN	set	196
   404  00C7                     _SPEN	set	199
   405  0065                     _RCIF	set	101
   406  0066                     _ADIF	set	102
   407  005A                     _T0IF	set	90
   408  0089                     _TRISE	set	137
   409  0088                     _TRISD	set	136
   410  0087                     _TRISC	set	135
   411  0086                     _TRISB	set	134
   412  0085                     _TRISA	set	133
   413  0099                     _SPBRG	set	153
   414  009F                     _ADCON1bits	set	159
   415  008C                     _PIE1bits	set	140
   416  04C4                     _SYNC	set	1220
   417  04C5                     _TXEN	set	1221
   418  040B                     _PSA	set	1035
   419  040D                     _T0CS	set	1037
   420  040A                     _PS2	set	1034
   421  0409                     _PS1	set	1033
   422  0408                     _PS0	set	1032
   423  047E                     _IRCF2	set	1150
   424  047D                     _IRCF1	set	1149
   425  047C                     _IRCF0	set	1148
   426  0189                     _ANSELH	set	393
   427  0188                     _ANSEL	set	392
   428                           
   429                           	psect	strings
   430  0420                     __pstrings:
   431  0420                     stringtab:
   432  0420                     __stringtab:
   433  0420                     stringcode:	
   434                           ;	String table - string pointers are 1 byte each
   435                           
   436  0420                     stringdir:
   437  0420  3004               	movlw	high stringdir
   438  0421  008A               	movwf	10
   439  0422  0804               	movf	4,w
   440  0423  0A84               	incf	4,f
   441  0424  0782               	addwf	2,f
   442  0425                     __stringbase:
   443  0425  3400               	retlw	0
   444  0426                     __end_of__stringtab:
   445  0426                     STR_1:
   446  0426  3450               	retlw	80	;'P'
   447  0427  344F               	retlw	79	;'O'
   448  0428  3454               	retlw	84	;'T'
   449  0429  3420               	retlw	32	;' '
   450  042A  3431               	retlw	49	;'1'
   451  042B  3420               	retlw	32	;' '
   452  042C  3420               	retlw	32	;' '
   453  042D  3420               	retlw	32	;' '
   454  042E  3420               	retlw	32	;' '
   455  042F  3400               	retlw	0
   456  0430                     STR_3:
   457  0430  3420               	retlw	32	;' '
   458  0431  342D               	retlw	45	;'-'
   459  0432  342D               	retlw	45	;'-'
   460  0433  342D               	retlw	45	;'-'
   461  0434  3420               	retlw	32	;' '
   462  0435  3400               	retlw	0
   463  0436                     STR_2:
   464  0436  3450               	retlw	80	;'P'
   465  0437  344F               	retlw	79	;'O'
   466  0438  3454               	retlw	84	;'T'
   467  0439  3420               	retlw	32	;' '
   468  043A  3432               	retlw	50	;'2'
   469  043B  3400               	retlw	0
   470  043C                     STR_4:
   471  043C  3450               	retlw	80	;'P'
   472  043D  344F               	retlw	79	;'O'
   473  043E  3454               	retlw	84	;'T'
   474  043F  3431               	retlw	49	;'1'
   475  0440  3400               	retlw	0
   476  0441                     STR_5:
   477  0441  3450               	retlw	80	;'P'
   478  0442  344F               	retlw	79	;'O'
   479  0443  3454               	retlw	84	;'T'
   480  0444  3432               	retlw	50	;'2'
   481  0445  3400               	retlw	0
   482  0446                     STR_6:
   483  0446  342E               	retlw	46	;'.'
   484  0447  3400               	retlw	0
   485  0448                     STR_16:
   486  0448  3430               	retlw	48	;'0'
   487  0449  3400               	retlw	0
   488  044A                     STR_9:
   489  044A  3433               	retlw	51	;'3'
   490  044B  3400               	retlw	0
   491  044C                     STR_10:
   492  044C  3434               	retlw	52	;'4'
   493  044D  3400               	retlw	0
   494  044E                     STR_11:
   495  044E  3435               	retlw	53	;'5'
   496  044F  3400               	retlw	0
   497  0450                     STR_12:
   498  0450  3436               	retlw	54	;'6'
   499  0451  3400               	retlw	0
   500  0452                     STR_13:
   501  0452  3437               	retlw	55	;'7'
   502  0453  3400               	retlw	0
   503  0454                     STR_14:
   504  0454  3438               	retlw	56	;'8'
   505  0455  3400               	retlw	0
   506  0456                     STR_15:
   507  0456  3439               	retlw	57	;'9'
   508  0457  3400               	retlw	0
   509  043F                     
   510                           	psect	cinit
   511  000F                     start_initialization:	
   512                           ; #config settings
   513                           
   514  000F                     __initialization:
   515                           
   516                           ; Initialize objects allocated to BANK0
   517  000F  120A  118A  25BE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   518  0014  00BB               	movwf	__pdataBANK0& (0+127)
   519                           
   520                           ; Clear objects allocated to BANK0
   521  0015  01B9               	clrf	__pbssBANK0& (0+127)
   522  0016  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   523  0017                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526  0017                     __end_of__initialization:
   527  0017  0183               	clrf	3
   528  0018  120A  118A  2B4D   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	bssBANK0
   531  0039                     __pbssBANK0:
   532  0039                     _Valor_Canal_12:
   533  0039                     	ds	1
   534  003A                     _Valor_Canal_10:
   535  003A                     	ds	1
   536                           
   537                           	psect	dataBANK0
   538  003B                     __pdataBANK0:
   539  003B                     _Valor_TMR0:
   540  003B                     	ds	1
   541                           
   542                           	psect	cstackCOMMON
   543  0070                     __pcstackCOMMON:
   544  0070                     ?_Valor_ADC:
   545  0070                     ??_Valor_ADC:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Config_Oscilador:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_Config_TMR0:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_Config_ADC:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_Config_USART:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_Config_Puertos:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_LCD_Init_8bits:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_Texto_USART:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_Write_LCD:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_Print_Num:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_PORT_LCD:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_CMD_LCD:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_isr:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_Transmisor_USART:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_Char_LCD:	
   591                           ; 1 bytes @ 0x0
   592                           
   593                           
   594                           ; 1 bytes @ 0x0
   595  0070                     	ds	1
   596  0071                     Valor_ADC@canal:
   597                           
   598                           ; 1 bytes @ 0x1
   599  0071                     	ds	1
   600  0072                     ??_isr:
   601                           
   602                           ; 1 bytes @ 0x2
   603  0072                     	ds	4
   604  0076                     ??_Config_Oscilador:
   605  0076                     ??_Config_TMR0:	
   606                           ; 1 bytes @ 0x6
   607                           
   608  0076                     ??_Config_ADC:	
   609                           ; 1 bytes @ 0x6
   610                           
   611  0076                     ??_Config_USART:	
   612                           ; 1 bytes @ 0x6
   613                           
   614  0076                     ??_Config_Puertos:	
   615                           ; 1 bytes @ 0x6
   616                           
   617  0076                     ?_tabla_USART:	
   618                           ; 1 bytes @ 0x6
   619                           
   620  0076                     ??_Texto_USART:	
   621                           ; 1 bytes @ 0x6
   622                           
   623  0076                     ??_PORT_LCD:	
   624                           ; 1 bytes @ 0x6
   625                           
   626  0076                     ??___wmul:	
   627                           ; 1 bytes @ 0x6
   628                           
   629  0076                     ??___awdiv:	
   630                           ; 1 bytes @ 0x6
   631                           
   632  0076                     PORT_LCD@v:	
   633                           ; 1 bytes @ 0x6
   634                           
   635  0076                     tabla_USART@numero:	
   636                           ; 1 bytes @ 0x6
   637                           
   638  0076                     ___wmul@product:	
   639                           ; 2 bytes @ 0x6
   640                           
   641                           
   642                           ; 2 bytes @ 0x6
   643  0076                     	ds	1
   644  0077                     ??_CMD_LCD:
   645  0077                     ??_Char_LCD:	
   646                           ; 1 bytes @ 0x7
   647                           
   648                           
   649                           ; 1 bytes @ 0x7
   650  0077                     	ds	1
   651  0078                     ??_USART:
   652  0078                     ??_tabla_USART:	
   653                           ; 1 bytes @ 0x8
   654                           
   655  0078                     ??_tabla_num:	
   656                           ; 1 bytes @ 0x8
   657                           
   658                           
   659                           	psect	cstackBANK0
   660  0020                     __pcstackBANK0:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  0020                     ?___wmul:
   664  0020                     ?___awdiv:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0020                     Texto_USART@i:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0020                     CMD_LCD@v:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0020                     Char_LCD@a:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0020                     ___wmul@multiplier:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0020                     ___awdiv@divisor:	
   680                           ; 2 bytes @ 0x0
   681                           
   682                           
   683                           ; 2 bytes @ 0x0
   684  0020                     	ds	1
   685  0021                     ??_LCD_Init_8bits:
   686  0021                     ?_Lcd_Set_Cursor:	
   687                           ; 1 bytes @ 0x1
   688                           
   689  0021                     ??_Write_LCD:	
   690                           ; 1 bytes @ 0x1
   691                           
   692  0021                     Texto_USART@texto:	
   693                           ; 1 bytes @ 0x1
   694                           
   695  0021                     Lcd_Set_Cursor@b:	
   696                           ; 1 bytes @ 0x1
   697                           
   698                           
   699                           ; 1 bytes @ 0x1
   700  0021                     	ds	1
   701  0022                     ??_Lcd_Set_Cursor:
   702  0022                     Write_LCD@i:	
   703                           ; 1 bytes @ 0x2
   704                           
   705  0022                     ___wmul@multiplicand:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0022                     ___awdiv@dividend:	
   709                           ; 2 bytes @ 0x2
   710                           
   711                           
   712                           ; 2 bytes @ 0x2
   713  0022                     	ds	1
   714  0023                     Lcd_Set_Cursor@a:
   715  0023                     Write_LCD@a:	
   716                           ; 1 bytes @ 0x3
   717                           
   718                           
   719                           ; 1 bytes @ 0x3
   720  0023                     	ds	1
   721  0024                     ?_tabla_num:
   722  0024                     Lcd_Set_Cursor@temp:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0024                     ___awdiv@counter:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0024                     tabla_num@numero:	
   729                           ; 1 bytes @ 0x4
   730                           
   731                           
   732                           ; 2 bytes @ 0x4
   733  0024                     	ds	1
   734  0025                     ___awdiv@sign:
   735                           
   736                           ; 1 bytes @ 0x5
   737  0025                     	ds	1
   738  0026                     ___awdiv@quotient:
   739                           
   740                           ; 2 bytes @ 0x6
   741  0026                     	ds	2
   742  0028                     ??_Print_Num:
   743  0028                     ??_Transmisor_USART:	
   744                           ; 1 bytes @ 0x8
   745                           
   746                           
   747                           ; 1 bytes @ 0x8
   748  0028                     	ds	2
   749  002A                     Transmisor_USART@unidad:
   750  002A                     Print_Num@unidad:	
   751                           ; 2 bytes @ 0xA
   752                           
   753                           
   754                           ; 2 bytes @ 0xA
   755  002A                     	ds	2
   756  002C                     Transmisor_USART@valor:
   757  002C                     Print_Num@valor:	
   758                           ; 1 bytes @ 0xC
   759                           
   760                           
   761                           ; 1 bytes @ 0xC
   762  002C                     	ds	1
   763  002D                     Transmisor_USART@decena:
   764  002D                     Print_Num@decena:	
   765                           ; 2 bytes @ 0xD
   766                           
   767                           
   768                           ; 2 bytes @ 0xD
   769  002D                     	ds	2
   770  002F                     Transmisor_USART@centena:
   771  002F                     Print_Num@centena:	
   772                           ; 2 bytes @ 0xF
   773                           
   774                           
   775                           ; 2 bytes @ 0xF
   776  002F                     	ds	2
   777  0031                     Transmisor_USART@temp:
   778  0031                     Print_Num@temp:	
   779                           ; 2 bytes @ 0x11
   780                           
   781                           
   782                           ; 2 bytes @ 0x11
   783  0031                     	ds	2
   784  0033                     ?_USART:
   785  0033                     ?_LCD:	
   786                           ; 1 bytes @ 0x13
   787                           
   788  0033                     USART@canal_12:	
   789                           ; 1 bytes @ 0x13
   790                           
   791  0033                     LCD@canal_12:	
   792                           ; 1 bytes @ 0x13
   793                           
   794                           
   795                           ; 1 bytes @ 0x13
   796  0033                     	ds	1
   797  0034                     ??_LCD:
   798  0034                     USART@canal_10:	
   799                           ; 1 bytes @ 0x14
   800                           
   801                           
   802                           ; 1 bytes @ 0x14
   803  0034                     	ds	1
   804  0035                     LCD@canal_10:
   805                           
   806                           ; 1 bytes @ 0x15
   807  0035                     	ds	1
   808  0036                     ??_main:
   809                           
   810                           ; 1 bytes @ 0x16
   811  0036                     	ds	3
   812                           
   813                           	psect	maintext
   814  034D                     __pmaintext:	
   815 ;;
   816 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   817 ;;
   818 ;; *************** function _main *****************
   819 ;; Defined at:
   820 ;;		line 86 in file "Lab_02.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : B00/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0
   836 ;;      Temps:          0       3       0       0       0
   837 ;;      Totals:         0       3       0       0       0
   838 ;;Total ram usage:        3 bytes
   839 ;; Hardware stack levels required when called: 8
   840 ;; This function calls:
   841 ;;		_Config_ADC
   842 ;;		_Config_Oscilador
   843 ;;		_Config_Puertos
   844 ;;		_Config_TMR0
   845 ;;		_Config_USART
   846 ;;		_LCD
   847 ;;		_LCD_Init_8bits
   848 ;;		_USART
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _main
   856  034D                     _main:
   857  034D                     l1516:	
   858                           ;incstack = 0
   859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   860                           
   861  034D  120A  118A  25B6  120A  118A  	fcall	_Config_Oscilador
   862  0352                     l1518:
   863  0352  120A  118A  25A7  120A  118A  	fcall	_Config_TMR0
   864  0357  1283               	bcf	3,5	;RP0=0, select bank0
   865  0358  1303               	bcf	3,6	;RP1=0, select bank0
   866  0359  00B6               	movwf	??_main
   867  035A  0836               	movf	??_main,w
   868  035B  00BB               	movwf	_Valor_TMR0
   869  035C                     l1520:
   870  035C  120A  118A  2552  120A  118A  	fcall	_Config_ADC
   871  0361                     l1522:
   872  0361  120A  118A  2594  120A  118A  	fcall	_Config_USART
   873  0366                     l1524:
   874  0366  120A  118A  256A  120A  118A  	fcall	_Config_Puertos
   875  036B                     l1526:
   876  036B  120A  118A  22FE  120A  118A  	fcall	_LCD_Init_8bits
   877  0370                     l1528:
   878  0370  1283               	bcf	3,5	;RP0=0, select bank0
   879  0371  1303               	bcf	3,6	;RP1=0, select bank0
   880  0372  0839               	movf	_Valor_Canal_12,w
   881  0373  00B6               	movwf	??_main
   882  0374  0836               	movf	??_main,w
   883  0375  00B3               	movwf	USART@canal_12
   884  0376  083A               	movf	_Valor_Canal_10,w
   885  0377  120A  118A  2458  120A  118A  	fcall	_USART
   886  037C                     l1530:
   887  037C  1283               	bcf	3,5	;RP0=0, select bank0
   888  037D  1303               	bcf	3,6	;RP1=0, select bank0
   889  037E  0839               	movf	_Valor_Canal_12,w
   890  037F  00B6               	movwf	??_main
   891  0380  0836               	movf	??_main,w
   892  0381  00B3               	movwf	LCD@canal_12
   893  0382  083A               	movf	_Valor_Canal_10,w
   894  0383  120A  118A  239B  120A  118A  	fcall	_LCD
   895  0388                     l1532:
   896  0388  3002               	movlw	2
   897  0389  1283               	bcf	3,5	;RP0=0, select bank0
   898  038A  1303               	bcf	3,6	;RP1=0, select bank0
   899  038B  00B8               	movwf	??_main+2
   900  038C  3004               	movlw	4
   901  038D  00B7               	movwf	??_main+1
   902  038E  30B9               	movlw	185
   903  038F  00B6               	movwf	??_main
   904  0390                     u1157:
   905  0390  0BB6               	decfsz	??_main,f
   906  0391  2B90               	goto	u1157
   907  0392  0BB7               	decfsz	??_main+1,f
   908  0393  2B90               	goto	u1157
   909  0394  0BB8               	decfsz	??_main+2,f
   910  0395  2B90               	goto	u1157
   911  0396  2B97               	nop2
   912  0397  2B70               	goto	l1528
   913  0398  120A  118A  280C   	ljmp	start
   914  039B                     __end_of_main:
   915                           
   916                           	psect	text1
   917  0458                     __ptext1:	
   918 ;; *************** function _USART *****************
   919 ;; Defined at:
   920 ;;		line 127 in file "Libreria.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  canal_10        1    wreg     unsigned char 
   923 ;;  canal_12        1   19[BANK0 ] unsigned char 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  canal_10        1   20[BANK0 ] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         0       1       0       0       0
   936 ;;      Locals:         0       1       0       0       0
   937 ;;      Temps:          0       0       0       0       0
   938 ;;      Totals:         0       2       0       0       0
   939 ;;Total ram usage:        2 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; Hardware stack levels required when called: 4
   942 ;; This function calls:
   943 ;;		_Texto_USART
   944 ;;		_Transmisor_USART
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _USART
   952  0458                     _USART:
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in _USART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   956                           ;USART@canal_10 stored from wreg
   957  0458  1283               	bcf	3,5	;RP0=0, select bank0
   958  0459  1303               	bcf	3,6	;RP1=0, select bank0
   959  045A  00B4               	movwf	USART@canal_10
   960  045B                     l1474:
   961                           
   962                           ;Libreria.c: 128:     Texto_USART("POT 1    ");
   963  045B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   964  045C  120A  118A  2484  120A  118A  	fcall	_Texto_USART
   965                           
   966                           ;Libreria.c: 129:     Texto_USART("POT 2");
   967  0461  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   968  0462  120A  118A  2484  120A  118A  	fcall	_Texto_USART
   969  0467                     l1476:
   970                           
   971                           ;Libreria.c: 130:     TXREG = '\r';
   972  0467  300D               	movlw	13
   973  0468  1283               	bcf	3,5	;RP0=0, select bank0
   974  0469  1303               	bcf	3,6	;RP1=0, select bank0
   975  046A  0099               	movwf	25	;volatile
   976  046B                     l1478:
   977                           
   978                           ;Libreria.c: 131:     Transmisor_USART(canal_10);
   979  046B  0834               	movf	USART@canal_10,w
   980  046C  120A  118A  201B  120A  118A  	fcall	_Transmisor_USART
   981  0471                     l1480:
   982                           
   983                           ;Libreria.c: 132:     Texto_USART(" --- ");
   984  0471  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   985  0472  120A  118A  2484  120A  118A  	fcall	_Texto_USART
   986  0477                     l1482:
   987                           
   988                           ;Libreria.c: 133:     Transmisor_USART(canal_12);
   989  0477  1283               	bcf	3,5	;RP0=0, select bank0
   990  0478  1303               	bcf	3,6	;RP1=0, select bank0
   991  0479  0833               	movf	USART@canal_12,w
   992  047A  120A  118A  201B  120A  118A  	fcall	_Transmisor_USART
   993                           
   994                           ;Libreria.c: 134:     TXREG = '\r';
   995  047F  300D               	movlw	13
   996  0480  1283               	bcf	3,5	;RP0=0, select bank0
   997  0481  1303               	bcf	3,6	;RP1=0, select bank0
   998  0482  0099               	movwf	25	;volatile
   999  0483                     l176:
  1000  0483  0008               	return
  1001  0484                     __end_of_USART:
  1002                           
  1003                           	psect	text2
  1004  001B                     __ptext2:	
  1005 ;; *************** function _Transmisor_USART *****************
  1006 ;; Defined at:
  1007 ;;		line 80 in file "Libreria.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  valor           1    wreg     unsigned char 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  valor           1   12[BANK0 ] unsigned char 
  1012 ;;  temp            2   17[BANK0 ] int 
  1013 ;;  centena         2   15[BANK0 ] int 
  1014 ;;  decena          2   13[BANK0 ] int 
  1015 ;;  unidad          2   10[BANK0 ] int 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, pclath, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1025 ;;      Params:         0       0       0       0       0
  1026 ;;      Locals:         0       9       0       0       0
  1027 ;;      Temps:          0       2       0       0       0
  1028 ;;      Totals:         0      11       0       0       0
  1029 ;;Total ram usage:       11 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 3
  1032 ;; This function calls:
  1033 ;;		___awdiv
  1034 ;;		___wmul
  1035 ;;		_tabla_USART
  1036 ;; This function is called by:
  1037 ;;		_USART
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _Transmisor_USART
  1043  001B                     _Transmisor_USART:
  1044                           
  1045                           ;incstack = 0
  1046                           ; Regs used in _Transmisor_USART: [wreg+status,2+status,0+pclath+cstack]
  1047                           ;Transmisor_USART@valor stored from wreg
  1048  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1049  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1050  001D  00AC               	movwf	Transmisor_USART@valor
  1051  001E                     l1366:
  1052                           
  1053                           ;Libreria.c: 81:     int temp;;Libreria.c: 82:     int unidad, decena, centena;;Libreria
      +                          .c: 83:     temp = valor * 2;
  1054  001E  082C               	movf	Transmisor_USART@valor,w
  1055  001F  00A8               	movwf	??_Transmisor_USART
  1056  0020  01A9               	clrf	??_Transmisor_USART+1
  1057  0021  1003               	clrc
  1058  0022  0D28               	rlf	??_Transmisor_USART,w
  1059  0023  00B1               	movwf	Transmisor_USART@temp
  1060  0024  0D29               	rlf	??_Transmisor_USART+1,w
  1061  0025  00B2               	movwf	Transmisor_USART@temp+1
  1062  0026                     l1368:
  1063                           
  1064                           ;Libreria.c: 84:     centena = temp/100;
  1065  0026  3064               	movlw	100
  1066  0027  00A0               	movwf	___awdiv@divisor
  1067  0028  3000               	movlw	0
  1068  0029  00A1               	movwf	___awdiv@divisor+1
  1069  002A  0832               	movf	Transmisor_USART@temp+1,w
  1070  002B  00A3               	movwf	___awdiv@dividend+1
  1071  002C  0831               	movf	Transmisor_USART@temp,w
  1072  002D  00A2               	movwf	___awdiv@dividend
  1073  002E  120A  118A  2243  120A  118A  	fcall	___awdiv
  1074  0033  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0034  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0035  0821               	movf	?___awdiv+1,w
  1077  0036  00B0               	movwf	Transmisor_USART@centena+1
  1078  0037  0820               	movf	?___awdiv,w
  1079  0038  00AF               	movwf	Transmisor_USART@centena
  1080  0039                     l1370:
  1081                           
  1082                           ;Libreria.c: 85:     temp = temp - centena*100;
  1083  0039  0830               	movf	Transmisor_USART@centena+1,w
  1084  003A  00A1               	movwf	___wmul@multiplier+1
  1085  003B  082F               	movf	Transmisor_USART@centena,w
  1086  003C  00A0               	movwf	___wmul@multiplier
  1087  003D  309C               	movlw	156
  1088  003E  00A2               	movwf	___wmul@multiplicand
  1089  003F  30FF               	movlw	255
  1090  0040  00A3               	movwf	___wmul@multiplicand+1
  1091  0041  120A  118A  24AF  120A  118A  	fcall	___wmul
  1092  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0048  0831               	movf	Transmisor_USART@temp,w
  1095  0049  0720               	addwf	?___wmul,w
  1096  004A  00B1               	movwf	Transmisor_USART@temp
  1097  004B  0832               	movf	Transmisor_USART@temp+1,w
  1098  004C  1803               	skipnc
  1099  004D  0A32               	incf	Transmisor_USART@temp+1,w
  1100  004E  0721               	addwf	?___wmul+1,w
  1101  004F  00B2               	movwf	Transmisor_USART@temp+1
  1102  0050                     l1372:
  1103                           
  1104                           ;Libreria.c: 86:     decena = temp/10;
  1105  0050  300A               	movlw	10
  1106  0051  00A0               	movwf	___awdiv@divisor
  1107  0052  3000               	movlw	0
  1108  0053  00A1               	movwf	___awdiv@divisor+1
  1109  0054  0832               	movf	Transmisor_USART@temp+1,w
  1110  0055  00A3               	movwf	___awdiv@dividend+1
  1111  0056  0831               	movf	Transmisor_USART@temp,w
  1112  0057  00A2               	movwf	___awdiv@dividend
  1113  0058  120A  118A  2243  120A  118A  	fcall	___awdiv
  1114  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1115  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1116  005F  0821               	movf	?___awdiv+1,w
  1117  0060  00AE               	movwf	Transmisor_USART@decena+1
  1118  0061  0820               	movf	?___awdiv,w
  1119  0062  00AD               	movwf	Transmisor_USART@decena
  1120  0063                     l1374:
  1121                           
  1122                           ;Libreria.c: 87:     unidad = temp - decena*10;
  1123  0063  082E               	movf	Transmisor_USART@decena+1,w
  1124  0064  00A1               	movwf	___wmul@multiplier+1
  1125  0065  082D               	movf	Transmisor_USART@decena,w
  1126  0066  00A0               	movwf	___wmul@multiplier
  1127  0067  30F6               	movlw	246
  1128  0068  00A2               	movwf	___wmul@multiplicand
  1129  0069  30FF               	movlw	255
  1130  006A  00A3               	movwf	___wmul@multiplicand+1
  1131  006B  120A  118A  24AF  120A  118A  	fcall	___wmul
  1132  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0072  0831               	movf	Transmisor_USART@temp,w
  1135  0073  0720               	addwf	?___wmul,w
  1136  0074  00AA               	movwf	Transmisor_USART@unidad
  1137  0075  0832               	movf	Transmisor_USART@temp+1,w
  1138  0076  1803               	skipnc
  1139  0077  0A32               	incf	Transmisor_USART@temp+1,w
  1140  0078  0721               	addwf	?___wmul+1,w
  1141  0079  00AB               	movwf	Transmisor_USART@unidad+1
  1142  007A                     l1376:
  1143                           
  1144                           ;Libreria.c: 88:     tabla_USART(centena);
  1145  007A  0830               	movf	Transmisor_USART@centena+1,w
  1146  007B  00F7               	movwf	tabla_USART@numero+1
  1147  007C  082F               	movf	Transmisor_USART@centena,w
  1148  007D  00F6               	movwf	tabla_USART@numero
  1149  007E  120A  118A  21CC  120A  118A  	fcall	_tabla_USART
  1150  0083                     l1378:
  1151                           
  1152                           ;Libreria.c: 89:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1153  0083  300D               	movlw	13
  1154  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0086  00A9               	movwf	??_Transmisor_USART+1
  1157  0087  30FB               	movlw	251
  1158  0088  00A8               	movwf	??_Transmisor_USART
  1159  0089                     u1167:
  1160  0089  0BA8               	decfsz	??_Transmisor_USART,f
  1161  008A  2889               	goto	u1167
  1162  008B  0BA9               	decfsz	??_Transmisor_USART+1,f
  1163  008C  2889               	goto	u1167
  1164  008D                     l1380:
  1165                           
  1166                           ;Libreria.c: 90:     TXREG = '.';
  1167  008D  302E               	movlw	46
  1168  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1169  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0090  0099               	movwf	25	;volatile
  1171  0091                     l1382:
  1172                           
  1173                           ;Libreria.c: 91:     tabla_USART(decena);
  1174  0091  082E               	movf	Transmisor_USART@decena+1,w
  1175  0092  00F7               	movwf	tabla_USART@numero+1
  1176  0093  082D               	movf	Transmisor_USART@decena,w
  1177  0094  00F6               	movwf	tabla_USART@numero
  1178  0095  120A  118A  21CC  120A  118A  	fcall	_tabla_USART
  1179                           
  1180                           ;Libreria.c: 92:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1181  009A  300D               	movlw	13
  1182  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1183  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1184  009D  00A9               	movwf	??_Transmisor_USART+1
  1185  009E  30FB               	movlw	251
  1186  009F  00A8               	movwf	??_Transmisor_USART
  1187  00A0                     u1177:
  1188  00A0  0BA8               	decfsz	??_Transmisor_USART,f
  1189  00A1  28A0               	goto	u1177
  1190  00A2  0BA9               	decfsz	??_Transmisor_USART+1,f
  1191  00A3  28A0               	goto	u1177
  1192  00A4                     l1384:
  1193                           
  1194                           ;Libreria.c: 93:     tabla_USART(unidad);
  1195  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1197  00A6  082B               	movf	Transmisor_USART@unidad+1,w
  1198  00A7  00F7               	movwf	tabla_USART@numero+1
  1199  00A8  082A               	movf	Transmisor_USART@unidad,w
  1200  00A9  00F6               	movwf	tabla_USART@numero
  1201  00AA  120A  118A  21CC  120A  118A  	fcall	_tabla_USART
  1202  00AF                     l1386:
  1203                           
  1204                           ;Libreria.c: 94:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1205  00AF  300D               	movlw	13
  1206  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1207  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1208  00B2  00A9               	movwf	??_Transmisor_USART+1
  1209  00B3  30FB               	movlw	251
  1210  00B4  00A8               	movwf	??_Transmisor_USART
  1211  00B5                     u1187:
  1212  00B5  0BA8               	decfsz	??_Transmisor_USART,f
  1213  00B6  28B5               	goto	u1187
  1214  00B7  0BA9               	decfsz	??_Transmisor_USART+1,f
  1215  00B8  28B5               	goto	u1187
  1216  00B9                     l151:
  1217  00B9  0008               	return
  1218  00BA                     __end_of_Transmisor_USART:
  1219                           
  1220                           	psect	text3
  1221  01CC                     __ptext3:	
  1222 ;; *************** function _tabla_USART *****************
  1223 ;; Defined at:
  1224 ;;		line 101 in file "Libreria.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  numero          2    6[COMMON] int 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         2       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0
  1241 ;;      Totals:         2       0       0       0       0
  1242 ;;Total ram usage:        2 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 2
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_Transmisor_USART
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _tabla_USART
  1254  01CC                     _tabla_USART:
  1255  01CC                     l1218:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _tabla_USART: [wreg+status,2+status,0]
  1258                           
  1259                           
  1260                           ;Libreria.c: 104:     if (numero == 1){
  1261  01CC  0376               	decf	tabla_USART@numero,w
  1262  01CD  0477               	iorwf	tabla_USART@numero+1,w
  1263  01CE  1D03               	btfss	3,2
  1264  01CF  29D1               	goto	u751
  1265  01D0  29D2               	goto	u750
  1266  01D1                     u751:
  1267  01D1  29D7               	goto	l1222
  1268  01D2                     u750:
  1269  01D2                     l1220:
  1270                           
  1271                           ;Libreria.c: 105:         TXREG = '1';
  1272  01D2  3031               	movlw	49
  1273  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1274  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1275  01D5  0099               	movwf	25	;volatile
  1276                           
  1277                           ;Libreria.c: 106:     } else if (numero == 2){
  1278  01D6  2A42               	goto	l173
  1279  01D7                     l1222:
  1280  01D7  3002               	movlw	2
  1281  01D8  0676               	xorwf	tabla_USART@numero,w
  1282  01D9  0477               	iorwf	tabla_USART@numero+1,w
  1283  01DA  1D03               	btfss	3,2
  1284  01DB  29DD               	goto	u761
  1285  01DC  29DE               	goto	u760
  1286  01DD                     u761:
  1287  01DD  29E3               	goto	l1226
  1288  01DE                     u760:
  1289  01DE                     l1224:
  1290                           
  1291                           ;Libreria.c: 107:         TXREG = '2';
  1292  01DE  3032               	movlw	50
  1293  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1294  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1295  01E1  0099               	movwf	25	;volatile
  1296                           
  1297                           ;Libreria.c: 108:     } else if (numero == 3){
  1298  01E2  2A42               	goto	l173
  1299  01E3                     l1226:
  1300  01E3  3003               	movlw	3
  1301  01E4  0676               	xorwf	tabla_USART@numero,w
  1302  01E5  0477               	iorwf	tabla_USART@numero+1,w
  1303  01E6  1D03               	btfss	3,2
  1304  01E7  29E9               	goto	u771
  1305  01E8  29EA               	goto	u770
  1306  01E9                     u771:
  1307  01E9  29EF               	goto	l1230
  1308  01EA                     u770:
  1309  01EA                     l1228:
  1310                           
  1311                           ;Libreria.c: 109:         TXREG = '3';
  1312  01EA  3033               	movlw	51
  1313  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1314  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1315  01ED  0099               	movwf	25	;volatile
  1316                           
  1317                           ;Libreria.c: 110:     } else if (numero == 4){
  1318  01EE  2A42               	goto	l173
  1319  01EF                     l1230:
  1320  01EF  3004               	movlw	4
  1321  01F0  0676               	xorwf	tabla_USART@numero,w
  1322  01F1  0477               	iorwf	tabla_USART@numero+1,w
  1323  01F2  1D03               	btfss	3,2
  1324  01F3  29F5               	goto	u781
  1325  01F4  29F6               	goto	u780
  1326  01F5                     u781:
  1327  01F5  29FB               	goto	l1234
  1328  01F6                     u780:
  1329  01F6                     l1232:
  1330                           
  1331                           ;Libreria.c: 111:         TXREG = '4';
  1332  01F6  3034               	movlw	52
  1333  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1334  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1335  01F9  0099               	movwf	25	;volatile
  1336                           
  1337                           ;Libreria.c: 112:     } else if (numero == 5){
  1338  01FA  2A42               	goto	l173
  1339  01FB                     l1234:
  1340  01FB  3005               	movlw	5
  1341  01FC  0676               	xorwf	tabla_USART@numero,w
  1342  01FD  0477               	iorwf	tabla_USART@numero+1,w
  1343  01FE  1D03               	btfss	3,2
  1344  01FF  2A01               	goto	u791
  1345  0200  2A02               	goto	u790
  1346  0201                     u791:
  1347  0201  2A07               	goto	l1238
  1348  0202                     u790:
  1349  0202                     l1236:
  1350                           
  1351                           ;Libreria.c: 113:         TXREG = '5';
  1352  0202  3035               	movlw	53
  1353  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0205  0099               	movwf	25	;volatile
  1356                           
  1357                           ;Libreria.c: 114:     } else if (numero == 6){
  1358  0206  2A42               	goto	l173
  1359  0207                     l1238:
  1360  0207  3006               	movlw	6
  1361  0208  0676               	xorwf	tabla_USART@numero,w
  1362  0209  0477               	iorwf	tabla_USART@numero+1,w
  1363  020A  1D03               	btfss	3,2
  1364  020B  2A0D               	goto	u801
  1365  020C  2A0E               	goto	u800
  1366  020D                     u801:
  1367  020D  2A13               	goto	l1242
  1368  020E                     u800:
  1369  020E                     l1240:
  1370                           
  1371                           ;Libreria.c: 115:         TXREG = '6';
  1372  020E  3036               	movlw	54
  1373  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0211  0099               	movwf	25	;volatile
  1376                           
  1377                           ;Libreria.c: 116:     } else if (numero == 7){
  1378  0212  2A42               	goto	l173
  1379  0213                     l1242:
  1380  0213  3007               	movlw	7
  1381  0214  0676               	xorwf	tabla_USART@numero,w
  1382  0215  0477               	iorwf	tabla_USART@numero+1,w
  1383  0216  1D03               	btfss	3,2
  1384  0217  2A19               	goto	u811
  1385  0218  2A1A               	goto	u810
  1386  0219                     u811:
  1387  0219  2A1F               	goto	l1246
  1388  021A                     u810:
  1389  021A                     l1244:
  1390                           
  1391                           ;Libreria.c: 117:         TXREG = '7';
  1392  021A  3037               	movlw	55
  1393  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1394  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1395  021D  0099               	movwf	25	;volatile
  1396                           
  1397                           ;Libreria.c: 118:     } else if (numero == 8){
  1398  021E  2A42               	goto	l173
  1399  021F                     l1246:
  1400  021F  3008               	movlw	8
  1401  0220  0676               	xorwf	tabla_USART@numero,w
  1402  0221  0477               	iorwf	tabla_USART@numero+1,w
  1403  0222  1D03               	btfss	3,2
  1404  0223  2A25               	goto	u821
  1405  0224  2A26               	goto	u820
  1406  0225                     u821:
  1407  0225  2A2B               	goto	l1250
  1408  0226                     u820:
  1409  0226                     l1248:
  1410                           
  1411                           ;Libreria.c: 119:         TXREG = '8';
  1412  0226  3038               	movlw	56
  1413  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0229  0099               	movwf	25	;volatile
  1416                           
  1417                           ;Libreria.c: 120:     } else if (numero == 9){
  1418  022A  2A42               	goto	l173
  1419  022B                     l1250:
  1420  022B  3009               	movlw	9
  1421  022C  0676               	xorwf	tabla_USART@numero,w
  1422  022D  0477               	iorwf	tabla_USART@numero+1,w
  1423  022E  1D03               	btfss	3,2
  1424  022F  2A31               	goto	u831
  1425  0230  2A32               	goto	u830
  1426  0231                     u831:
  1427  0231  2A37               	goto	l1254
  1428  0232                     u830:
  1429  0232                     l1252:
  1430                           
  1431                           ;Libreria.c: 121:         TXREG = '9';
  1432  0232  3039               	movlw	57
  1433  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0235  0099               	movwf	25	;volatile
  1436                           
  1437                           ;Libreria.c: 122:     } else if (numero == 0){
  1438  0236  2A42               	goto	l173
  1439  0237                     l1254:
  1440  0237  0876               	movf	tabla_USART@numero,w
  1441  0238  0477               	iorwf	tabla_USART@numero+1,w
  1442  0239  1D03               	btfss	3,2
  1443  023A  2A3C               	goto	u841
  1444  023B  2A3D               	goto	u840
  1445  023C                     u841:
  1446  023C  2A42               	goto	l167
  1447  023D                     u840:
  1448  023D                     l1256:
  1449                           
  1450                           ;Libreria.c: 123:         TXREG = '0';
  1451  023D  3030               	movlw	48
  1452  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1453  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0240  0099               	movwf	25	;volatile
  1455  0241  2A42               	goto	l173
  1456  0242                     l167:
  1457  0242                     l173:
  1458  0242  0008               	return
  1459  0243                     __end_of_tabla_USART:
  1460                           
  1461                           	psect	text4
  1462  0484                     __ptext4:	
  1463 ;; *************** function _Texto_USART *****************
  1464 ;; Defined at:
  1465 ;;		line 137 in file "Libreria.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  texto           1    wreg     PTR unsigned char 
  1468 ;;		 -> STR_3(6), STR_2(6), STR_1(10), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  texto           1    1[BANK0 ] PTR unsigned char 
  1471 ;;		 -> STR_3(6), STR_2(6), STR_1(10), 
  1472 ;;  i               1    0[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       0       0       0       0
  1483 ;;      Locals:         0       2       0       0       0
  1484 ;;      Temps:          2       0       0       0       0
  1485 ;;      Totals:         2       2       0       0       0
  1486 ;;Total ram usage:        4 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 2
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_USART
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _Texto_USART
  1498  0484                     _Texto_USART:
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _Texto_USART: [wreg-fsr0h+status,2+status,0+pclath]
  1502                           ;Texto_USART@texto stored from wreg
  1503  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0486  00A1               	movwf	Texto_USART@texto
  1506  0487                     l1388:
  1507                           
  1508                           ;Libreria.c: 138:     char i = 0;
  1509  0487  01A0               	clrf	Texto_USART@i
  1510                           
  1511                           ;Libreria.c: 139:     while(texto[i] != '\0'){
  1512  0488  2C9F               	goto	l1396
  1513  0489                     l1390:
  1514                           
  1515                           ;Libreria.c: 140:         TXREG = texto[i];
  1516  0489  0820               	movf	Texto_USART@i,w
  1517  048A  0721               	addwf	Texto_USART@texto,w
  1518  048B  0084               	movwf	4
  1519  048C  120A  118A  2420  120A  118A  	fcall	stringdir
  1520  0491  0099               	movwf	25	;volatile
  1521  0492                     l1392:
  1522                           
  1523                           ;Libreria.c: 141:         i++;
  1524  0492  3001               	movlw	1
  1525  0493  00F6               	movwf	??_Texto_USART
  1526  0494  0876               	movf	??_Texto_USART,w
  1527  0495  07A0               	addwf	Texto_USART@i,f
  1528  0496                     l1394:
  1529                           
  1530                           ;Libreria.c: 142:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1531  0496  3003               	movlw	3
  1532  0497  00F7               	movwf	??_Texto_USART+1
  1533  0498  3097               	movlw	151
  1534  0499  00F6               	movwf	??_Texto_USART
  1535  049A                     u1197:
  1536  049A  0BF6               	decfsz	??_Texto_USART,f
  1537  049B  2C9A               	goto	u1197
  1538  049C  0BF7               	decfsz	??_Texto_USART+1,f
  1539  049D  2C9A               	goto	u1197
  1540  049E  2C9F               	nop2
  1541  049F                     l1396:
  1542                           
  1543                           ;Libreria.c: 139:     while(texto[i] != '\0'){
  1544  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1545  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1546  04A1  0820               	movf	Texto_USART@i,w
  1547  04A2  0721               	addwf	Texto_USART@texto,w
  1548  04A3  0084               	movwf	4
  1549  04A4  120A  118A  2420  120A  118A  	fcall	stringdir
  1550  04A9  3A00               	xorlw	0
  1551  04AA  1D03               	skipz
  1552  04AB  2CAD               	goto	u1091
  1553  04AC  2CAE               	goto	u1090
  1554  04AD                     u1091:
  1555  04AD  2C89               	goto	l1390
  1556  04AE                     u1090:
  1557  04AE                     l182:
  1558  04AE  0008               	return
  1559  04AF                     __end_of_Texto_USART:
  1560                           
  1561                           	psect	text5
  1562  02FE                     __ptext5:	
  1563 ;; *************** function _LCD_Init_8bits *****************
  1564 ;; Defined at:
  1565 ;;		line 5 in file "LCD.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0
  1581 ;;      Temps:          0       2       0       0       0
  1582 ;;      Totals:         0       2       0       0       0
  1583 ;;Total ram usage:        2 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; Hardware stack levels required when called: 4
  1586 ;; This function calls:
  1587 ;;		_CMD_LCD
  1588 ;;		_PORT_LCD
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _LCD_Init_8bits
  1596  02FE                     _LCD_Init_8bits:
  1597  02FE                     l1464:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _LCD_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  1600                           
  1601                           
  1602                           ;LCD.c: 6:     PORT_LCD(0);
  1603  02FE  3000               	movlw	0
  1604  02FF  120A  118A  22AC  120A  118A  	fcall	_PORT_LCD
  1605  0304                     l1466:
  1606                           
  1607                           ;LCD.c: 7:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1608  0304  3034               	movlw	52
  1609  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0307  00A2               	movwf	??_LCD_Init_8bits+1
  1612  0308  30F1               	movlw	241
  1613  0309  00A1               	movwf	??_LCD_Init_8bits
  1614  030A                     u1207:
  1615  030A  0BA1               	decfsz	??_LCD_Init_8bits,f
  1616  030B  2B0A               	goto	u1207
  1617  030C  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1618  030D  2B0A               	goto	u1207
  1619  030E                     l1468:
  1620                           
  1621                           ;LCD.c: 8:     CMD_LCD(0b111000);
  1622  030E  3038               	movlw	56
  1623  030F  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  1624                           
  1625                           ;LCD.c: 9:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1626  0314  3034               	movlw	52
  1627  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0317  00A2               	movwf	??_LCD_Init_8bits+1
  1630  0318  30F1               	movlw	241
  1631  0319  00A1               	movwf	??_LCD_Init_8bits
  1632  031A                     u1217:
  1633  031A  0BA1               	decfsz	??_LCD_Init_8bits,f
  1634  031B  2B1A               	goto	u1217
  1635  031C  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1636  031D  2B1A               	goto	u1217
  1637  031E                     l1470:
  1638                           
  1639                           ;LCD.c: 10:     CMD_LCD(0b1100);
  1640  031E  300C               	movlw	12
  1641  031F  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  1642  0324                     l1472:
  1643                           
  1644                           ;LCD.c: 11:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1645  0324  3034               	movlw	52
  1646  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0327  00A2               	movwf	??_LCD_Init_8bits+1
  1649  0328  30F1               	movlw	241
  1650  0329  00A1               	movwf	??_LCD_Init_8bits
  1651  032A                     u1227:
  1652  032A  0BA1               	decfsz	??_LCD_Init_8bits,f
  1653  032B  2B2A               	goto	u1227
  1654  032C  0BA2               	decfsz	??_LCD_Init_8bits+1,f
  1655  032D  2B2A               	goto	u1227
  1656                           
  1657                           ;LCD.c: 12:     CMD_LCD(0b1);
  1658  032E  3001               	movlw	1
  1659  032F  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  1660                           
  1661                           ;LCD.c: 14:     CMD_LCD(0b111000);
  1662  0334  3038               	movlw	56
  1663  0335  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  1664                           
  1665                           ;LCD.c: 15:     CMD_LCD(0b1000);
  1666  033A  3008               	movlw	8
  1667  033B  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  1668                           
  1669                           ;LCD.c: 16:     CMD_LCD(0b1);
  1670  0340  3001               	movlw	1
  1671  0341  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  1672                           
  1673                           ;LCD.c: 17:     CMD_LCD(0b110);
  1674  0346  3006               	movlw	6
  1675  0347  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  1676  034C                     l200:
  1677  034C  0008               	return
  1678  034D                     __end_of_LCD_Init_8bits:
  1679                           
  1680                           	psect	text6
  1681  039B                     __ptext6:	
  1682 ;; *************** function _LCD *****************
  1683 ;; Defined at:
  1684 ;;		line 145 in file "Libreria.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  canal_10        1    wreg     unsigned char 
  1687 ;;  canal_12        1   19[BANK0 ] unsigned char 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  canal_10        1   21[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       1       0       0       0
  1700 ;;      Locals:         0       1       0       0       0
  1701 ;;      Temps:          0       1       0       0       0
  1702 ;;      Totals:         0       3       0       0       0
  1703 ;;Total ram usage:        3 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 7
  1706 ;; This function calls:
  1707 ;;		_Lcd_Set_Cursor
  1708 ;;		_Print_Num
  1709 ;;		_Write_LCD
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _LCD
  1717  039B                     _LCD:
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1721                           ;LCD@canal_10 stored from wreg
  1722  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1723  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1724  039D  00B5               	movwf	LCD@canal_10
  1725  039E                     l1484:
  1726                           
  1727                           ;Libreria.c: 146:     Lcd_Set_Cursor(1,1);
  1728  039E  01A1               	clrf	Lcd_Set_Cursor@b
  1729  039F  0AA1               	incf	Lcd_Set_Cursor@b,f
  1730  03A0  3001               	movlw	1
  1731  03A1  120A  118A  24FC  120A  118A  	fcall	_Lcd_Set_Cursor
  1732  03A6                     l1486:
  1733                           
  1734                           ;Libreria.c: 147:     Write_LCD("POT1");
  1735  03A6  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1736  03A7  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  1737  03AC                     l1488:
  1738                           
  1739                           ;Libreria.c: 148:     Lcd_Set_Cursor(2,1);
  1740  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1741  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1742  03AE  01A1               	clrf	Lcd_Set_Cursor@b
  1743  03AF  0AA1               	incf	Lcd_Set_Cursor@b,f
  1744  03B0  3002               	movlw	2
  1745  03B1  120A  118A  24FC  120A  118A  	fcall	_Lcd_Set_Cursor
  1746                           
  1747                           ;Libreria.c: 149:     Print_Num(canal_10);
  1748  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1749  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1750  03B8  0835               	movf	LCD@canal_10,w
  1751  03B9  120A  118A  2147  120A  118A  	fcall	_Print_Num
  1752  03BE                     l1490:
  1753                           
  1754                           ;Libreria.c: 151:     Lcd_Set_Cursor(1,7);
  1755  03BE  3007               	movlw	7
  1756  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1757  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1758  03C1  00B4               	movwf	??_LCD
  1759  03C2  0834               	movf	??_LCD,w
  1760  03C3  00A1               	movwf	Lcd_Set_Cursor@b
  1761  03C4  3001               	movlw	1
  1762  03C5  120A  118A  24FC  120A  118A  	fcall	_Lcd_Set_Cursor
  1763  03CA                     l1492:
  1764                           
  1765                           ;Libreria.c: 152:     Write_LCD("POT2");
  1766  03CA  301C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1767  03CB  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  1768                           
  1769                           ;Libreria.c: 153:     Lcd_Set_Cursor(2,7);
  1770  03D0  3007               	movlw	7
  1771  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1772  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1773  03D3  00B4               	movwf	??_LCD
  1774  03D4  0834               	movf	??_LCD,w
  1775  03D5  00A1               	movwf	Lcd_Set_Cursor@b
  1776  03D6  3002               	movlw	2
  1777  03D7  120A  118A  24FC  120A  118A  	fcall	_Lcd_Set_Cursor
  1778  03DC                     l1494:
  1779                           
  1780                           ;Libreria.c: 154:     Print_Num(canal_12);
  1781  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1782  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1783  03DE  0833               	movf	LCD@canal_12,w
  1784  03DF  120A  118A  2147  120A  118A  	fcall	_Print_Num
  1785  03E4                     l185:
  1786  03E4  0008               	return
  1787  03E5                     __end_of_LCD:
  1788                           
  1789                           	psect	text7
  1790  0147                     __ptext7:	
  1791 ;; *************** function _Print_Num *****************
  1792 ;; Defined at:
  1793 ;;		line 65 in file "LCD.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  valor           1    wreg     unsigned char 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  valor           1   12[BANK0 ] unsigned char 
  1798 ;;  temp            2   17[BANK0 ] int 
  1799 ;;  centena         2   15[BANK0 ] int 
  1800 ;;  decena          2   13[BANK0 ] int 
  1801 ;;  unidad          2   10[BANK0 ] int 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       0       0       0       0
  1812 ;;      Locals:         0       9       0       0       0
  1813 ;;      Temps:          0       2       0       0       0
  1814 ;;      Totals:         0      11       0       0       0
  1815 ;;Total ram usage:       11 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; Hardware stack levels required when called: 6
  1818 ;; This function calls:
  1819 ;;		_Write_LCD
  1820 ;;		___awdiv
  1821 ;;		___wmul
  1822 ;;		_tabla_num
  1823 ;; This function is called by:
  1824 ;;		_LCD
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _Print_Num
  1830  0147                     _Print_Num:
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _Print_Num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1834                           ;Print_Num@valor stored from wreg
  1835  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0149  00AC               	movwf	Print_Num@valor
  1838  014A                     l1410:
  1839                           
  1840                           ;LCD.c: 66:     int temp;;LCD.c: 67:     int unidad, decena, centena;;LCD.c: 68:     tem
      +                          p = valor * 2;
  1841  014A  082C               	movf	Print_Num@valor,w
  1842  014B  00A8               	movwf	??_Print_Num
  1843  014C  01A9               	clrf	??_Print_Num+1
  1844  014D  1003               	clrc
  1845  014E  0D28               	rlf	??_Print_Num,w
  1846  014F  00B1               	movwf	Print_Num@temp
  1847  0150  0D29               	rlf	??_Print_Num+1,w
  1848  0151  00B2               	movwf	Print_Num@temp+1
  1849  0152                     l1412:
  1850                           
  1851                           ;LCD.c: 69:     centena = temp/100;
  1852  0152  3064               	movlw	100
  1853  0153  00A0               	movwf	___awdiv@divisor
  1854  0154  3000               	movlw	0
  1855  0155  00A1               	movwf	___awdiv@divisor+1
  1856  0156  0832               	movf	Print_Num@temp+1,w
  1857  0157  00A3               	movwf	___awdiv@dividend+1
  1858  0158  0831               	movf	Print_Num@temp,w
  1859  0159  00A2               	movwf	___awdiv@dividend
  1860  015A  120A  118A  2243  120A  118A  	fcall	___awdiv
  1861  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0161  0821               	movf	?___awdiv+1,w
  1864  0162  00B0               	movwf	Print_Num@centena+1
  1865  0163  0820               	movf	?___awdiv,w
  1866  0164  00AF               	movwf	Print_Num@centena
  1867  0165                     l1414:
  1868                           
  1869                           ;LCD.c: 70:     temp = temp - centena*100;
  1870  0165  0830               	movf	Print_Num@centena+1,w
  1871  0166  00A1               	movwf	___wmul@multiplier+1
  1872  0167  082F               	movf	Print_Num@centena,w
  1873  0168  00A0               	movwf	___wmul@multiplier
  1874  0169  309C               	movlw	156
  1875  016A  00A2               	movwf	___wmul@multiplicand
  1876  016B  30FF               	movlw	255
  1877  016C  00A3               	movwf	___wmul@multiplicand+1
  1878  016D  120A  118A  24AF  120A  118A  	fcall	___wmul
  1879  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0174  0831               	movf	Print_Num@temp,w
  1882  0175  0720               	addwf	?___wmul,w
  1883  0176  00B1               	movwf	Print_Num@temp
  1884  0177  0832               	movf	Print_Num@temp+1,w
  1885  0178  1803               	skipnc
  1886  0179  0A32               	incf	Print_Num@temp+1,w
  1887  017A  0721               	addwf	?___wmul+1,w
  1888  017B  00B2               	movwf	Print_Num@temp+1
  1889  017C                     l1416:
  1890                           
  1891                           ;LCD.c: 71:     decena = temp/10;
  1892  017C  300A               	movlw	10
  1893  017D  00A0               	movwf	___awdiv@divisor
  1894  017E  3000               	movlw	0
  1895  017F  00A1               	movwf	___awdiv@divisor+1
  1896  0180  0832               	movf	Print_Num@temp+1,w
  1897  0181  00A3               	movwf	___awdiv@dividend+1
  1898  0182  0831               	movf	Print_Num@temp,w
  1899  0183  00A2               	movwf	___awdiv@dividend
  1900  0184  120A  118A  2243  120A  118A  	fcall	___awdiv
  1901  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1902  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1903  018B  0821               	movf	?___awdiv+1,w
  1904  018C  00AE               	movwf	Print_Num@decena+1
  1905  018D  0820               	movf	?___awdiv,w
  1906  018E  00AD               	movwf	Print_Num@decena
  1907  018F                     l1418:
  1908                           
  1909                           ;LCD.c: 72:     unidad = temp - decena*10;
  1910  018F  082E               	movf	Print_Num@decena+1,w
  1911  0190  00A1               	movwf	___wmul@multiplier+1
  1912  0191  082D               	movf	Print_Num@decena,w
  1913  0192  00A0               	movwf	___wmul@multiplier
  1914  0193  30F6               	movlw	246
  1915  0194  00A2               	movwf	___wmul@multiplicand
  1916  0195  30FF               	movlw	255
  1917  0196  00A3               	movwf	___wmul@multiplicand+1
  1918  0197  120A  118A  24AF  120A  118A  	fcall	___wmul
  1919  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1920  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1921  019E  0831               	movf	Print_Num@temp,w
  1922  019F  0720               	addwf	?___wmul,w
  1923  01A0  00AA               	movwf	Print_Num@unidad
  1924  01A1  0832               	movf	Print_Num@temp+1,w
  1925  01A2  1803               	skipnc
  1926  01A3  0A32               	incf	Print_Num@temp+1,w
  1927  01A4  0721               	addwf	?___wmul+1,w
  1928  01A5  00AB               	movwf	Print_Num@unidad+1
  1929  01A6                     l1420:
  1930                           
  1931                           ;LCD.c: 73:     tabla_num(centena);
  1932  01A6  0830               	movf	Print_Num@centena+1,w
  1933  01A7  00A5               	movwf	tabla_num@numero+1
  1934  01A8  082F               	movf	Print_Num@centena,w
  1935  01A9  00A4               	movwf	tabla_num@numero
  1936  01AA  120A  118A  20BA  120A  118A  	fcall	_tabla_num
  1937  01AF                     l1422:
  1938                           
  1939                           ;LCD.c: 74:     Write_LCD(".");
  1940  01AF  3021               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1941  01B0  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  1942  01B5                     l1424:
  1943                           
  1944                           ;LCD.c: 75:     tabla_num(decena);
  1945  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1946  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1947  01B7  082E               	movf	Print_Num@decena+1,w
  1948  01B8  00A5               	movwf	tabla_num@numero+1
  1949  01B9  082D               	movf	Print_Num@decena,w
  1950  01BA  00A4               	movwf	tabla_num@numero
  1951  01BB  120A  118A  20BA  120A  118A  	fcall	_tabla_num
  1952  01C0                     l1426:
  1953                           
  1954                           ;LCD.c: 76:     tabla_num(unidad);
  1955  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1956  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1957  01C2  082B               	movf	Print_Num@unidad+1,w
  1958  01C3  00A5               	movwf	tabla_num@numero+1
  1959  01C4  082A               	movf	Print_Num@unidad,w
  1960  01C5  00A4               	movwf	tabla_num@numero
  1961  01C6  120A  118A  20BA  120A  118A  	fcall	_tabla_num
  1962  01CB                     l227:
  1963  01CB  0008               	return
  1964  01CC                     __end_of_Print_Num:
  1965                           
  1966                           	psect	text8
  1967  00BA                     __ptext8:	
  1968 ;; *************** function _tabla_num *****************
  1969 ;; Defined at:
  1970 ;;		line 92 in file "LCD.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  numero          2    4[BANK0 ] int 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       2       0       0       0
  1985 ;;      Locals:         0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0
  1987 ;;      Totals:         0       2       0       0       0
  1988 ;;Total ram usage:        2 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 5
  1991 ;; This function calls:
  1992 ;;		_Write_LCD
  1993 ;; This function is called by:
  1994 ;;		_Print_Num
  1995 ;;		_Print_Cont
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _tabla_num
  2001  00BA                     _tabla_num:
  2002  00BA                     l1268:	
  2003                           ;incstack = 0
  2004                           ; Regs used in _tabla_num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2005                           
  2006                           
  2007                           ;LCD.c: 96:     if (numero == 1){
  2008  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2009  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2010  00BC  0324               	decf	tabla_num@numero,w
  2011  00BD  0425               	iorwf	tabla_num@numero+1,w
  2012  00BE  1D03               	btfss	3,2
  2013  00BF  28C1               	goto	u851
  2014  00C0  28C2               	goto	u850
  2015  00C1                     u851:
  2016  00C1  28C9               	goto	l1272
  2017  00C2                     u850:
  2018  00C2                     l1270:
  2019                           
  2020                           ;LCD.c: 97:     Write_LCD("1");
  2021  00C2  301A               	movlw	(low (((STR_4+3)-__stringbase)| (0+32768)))& (0+255)
  2022  00C3  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2023                           
  2024                           ;LCD.c: 98:     } else if (numero == 2){
  2025  00C8  2946               	goto	l252
  2026  00C9                     l1272:
  2027  00C9  3002               	movlw	2
  2028  00CA  0624               	xorwf	tabla_num@numero,w
  2029  00CB  0425               	iorwf	tabla_num@numero+1,w
  2030  00CC  1D03               	btfss	3,2
  2031  00CD  28CF               	goto	u861
  2032  00CE  28D0               	goto	u860
  2033  00CF                     u861:
  2034  00CF  28D7               	goto	l1276
  2035  00D0                     u860:
  2036  00D0                     l1274:
  2037                           
  2038                           ;LCD.c: 99:         Write_LCD("2");
  2039  00D0  3015               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
  2040  00D1  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2041                           
  2042                           ;LCD.c: 100:     } else if (numero == 3){
  2043  00D6  2946               	goto	l252
  2044  00D7                     l1276:
  2045  00D7  3003               	movlw	3
  2046  00D8  0624               	xorwf	tabla_num@numero,w
  2047  00D9  0425               	iorwf	tabla_num@numero+1,w
  2048  00DA  1D03               	btfss	3,2
  2049  00DB  28DD               	goto	u871
  2050  00DC  28DE               	goto	u870
  2051  00DD                     u871:
  2052  00DD  28E5               	goto	l1280
  2053  00DE                     u870:
  2054  00DE                     l1278:
  2055                           
  2056                           ;LCD.c: 101:         Write_LCD("3");
  2057  00DE  3025               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2058  00DF  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2059                           
  2060                           ;LCD.c: 102:     } else if (numero == 4){
  2061  00E4  2946               	goto	l252
  2062  00E5                     l1280:
  2063  00E5  3004               	movlw	4
  2064  00E6  0624               	xorwf	tabla_num@numero,w
  2065  00E7  0425               	iorwf	tabla_num@numero+1,w
  2066  00E8  1D03               	btfss	3,2
  2067  00E9  28EB               	goto	u881
  2068  00EA  28EC               	goto	u880
  2069  00EB                     u881:
  2070  00EB  28F3               	goto	l1284
  2071  00EC                     u880:
  2072  00EC                     l1282:
  2073                           
  2074                           ;LCD.c: 103:         Write_LCD("4");
  2075  00EC  3027               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2076  00ED  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2077                           
  2078                           ;LCD.c: 104:     } else if (numero == 5){
  2079  00F2  2946               	goto	l252
  2080  00F3                     l1284:
  2081  00F3  3005               	movlw	5
  2082  00F4  0624               	xorwf	tabla_num@numero,w
  2083  00F5  0425               	iorwf	tabla_num@numero+1,w
  2084  00F6  1D03               	btfss	3,2
  2085  00F7  28F9               	goto	u891
  2086  00F8  28FA               	goto	u890
  2087  00F9                     u891:
  2088  00F9  2901               	goto	l1288
  2089  00FA                     u890:
  2090  00FA                     l1286:
  2091                           
  2092                           ;LCD.c: 105:         Write_LCD("5");
  2093  00FA  3029               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2094  00FB  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2095                           
  2096                           ;LCD.c: 106:     } else if (numero == 6){
  2097  0100  2946               	goto	l252
  2098  0101                     l1288:
  2099  0101  3006               	movlw	6
  2100  0102  0624               	xorwf	tabla_num@numero,w
  2101  0103  0425               	iorwf	tabla_num@numero+1,w
  2102  0104  1D03               	btfss	3,2
  2103  0105  2907               	goto	u901
  2104  0106  2908               	goto	u900
  2105  0107                     u901:
  2106  0107  290F               	goto	l1292
  2107  0108                     u900:
  2108  0108                     l1290:
  2109                           
  2110                           ;LCD.c: 107:         Write_LCD("6");
  2111  0108  302B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2112  0109  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2113                           
  2114                           ;LCD.c: 108:     } else if (numero == 7){
  2115  010E  2946               	goto	l252
  2116  010F                     l1292:
  2117  010F  3007               	movlw	7
  2118  0110  0624               	xorwf	tabla_num@numero,w
  2119  0111  0425               	iorwf	tabla_num@numero+1,w
  2120  0112  1D03               	btfss	3,2
  2121  0113  2915               	goto	u911
  2122  0114  2916               	goto	u910
  2123  0115                     u911:
  2124  0115  291D               	goto	l1296
  2125  0116                     u910:
  2126  0116                     l1294:
  2127                           
  2128                           ;LCD.c: 109:         Write_LCD("7");
  2129  0116  302D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2130  0117  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2131                           
  2132                           ;LCD.c: 110:     } else if (numero == 8){
  2133  011C  2946               	goto	l252
  2134  011D                     l1296:
  2135  011D  3008               	movlw	8
  2136  011E  0624               	xorwf	tabla_num@numero,w
  2137  011F  0425               	iorwf	tabla_num@numero+1,w
  2138  0120  1D03               	btfss	3,2
  2139  0121  2923               	goto	u921
  2140  0122  2924               	goto	u920
  2141  0123                     u921:
  2142  0123  292B               	goto	l1300
  2143  0124                     u920:
  2144  0124                     l1298:
  2145                           
  2146                           ;LCD.c: 111:         Write_LCD("8");
  2147  0124  302F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2148  0125  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2149                           
  2150                           ;LCD.c: 112:     } else if (numero == 9){
  2151  012A  2946               	goto	l252
  2152  012B                     l1300:
  2153  012B  3009               	movlw	9
  2154  012C  0624               	xorwf	tabla_num@numero,w
  2155  012D  0425               	iorwf	tabla_num@numero+1,w
  2156  012E  1D03               	btfss	3,2
  2157  012F  2931               	goto	u931
  2158  0130  2932               	goto	u930
  2159  0131                     u931:
  2160  0131  2939               	goto	l1304
  2161  0132                     u930:
  2162  0132                     l1302:
  2163                           
  2164                           ;LCD.c: 113:         Write_LCD("9");
  2165  0132  3031               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2166  0133  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2167                           
  2168                           ;LCD.c: 114:     } else if (numero == 0){
  2169  0138  2946               	goto	l252
  2170  0139                     l1304:
  2171  0139  0824               	movf	tabla_num@numero,w
  2172  013A  0425               	iorwf	tabla_num@numero+1,w
  2173  013B  1D03               	btfss	3,2
  2174  013C  293E               	goto	u941
  2175  013D  293F               	goto	u940
  2176  013E                     u941:
  2177  013E  2946               	goto	l246
  2178  013F                     u940:
  2179  013F                     l1306:
  2180                           
  2181                           ;LCD.c: 115:         Write_LCD("0");
  2182  013F  3023               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2183  0140  120A  118A  24D6  120A  118A  	fcall	_Write_LCD
  2184  0145  2946               	goto	l252
  2185  0146                     l246:
  2186  0146                     l252:
  2187  0146  0008               	return
  2188  0147                     __end_of_tabla_num:
  2189                           
  2190                           	psect	text9
  2191  04D6                     __ptext9:	
  2192 ;; *************** function _Write_LCD *****************
  2193 ;; Defined at:
  2194 ;;		line 59 in file "LCD.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  a               1    wreg     PTR unsigned char 
  2197 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  2198 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  2199 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(5), 
  2200 ;;		 -> STR_4(5), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  a               1    3[BANK0 ] PTR unsigned char 
  2203 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  2204 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  2205 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(5), 
  2206 ;;		 -> STR_4(5), 
  2207 ;;  i               1    2[BANK0 ] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2217 ;;      Params:         0       0       0       0       0
  2218 ;;      Locals:         0       2       0       0       0
  2219 ;;      Temps:          0       1       0       0       0
  2220 ;;      Totals:         0       3       0       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 4
  2224 ;; This function calls:
  2225 ;;		_Char_LCD
  2226 ;; This function is called by:
  2227 ;;		_LCD
  2228 ;;		_Print_Num
  2229 ;;		_tabla_num
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _Write_LCD
  2235  04D6                     _Write_LCD:
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _Write_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2239                           ;Write_LCD@a stored from wreg
  2240  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2241  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2242  04D8  00A3               	movwf	Write_LCD@a
  2243  04D9                     l1210:
  2244                           
  2245                           ;LCD.c: 60:     char i;;LCD.c: 61:     for (i = 0; a[i] != '\0'; i++)
  2246  04D9  01A2               	clrf	Write_LCD@i
  2247  04DA  2CEE               	goto	l1216
  2248  04DB                     l1212:
  2249                           
  2250                           ;LCD.c: 62:         Char_LCD(a[i]);
  2251  04DB  0822               	movf	Write_LCD@i,w
  2252  04DC  0723               	addwf	Write_LCD@a,w
  2253  04DD  0084               	movwf	4
  2254  04DE  120A  118A  2420  120A  118A  	fcall	stringdir
  2255  04E3  120A  118A  2522  120A  118A  	fcall	_Char_LCD
  2256  04E8                     l1214:
  2257  04E8  3001               	movlw	1
  2258  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2259  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2260  04EB  00A1               	movwf	??_Write_LCD
  2261  04EC  0821               	movf	??_Write_LCD,w
  2262  04ED  07A2               	addwf	Write_LCD@i,f
  2263  04EE                     l1216:
  2264  04EE  0822               	movf	Write_LCD@i,w
  2265  04EF  0723               	addwf	Write_LCD@a,w
  2266  04F0  0084               	movwf	4
  2267  04F1  120A  118A  2420  120A  118A  	fcall	stringdir
  2268  04F6  3A00               	xorlw	0
  2269  04F7  1D03               	skipz
  2270  04F8  2CFA               	goto	u741
  2271  04F9  2CFB               	goto	u740
  2272  04FA                     u741:
  2273  04FA  2CDB               	goto	l1212
  2274  04FB                     u740:
  2275  04FB                     l224:
  2276  04FB  0008               	return
  2277  04FC                     __end_of_Write_LCD:
  2278                           
  2279                           	psect	text10
  2280  0522                     __ptext10:	
  2281 ;; *************** function _Char_LCD *****************
  2282 ;; Defined at:
  2283 ;;		line 52 in file "LCD.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  a               1    wreg     unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  a               1    0[BANK0 ] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       0       0       0       0
  2298 ;;      Locals:         0       1       0       0       0
  2299 ;;      Temps:          1       0       0       0       0
  2300 ;;      Totals:         1       1       0       0       0
  2301 ;;Total ram usage:        2 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 3
  2304 ;; This function calls:
  2305 ;;		_PORT_LCD
  2306 ;; This function is called by:
  2307 ;;		_Write_LCD
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _Char_LCD
  2313  0522                     _Char_LCD:
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _Char_LCD: [wreg+status,2+status,0+pclath+cstack]
  2317                           ;Char_LCD@a stored from wreg
  2318  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0524  00A0               	movwf	Char_LCD@a
  2321  0525                     l1200:
  2322                           
  2323                           ;LCD.c: 53:     PORTEbits.RE0 = 1;
  2324  0525  1409               	bsf	9,0	;volatile
  2325  0526                     l1202:
  2326                           
  2327                           ;LCD.c: 54:     PORT_LCD(a);
  2328  0526  0820               	movf	Char_LCD@a,w
  2329  0527  120A  118A  22AC  120A  118A  	fcall	_PORT_LCD
  2330  052C                     l1204:
  2331                           
  2332                           ;LCD.c: 55:     PORTEbits.RE1 = 1;
  2333  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2334  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2335  052E  1489               	bsf	9,1	;volatile
  2336  052F                     l1206:
  2337                           
  2338                           ;LCD.c: 56:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2339  052F  30C7               	movlw	199
  2340  0530  00F7               	movwf	??_Char_LCD
  2341  0531                     u1237:
  2342  0531  2D32               	nop2
  2343  0532  0BF7               	decfsz	??_Char_LCD,f
  2344  0533  2D31               	goto	u1237
  2345  0534  2D35               	nop2
  2346  0535  2D36               	nop2
  2347  0536                     l1208:
  2348                           
  2349                           ;LCD.c: 57:     PORTEbits.RE1 = 0;
  2350  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0538  1089               	bcf	9,1	;volatile
  2353  0539                     l218:
  2354  0539  0008               	return
  2355  053A                     __end_of_Char_LCD:
  2356                           
  2357                           	psect	text11
  2358  04AF                     __ptext11:	
  2359 ;; *************** function ___wmul *****************
  2360 ;; Defined at:
  2361 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2364 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  product         2    6[COMMON] unsigned int 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  2    0[BANK0 ] unsigned int 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2376 ;;      Params:         0       4       0       0       0
  2377 ;;      Locals:         2       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0
  2379 ;;      Totals:         2       4       0       0       0
  2380 ;;Total ram usage:        6 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 2
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_Transmisor_USART
  2387 ;;		_Print_Num
  2388 ;;		_Print_Cont
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function ___wmul
  2394  04AF                     ___wmul:
  2395  04AF                     l1308:	
  2396                           ;incstack = 0
  2397                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2398                           
  2399  04AF  01F6               	clrf	___wmul@product
  2400  04B0  01F7               	clrf	___wmul@product+1
  2401  04B1                     l1310:
  2402  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2403  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2404  04B3  1C20               	btfss	___wmul@multiplier,0
  2405  04B4  2CB6               	goto	u951
  2406  04B5  2CB7               	goto	u950
  2407  04B6                     u951:
  2408  04B6  2CBD               	goto	l338
  2409  04B7                     u950:
  2410  04B7                     l1312:
  2411  04B7  0822               	movf	___wmul@multiplicand,w
  2412  04B8  07F6               	addwf	___wmul@product,f
  2413  04B9  1803               	skipnc
  2414  04BA  0AF7               	incf	___wmul@product+1,f
  2415  04BB  0823               	movf	___wmul@multiplicand+1,w
  2416  04BC  07F7               	addwf	___wmul@product+1,f
  2417  04BD                     l338:
  2418  04BD  3001               	movlw	1
  2419  04BE                     u965:
  2420  04BE  1003               	clrc
  2421  04BF  0DA2               	rlf	___wmul@multiplicand,f
  2422  04C0  0DA3               	rlf	___wmul@multiplicand+1,f
  2423  04C1  3EFF               	addlw	-1
  2424  04C2  1D03               	skipz
  2425  04C3  2CBE               	goto	u965
  2426  04C4                     l1314:
  2427  04C4  3001               	movlw	1
  2428  04C5                     u975:
  2429  04C5  1003               	clrc
  2430  04C6  0CA1               	rrf	___wmul@multiplier+1,f
  2431  04C7  0CA0               	rrf	___wmul@multiplier,f
  2432  04C8  3EFF               	addlw	-1
  2433  04C9  1D03               	skipz
  2434  04CA  2CC5               	goto	u975
  2435  04CB                     l1316:
  2436  04CB  0820               	movf	___wmul@multiplier,w
  2437  04CC  0421               	iorwf	___wmul@multiplier+1,w
  2438  04CD  1D03               	btfss	3,2
  2439  04CE  2CD0               	goto	u981
  2440  04CF  2CD1               	goto	u980
  2441  04D0                     u981:
  2442  04D0  2CB1               	goto	l1310
  2443  04D1                     u980:
  2444  04D1                     l1318:
  2445  04D1  0877               	movf	___wmul@product+1,w
  2446  04D2  00A1               	movwf	?___wmul+1
  2447  04D3  0876               	movf	___wmul@product,w
  2448  04D4  00A0               	movwf	?___wmul
  2449  04D5                     l340:
  2450  04D5  0008               	return
  2451  04D6                     __end_of___wmul:
  2452                           
  2453                           	psect	text12
  2454  0243                     __ptext12:	
  2455 ;; *************** function ___awdiv *****************
  2456 ;; Defined at:
  2457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  divisor         2    0[BANK0 ] int 
  2460 ;;  dividend        2    2[BANK0 ] int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  quotient        2    6[BANK0 ] int 
  2463 ;;  sign            1    5[BANK0 ] unsigned char 
  2464 ;;  counter         1    4[BANK0 ] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2    0[BANK0 ] int 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       4       0       0       0
  2475 ;;      Locals:         0       4       0       0       0
  2476 ;;      Temps:          1       0       0       0       0
  2477 ;;      Totals:         1       8       0       0       0
  2478 ;;Total ram usage:        9 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 2
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_Transmisor_USART
  2485 ;;		_Print_Num
  2486 ;;		_Print_Cont
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function ___awdiv
  2492  0243                     ___awdiv:
  2493  0243                     l1322:	
  2494                           ;incstack = 0
  2495                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2496                           
  2497  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0245  01A5               	clrf	___awdiv@sign
  2500  0246                     l1324:
  2501  0246  1FA1               	btfss	___awdiv@divisor+1,7
  2502  0247  2A49               	goto	u991
  2503  0248  2A4A               	goto	u990
  2504  0249                     u991:
  2505  0249  2A51               	goto	l1330
  2506  024A                     u990:
  2507  024A                     l1326:
  2508  024A  09A0               	comf	___awdiv@divisor,f
  2509  024B  09A1               	comf	___awdiv@divisor+1,f
  2510  024C  0AA0               	incf	___awdiv@divisor,f
  2511  024D  1903               	skipnz
  2512  024E  0AA1               	incf	___awdiv@divisor+1,f
  2513  024F                     l1328:
  2514  024F  01A5               	clrf	___awdiv@sign
  2515  0250  0AA5               	incf	___awdiv@sign,f
  2516  0251                     l1330:
  2517  0251  1FA3               	btfss	___awdiv@dividend+1,7
  2518  0252  2A54               	goto	u1001
  2519  0253  2A55               	goto	u1000
  2520  0254                     u1001:
  2521  0254  2A5E               	goto	l1336
  2522  0255                     u1000:
  2523  0255                     l1332:
  2524  0255  09A2               	comf	___awdiv@dividend,f
  2525  0256  09A3               	comf	___awdiv@dividend+1,f
  2526  0257  0AA2               	incf	___awdiv@dividend,f
  2527  0258  1903               	skipnz
  2528  0259  0AA3               	incf	___awdiv@dividend+1,f
  2529  025A                     l1334:
  2530  025A  3001               	movlw	1
  2531  025B  00F6               	movwf	??___awdiv
  2532  025C  0876               	movf	??___awdiv,w
  2533  025D  06A5               	xorwf	___awdiv@sign,f
  2534  025E                     l1336:
  2535  025E  01A6               	clrf	___awdiv@quotient
  2536  025F  01A7               	clrf	___awdiv@quotient+1
  2537  0260                     l1338:
  2538  0260  0820               	movf	___awdiv@divisor,w
  2539  0261  0421               	iorwf	___awdiv@divisor+1,w
  2540  0262  1903               	btfsc	3,2
  2541  0263  2A65               	goto	u1011
  2542  0264  2A66               	goto	u1010
  2543  0265                     u1011:
  2544  0265  2A9D               	goto	l1358
  2545  0266                     u1010:
  2546  0266                     l1340:
  2547  0266  01A4               	clrf	___awdiv@counter
  2548  0267  0AA4               	incf	___awdiv@counter,f
  2549  0268  2A74               	goto	l1346
  2550  0269                     l1342:
  2551  0269  3001               	movlw	1
  2552  026A                     u1025:
  2553  026A  1003               	clrc
  2554  026B  0DA0               	rlf	___awdiv@divisor,f
  2555  026C  0DA1               	rlf	___awdiv@divisor+1,f
  2556  026D  3EFF               	addlw	-1
  2557  026E  1D03               	skipz
  2558  026F  2A6A               	goto	u1025
  2559  0270                     l1344:
  2560  0270  3001               	movlw	1
  2561  0271  00F6               	movwf	??___awdiv
  2562  0272  0876               	movf	??___awdiv,w
  2563  0273  07A4               	addwf	___awdiv@counter,f
  2564  0274                     l1346:
  2565  0274  1FA1               	btfss	___awdiv@divisor+1,7
  2566  0275  2A77               	goto	u1031
  2567  0276  2A78               	goto	u1030
  2568  0277                     u1031:
  2569  0277  2A69               	goto	l1342
  2570  0278                     u1030:
  2571  0278                     l1348:
  2572  0278  3001               	movlw	1
  2573  0279                     u1045:
  2574  0279  1003               	clrc
  2575  027A  0DA6               	rlf	___awdiv@quotient,f
  2576  027B  0DA7               	rlf	___awdiv@quotient+1,f
  2577  027C  3EFF               	addlw	-1
  2578  027D  1D03               	skipz
  2579  027E  2A79               	goto	u1045
  2580  027F  0821               	movf	___awdiv@divisor+1,w
  2581  0280  0223               	subwf	___awdiv@dividend+1,w
  2582  0281  1D03               	skipz
  2583  0282  2A85               	goto	u1055
  2584  0283  0820               	movf	___awdiv@divisor,w
  2585  0284  0222               	subwf	___awdiv@dividend,w
  2586  0285                     u1055:
  2587  0285  1C03               	skipc
  2588  0286  2A88               	goto	u1051
  2589  0287  2A89               	goto	u1050
  2590  0288                     u1051:
  2591  0288  2A90               	goto	l1354
  2592  0289                     u1050:
  2593  0289                     l1350:
  2594  0289  0820               	movf	___awdiv@divisor,w
  2595  028A  02A2               	subwf	___awdiv@dividend,f
  2596  028B  0821               	movf	___awdiv@divisor+1,w
  2597  028C  1C03               	skipc
  2598  028D  03A3               	decf	___awdiv@dividend+1,f
  2599  028E  02A3               	subwf	___awdiv@dividend+1,f
  2600  028F                     l1352:
  2601  028F  1426               	bsf	___awdiv@quotient,0
  2602  0290                     l1354:
  2603  0290  3001               	movlw	1
  2604  0291                     u1065:
  2605  0291  1003               	clrc
  2606  0292  0CA1               	rrf	___awdiv@divisor+1,f
  2607  0293  0CA0               	rrf	___awdiv@divisor,f
  2608  0294  3EFF               	addlw	-1
  2609  0295  1D03               	skipz
  2610  0296  2A91               	goto	u1065
  2611  0297                     l1356:
  2612  0297  3001               	movlw	1
  2613  0298  02A4               	subwf	___awdiv@counter,f
  2614  0299  1D03               	btfss	3,2
  2615  029A  2A9C               	goto	u1071
  2616  029B  2A9D               	goto	u1070
  2617  029C                     u1071:
  2618  029C  2A78               	goto	l1348
  2619  029D                     u1070:
  2620  029D                     l1358:
  2621  029D  0825               	movf	___awdiv@sign,w
  2622  029E  1903               	btfsc	3,2
  2623  029F  2AA1               	goto	u1081
  2624  02A0  2AA2               	goto	u1080
  2625  02A1                     u1081:
  2626  02A1  2AA7               	goto	l1362
  2627  02A2                     u1080:
  2628  02A2                     l1360:
  2629  02A2  09A6               	comf	___awdiv@quotient,f
  2630  02A3  09A7               	comf	___awdiv@quotient+1,f
  2631  02A4  0AA6               	incf	___awdiv@quotient,f
  2632  02A5  1903               	skipnz
  2633  02A6  0AA7               	incf	___awdiv@quotient+1,f
  2634  02A7                     l1362:
  2635  02A7  0827               	movf	___awdiv@quotient+1,w
  2636  02A8  00A1               	movwf	?___awdiv+1
  2637  02A9  0826               	movf	___awdiv@quotient,w
  2638  02AA  00A0               	movwf	?___awdiv
  2639  02AB                     l491:
  2640  02AB  0008               	return
  2641  02AC                     __end_of___awdiv:
  2642                           
  2643                           	psect	text13
  2644  04FC                     __ptext13:	
  2645 ;; *************** function _Lcd_Set_Cursor *****************
  2646 ;; Defined at:
  2647 ;;		line 37 in file "LCD.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  a               1    wreg     unsigned char 
  2650 ;;  b               1    1[BANK0 ] unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  a               1    3[BANK0 ] unsigned char 
  2653 ;;  temp            1    4[BANK0 ] unsigned char 
  2654 ;;  y               1    0        unsigned char 
  2655 ;;  z               1    0        unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2665 ;;      Params:         0       1       0       0       0
  2666 ;;      Locals:         0       2       0       0       0
  2667 ;;      Temps:          0       1       0       0       0
  2668 ;;      Totals:         0       4       0       0       0
  2669 ;;Total ram usage:        4 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 4
  2672 ;; This function calls:
  2673 ;;		_CMD_LCD
  2674 ;; This function is called by:
  2675 ;;		_LCD
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _Lcd_Set_Cursor
  2681  04FC                     _Lcd_Set_Cursor:
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2685                           ;Lcd_Set_Cursor@a stored from wreg
  2686  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2687  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2688  04FE  00A3               	movwf	Lcd_Set_Cursor@a
  2689  04FF                     l1398:
  2690                           
  2691                           ;LCD.c: 38:     char temp, z, y;;LCD.c: 39:     if (a == 1) {
  2692  04FF  0323               	decf	Lcd_Set_Cursor@a,w
  2693  0500  1D03               	btfss	3,2
  2694  0501  2D03               	goto	u1101
  2695  0502  2D04               	goto	u1100
  2696  0503                     u1101:
  2697  0503  2D10               	goto	l1404
  2698  0504                     u1100:
  2699  0504                     l1400:
  2700                           
  2701                           ;LCD.c: 40:         temp = 0x80 + b - 1;
  2702  0504  0821               	movf	Lcd_Set_Cursor@b,w
  2703  0505  3E7F               	addlw	127
  2704  0506  00A2               	movwf	??_Lcd_Set_Cursor
  2705  0507  0822               	movf	??_Lcd_Set_Cursor,w
  2706  0508  00A4               	movwf	Lcd_Set_Cursor@temp
  2707  0509                     l1402:
  2708                           
  2709                           ;LCD.c: 41:         CMD_LCD(temp);
  2710  0509  0824               	movf	Lcd_Set_Cursor@temp,w
  2711  050A  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  2712                           
  2713                           ;LCD.c: 42:     } else if (a == 2) {
  2714  050F  2D21               	goto	l212
  2715  0510                     l1404:
  2716  0510  3002               	movlw	2
  2717  0511  0623               	xorwf	Lcd_Set_Cursor@a,w
  2718  0512  1D03               	btfss	3,2
  2719  0513  2D15               	goto	u1111
  2720  0514  2D16               	goto	u1110
  2721  0515                     u1111:
  2722  0515  2D21               	goto	l212
  2723  0516                     u1110:
  2724  0516                     l1406:
  2725                           
  2726                           ;LCD.c: 43:         temp = 0xC0 + b - 1;
  2727  0516  0821               	movf	Lcd_Set_Cursor@b,w
  2728  0517  3EBF               	addlw	191
  2729  0518  00A2               	movwf	??_Lcd_Set_Cursor
  2730  0519  0822               	movf	??_Lcd_Set_Cursor,w
  2731  051A  00A4               	movwf	Lcd_Set_Cursor@temp
  2732  051B                     l1408:
  2733                           
  2734                           ;LCD.c: 44:         CMD_LCD(temp);
  2735  051B  0824               	movf	Lcd_Set_Cursor@temp,w
  2736  051C  120A  118A  253A  120A  118A  	fcall	_CMD_LCD
  2737  0521                     l212:
  2738  0521  0008               	return
  2739  0522                     __end_of_Lcd_Set_Cursor:
  2740                           
  2741                           	psect	text14
  2742  053A                     __ptext14:	
  2743 ;; *************** function _CMD_LCD *****************
  2744 ;; Defined at:
  2745 ;;		line 30 in file "LCD.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  v               1    wreg     unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  v               1    0[BANK0 ] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         0       1       0       0       0
  2761 ;;      Temps:          1       0       0       0       0
  2762 ;;      Totals:         1       1       0       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 3
  2766 ;; This function calls:
  2767 ;;		_PORT_LCD
  2768 ;; This function is called by:
  2769 ;;		_LCD_Init_8bits
  2770 ;;		_Lcd_Set_Cursor
  2771 ;;		_Clear_LCD
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _CMD_LCD
  2777  053A                     _CMD_LCD:
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in _CMD_LCD: [wreg+status,2+status,0+pclath+cstack]
  2781                           ;CMD_LCD@v stored from wreg
  2782  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2783  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2784  053C  00A0               	movwf	CMD_LCD@v
  2785  053D                     l1258:
  2786                           
  2787                           ;LCD.c: 31:     PORTEbits.RE0 = 0;
  2788  053D  1009               	bcf	9,0	;volatile
  2789  053E                     l1260:
  2790                           
  2791                           ;LCD.c: 32:     PORT_LCD(v);
  2792  053E  0820               	movf	CMD_LCD@v,w
  2793  053F  120A  118A  22AC  120A  118A  	fcall	_PORT_LCD
  2794  0544                     l1262:
  2795                           
  2796                           ;LCD.c: 33:     PORTEbits.RE1 = 1;
  2797  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0546  1489               	bsf	9,1	;volatile
  2800  0547                     l1264:
  2801                           
  2802                           ;LCD.c: 34:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2803  0547  30C7               	movlw	199
  2804  0548  00F7               	movwf	??_CMD_LCD
  2805  0549                     u1247:
  2806  0549  2D4A               	nop2
  2807  054A  0BF7               	decfsz	??_CMD_LCD,f
  2808  054B  2D49               	goto	u1247
  2809  054C  2D4D               	nop2
  2810  054D  2D4E               	nop2
  2811  054E                     l1266:
  2812                           
  2813                           ;LCD.c: 35:     PORTEbits.RE1 = 0;
  2814  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2815  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0550  1089               	bcf	9,1	;volatile
  2817  0551                     l206:
  2818  0551  0008               	return
  2819  0552                     __end_of_CMD_LCD:
  2820                           
  2821                           	psect	text15
  2822  02AC                     __ptext15:	
  2823 ;; *************** function _PORT_LCD *****************
  2824 ;; Defined at:
  2825 ;;		line 20 in file "LCD.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  v               1    wreg     unsigned char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  v               1    6[COMMON] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0
  2842 ;;      Totals:         1       0       0       0       0
  2843 ;;Total ram usage:        1 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 2
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_LCD_Init_8bits
  2850 ;;		_CMD_LCD
  2851 ;;		_Char_LCD
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _PORT_LCD
  2857  02AC                     _PORT_LCD:
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _PORT_LCD: [wreg]
  2861                           ;PORT_LCD@v stored from wreg
  2862  02AC  00F6               	movwf	PORT_LCD@v
  2863  02AD                     l1198:
  2864                           
  2865                           ;LCD.c: 21:     PORTAbits.RA0 = v & 1 ? 1 : 0;
  2866  02AD  1876               	btfsc	PORT_LCD@v,0
  2867  02AE  2AB0               	goto	u581
  2868  02AF  2AB4               	goto	u580
  2869  02B0                     u581:
  2870  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2871  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2872  02B2  1405               	bsf	5,0	;volatile
  2873  02B3  2AB7               	goto	u594
  2874  02B4                     u580:
  2875  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2876  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2877  02B6  1005               	bcf	5,0	;volatile
  2878  02B7                     u594:
  2879                           
  2880                           ;LCD.c: 22:     PORTAbits.RA1 = v & 2 ? 1 : 0;
  2881  02B7  18F6               	btfsc	PORT_LCD@v,1
  2882  02B8  2ABA               	goto	u601
  2883  02B9  2ABE               	goto	u600
  2884  02BA                     u601:
  2885  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2886  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2887  02BC  1485               	bsf	5,1	;volatile
  2888  02BD  2AC1               	goto	u614
  2889  02BE                     u600:
  2890  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2891  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2892  02C0  1085               	bcf	5,1	;volatile
  2893  02C1                     u614:
  2894                           
  2895                           ;LCD.c: 23:     PORTAbits.RA2 = v & 4 ? 1 : 0;
  2896  02C1  1976               	btfsc	PORT_LCD@v,2
  2897  02C2  2AC4               	goto	u621
  2898  02C3  2AC8               	goto	u620
  2899  02C4                     u621:
  2900  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2901  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2902  02C6  1505               	bsf	5,2	;volatile
  2903  02C7  2ACB               	goto	u634
  2904  02C8                     u620:
  2905  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2906  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2907  02CA  1105               	bcf	5,2	;volatile
  2908  02CB                     u634:
  2909                           
  2910                           ;LCD.c: 24:     PORTAbits.RA3 = v & 8 ? 1 : 0;
  2911  02CB  19F6               	btfsc	PORT_LCD@v,3
  2912  02CC  2ACE               	goto	u641
  2913  02CD  2AD2               	goto	u640
  2914  02CE                     u641:
  2915  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2916  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2917  02D0  1585               	bsf	5,3	;volatile
  2918  02D1  2AD5               	goto	u654
  2919  02D2                     u640:
  2920  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2921  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2922  02D4  1185               	bcf	5,3	;volatile
  2923  02D5                     u654:
  2924                           
  2925                           ;LCD.c: 25:     PORTAbits.RA4 = v & 16 ? 1 : 0;
  2926  02D5  1A76               	btfsc	PORT_LCD@v,4
  2927  02D6  2AD8               	goto	u661
  2928  02D7  2ADC               	goto	u660
  2929  02D8                     u661:
  2930  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2931  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2932  02DA  1605               	bsf	5,4	;volatile
  2933  02DB  2ADF               	goto	u674
  2934  02DC                     u660:
  2935  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2936  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2937  02DE  1205               	bcf	5,4	;volatile
  2938  02DF                     u674:
  2939                           
  2940                           ;LCD.c: 26:     PORTAbits.RA5 = v & 32 ? 1 : 0;
  2941  02DF  1AF6               	btfsc	PORT_LCD@v,5
  2942  02E0  2AE2               	goto	u681
  2943  02E1  2AE6               	goto	u680
  2944  02E2                     u681:
  2945  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2946  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2947  02E4  1685               	bsf	5,5	;volatile
  2948  02E5  2AE9               	goto	u694
  2949  02E6                     u680:
  2950  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2951  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2952  02E8  1285               	bcf	5,5	;volatile
  2953  02E9                     u694:
  2954                           
  2955                           ;LCD.c: 27:     PORTAbits.RA6 = v & 64 ? 1 : 0;
  2956  02E9  1B76               	btfsc	PORT_LCD@v,6
  2957  02EA  2AEC               	goto	u701
  2958  02EB  2AF0               	goto	u700
  2959  02EC                     u701:
  2960  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2961  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2962  02EE  1705               	bsf	5,6	;volatile
  2963  02EF  2AF3               	goto	u714
  2964  02F0                     u700:
  2965  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2966  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2967  02F2  1305               	bcf	5,6	;volatile
  2968  02F3                     u714:
  2969                           
  2970                           ;LCD.c: 28:     PORTAbits.RA7 = v & 128 ? 1 : 0;
  2971  02F3  1BF6               	btfsc	PORT_LCD@v,7
  2972  02F4  2AF6               	goto	u721
  2973  02F5  2AFA               	goto	u720
  2974  02F6                     u721:
  2975  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2976  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2977  02F8  1785               	bsf	5,7	;volatile
  2978  02F9  2AFD               	goto	u734
  2979  02FA                     u720:
  2980  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2981  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2982  02FC  1385               	bcf	5,7	;volatile
  2983  02FD                     u734:
  2984  02FD                     l203:
  2985  02FD  0008               	return
  2986  02FE                     __end_of_PORT_LCD:
  2987                           
  2988                           	psect	text16
  2989  0594                     __ptext16:	
  2990 ;; *************** function _Config_USART *****************
  2991 ;; Defined at:
  2992 ;;		line 41 in file "Libreria.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0
  3009 ;;      Totals:         0       0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; Hardware stack levels required when called: 2
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _Config_USART
  3022  0594                     _Config_USART:
  3023  0594                     l1454:	
  3024                           ;incstack = 0
  3025                           ; Regs used in _Config_USART: [wreg]
  3026                           
  3027                           
  3028                           ;Libreria.c: 43:     TXEN = 1;
  3029  0594  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0595  1303               	bcf	3,6	;RP1=0, select bank1
  3031  0596  1698               	bsf	24,5	;volatile
  3032                           
  3033                           ;Libreria.c: 44:     SYNC = 0;
  3034  0597  1218               	bcf	24,4	;volatile
  3035                           
  3036                           ;Libreria.c: 45:     SPEN = 1;
  3037  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0599  1303               	bcf	3,6	;RP1=0, select bank0
  3039  059A  1798               	bsf	24,7	;volatile
  3040                           
  3041                           ;Libreria.c: 48:     CREN = 1;
  3042  059B  1618               	bsf	24,4	;volatile
  3043                           
  3044                           ;Libreria.c: 49:     PIE1bits.RCIE = 1;
  3045  059C  1683               	bsf	3,5	;RP0=1, select bank1
  3046  059D  1303               	bcf	3,6	;RP1=0, select bank1
  3047  059E  168C               	bsf	12,5	;volatile
  3048                           
  3049                           ;Libreria.c: 50:     PIR1bits.RCIF = 0;
  3050  059F  1283               	bcf	3,5	;RP0=0, select bank0
  3051  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  3052  05A1  128C               	bcf	12,5	;volatile
  3053  05A2                     l1456:
  3054                           
  3055                           ;Libreria.c: 51:     SPBRG=12;
  3056  05A2  300C               	movlw	12
  3057  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3058  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3059  05A5  0099               	movwf	25	;volatile
  3060  05A6                     l142:
  3061  05A6  0008               	return
  3062  05A7                     __end_of_Config_USART:
  3063                           
  3064                           	psect	text17
  3065  05A7                     __ptext17:	
  3066 ;; *************** function _Config_TMR0 *****************
  3067 ;; Defined at:
  3068 ;;		line 14 in file "Libreria.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  valor_tmr0      1    0        unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      unsigned char 
  3075 ;; Registers used:
  3076 ;;		wreg
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 2
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _Config_TMR0
  3098  05A7                     _Config_TMR0:
  3099  05A7                     l1442:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _Config_TMR0: [wreg]
  3102                           
  3103                           
  3104                           ;Libreria.c: 17:     char valor_tmr0;;Libreria.c: 18:     PS0 = 1;
  3105  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3106  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3107  05A9  1401               	bsf	1,0	;volatile
  3108                           
  3109                           ;Libreria.c: 19:     PS1 = 1;
  3110  05AA  1481               	bsf	1,1	;volatile
  3111                           
  3112                           ;Libreria.c: 20:     PS2 = 1;
  3113  05AB  1501               	bsf	1,2	;volatile
  3114                           
  3115                           ;Libreria.c: 21:     T0CS = 0;
  3116  05AC  1281               	bcf	1,5	;volatile
  3117                           
  3118                           ;Libreria.c: 22:     PSA = 0;
  3119  05AD  1181               	bcf	1,3	;volatile
  3120  05AE                     l1444:
  3121                           
  3122                           ;Libreria.c: 23:     INTCON = 0b10101000;
  3123  05AE  30A8               	movlw	168
  3124  05AF  008B               	movwf	11	;volatile
  3125                           
  3126                           ;Libreria.c: 25:     TMR0 = valor_tmr0;
  3127  05B0  3064               	movlw	100
  3128  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  3129  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  3130  05B3  0081               	movwf	1	;volatile
  3131                           
  3132                           ;Libreria.c: 26:     return valor_tmr0;
  3133  05B4  3064               	movlw	100
  3134  05B5                     l136:
  3135  05B5  0008               	return
  3136  05B6                     __end_of_Config_TMR0:
  3137                           
  3138                           	psect	text18
  3139  056A                     __ptext18:	
  3140 ;; *************** function _Config_Puertos *****************
  3141 ;; Defined at:
  3142 ;;		line 54 in file "Libreria.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 2
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function _Config_Puertos
  3172  056A                     _Config_Puertos:
  3173  056A                     l1458:	
  3174                           ;incstack = 0
  3175                           ; Regs used in _Config_Puertos: [wreg+status,2]
  3176                           
  3177                           
  3178                           ;Libreria.c: 56:     ANSEL = 0;
  3179  056A  1683               	bsf	3,5	;RP0=1, select bank3
  3180  056B  1703               	bsf	3,6	;RP1=1, select bank3
  3181  056C  0188               	clrf	8	;volatile
  3182                           
  3183                           ;Libreria.c: 57:     ANSELH = 0;
  3184  056D  0189               	clrf	9	;volatile
  3185                           
  3186                           ;Libreria.c: 58:     TRISA = 0;
  3187  056E  1683               	bsf	3,5	;RP0=1, select bank1
  3188  056F  1303               	bcf	3,6	;RP1=0, select bank1
  3189  0570  0185               	clrf	5	;volatile
  3190  0571                     l1460:
  3191                           
  3192                           ;Libreria.c: 59:     TRISB = 0b11;
  3193  0571  3003               	movlw	3
  3194  0572  0086               	movwf	6	;volatile
  3195  0573                     l1462:
  3196                           
  3197                           ;Libreria.c: 60:     TRISC = 0b10000000;
  3198  0573  3080               	movlw	128
  3199  0574  0087               	movwf	7	;volatile
  3200                           
  3201                           ;Libreria.c: 61:     TRISD = 0;
  3202  0575  0188               	clrf	8	;volatile
  3203                           
  3204                           ;Libreria.c: 62:     TRISE = 0;
  3205  0576  0189               	clrf	9	;volatile
  3206                           
  3207                           ;Libreria.c: 65:     PORTA = 0;
  3208  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0579  0185               	clrf	5	;volatile
  3211                           
  3212                           ;Libreria.c: 66:     PORTB = 0;
  3213  057A  0186               	clrf	6	;volatile
  3214                           
  3215                           ;Libreria.c: 67:     PORTC = 0;
  3216  057B  0187               	clrf	7	;volatile
  3217                           
  3218                           ;Libreria.c: 68:     PORTD = 0;
  3219  057C  0188               	clrf	8	;volatile
  3220                           
  3221                           ;Libreria.c: 69:     PORTE = 0;
  3222  057D  0189               	clrf	9	;volatile
  3223  057E                     l145:
  3224  057E  0008               	return
  3225  057F                     __end_of_Config_Puertos:
  3226                           
  3227                           	psect	text19
  3228  05B6                     __ptext19:	
  3229 ;; *************** function _Config_Oscilador *****************
  3230 ;; Defined at:
  3231 ;;		line 7 in file "Libreria.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3245 ;;      Params:         0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 2
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           
  3260                           ;psect for function _Config_Oscilador
  3261  05B6                     _Config_Oscilador:
  3262  05B6                     l1438:	
  3263                           ;incstack = 0
  3264                           ; Regs used in _Config_Oscilador: [wreg]
  3265                           
  3266                           
  3267                           ;Libreria.c: 9:     IRCF0 = 1;
  3268  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3269  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  3270  05B8  160F               	bsf	15,4	;volatile
  3271                           
  3272                           ;Libreria.c: 10:     IRCF1 = 1;
  3273  05B9  168F               	bsf	15,5	;volatile
  3274                           
  3275                           ;Libreria.c: 11:     IRCF2 = 1;
  3276  05BA  170F               	bsf	15,6	;volatile
  3277  05BB                     l1440:
  3278                           
  3279                           ;Libreria.c: 12:     INTCON = 0b11101000;
  3280  05BB  30E8               	movlw	232
  3281  05BC  008B               	movwf	11	;volatile
  3282  05BD                     l133:
  3283  05BD  0008               	return
  3284  05BE                     __end_of_Config_Oscilador:
  3285                           
  3286                           	psect	text20
  3287  0552                     __ptext20:	
  3288 ;; *************** function _Config_ADC *****************
  3289 ;; Defined at:
  3290 ;;		line 29 in file "Libreria.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0
  3306 ;;      Temps:          1       0       0       0       0
  3307 ;;      Totals:         1       0       0       0       0
  3308 ;;Total ram usage:        1 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 2
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function _Config_ADC
  3320  0552                     _Config_ADC:
  3321  0552                     l1448:	
  3322                           ;incstack = 0
  3323                           ; Regs used in _Config_ADC: [wreg]
  3324                           
  3325                           
  3326                           ;Libreria.c: 30:     PIE1bits.ADIE = 1;
  3327  0552  1683               	bsf	3,5	;RP0=1, select bank1
  3328  0553  1303               	bcf	3,6	;RP1=0, select bank1
  3329  0554  170C               	bsf	12,6	;volatile
  3330                           
  3331                           ;Libreria.c: 31:     ADIF = 0;
  3332  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0556  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0557  130C               	bcf	12,6	;volatile
  3335                           
  3336                           ;Libreria.c: 32:     ADCON1bits.ADFM = 0;
  3337  0558  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0559  1303               	bcf	3,6	;RP1=0, select bank1
  3339  055A  139F               	bcf	31,7	;volatile
  3340                           
  3341                           ;Libreria.c: 33:     ADCON1bits.VCFG0 = 0;
  3342  055B  121F               	bcf	31,4	;volatile
  3343                           
  3344                           ;Libreria.c: 34:     ADCON1bits.VCFG0 = 0;
  3345  055C  121F               	bcf	31,4	;volatile
  3346                           
  3347                           ;Libreria.c: 35:     ADCON0bits.ADCS0 = 0;
  3348  055D  1283               	bcf	3,5	;RP0=0, select bank0
  3349  055E  1303               	bcf	3,6	;RP1=0, select bank0
  3350  055F  131F               	bcf	31,6	;volatile
  3351                           
  3352                           ;Libreria.c: 36:     ADCON0bits.ADCS1 = 1;
  3353  0560  179F               	bsf	31,7	;volatile
  3354                           
  3355                           ;Libreria.c: 37:     ADCON0bits.ADON = 1;
  3356  0561  141F               	bsf	31,0	;volatile
  3357  0562                     l1450:
  3358                           
  3359                           ;Libreria.c: 38:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  3360  0562  3021               	movlw	33
  3361  0563  00F6               	movwf	??_Config_ADC
  3362  0564                     u1257:
  3363  0564  0BF6               	decfsz	??_Config_ADC,f
  3364  0565  2D64               	goto	u1257
  3365  0566                     l1452:
  3366                           
  3367                           ;Libreria.c: 39:     ADCON0bits.GO = 1;
  3368  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0567  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0568  149F               	bsf	31,1	;volatile
  3371  0569                     l139:
  3372  0569  0008               	return
  3373  056A                     __end_of_Config_ADC:
  3374                           
  3375                           	psect	text21
  3376  03E5                     __ptext21:	
  3377 ;; *************** function _isr *****************
  3378 ;; Defined at:
  3379 ;;		line 59 in file "Lab_02.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0, pclath, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0
  3395 ;;      Temps:          4       0       0       0       0
  3396 ;;      Totals:         4       0       0       0       0
  3397 ;;Total ram usage:        4 bytes
  3398 ;; Hardware stack levels used: 1
  3399 ;; Hardware stack levels required when called: 1
  3400 ;; This function calls:
  3401 ;;		_Valor_ADC
  3402 ;; This function is called by:
  3403 ;;		Interrupt level 1
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _isr
  3409  03E5                     _isr:
  3410  03E5                     i1l1496:
  3411  03E5  1D0B               	btfss	11,2	;volatile
  3412  03E6  2BE8               	goto	u112_21
  3413  03E7  2BE9               	goto	u112_20
  3414  03E8                     u112_21:
  3415  03E8  2BEE               	goto	i1l1502
  3416  03E9                     u112_20:
  3417  03E9                     i1l1498:
  3418  03E9  110B               	bcf	11,2	;volatile
  3419  03EA                     i1l1500:
  3420  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3421  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3422  03EC  083B               	movf	_Valor_TMR0,w
  3423  03ED  0081               	movwf	1	;volatile
  3424  03EE                     i1l1502:
  3425  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3426  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3427  03F0  1F0C               	btfss	12,6	;volatile
  3428  03F1  2BF3               	goto	u113_21
  3429  03F2  2BF4               	goto	u113_20
  3430  03F3                     u113_21:
  3431  03F3  2C14               	goto	i1l1512
  3432  03F4                     u113_20:
  3433  03F4                     i1l1504:
  3434  03F4  130C               	bcf	12,6	;volatile
  3435  03F5                     i1l1506:
  3436  03F5  300C               	movlw	12
  3437  03F6  120A  118A  257F  120A  118A  	fcall	_Valor_ADC
  3438  03FB  00F2               	movwf	??_isr
  3439  03FC  0872               	movf	??_isr,w
  3440  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  3441  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  3442  03FF  00B9               	movwf	_Valor_Canal_12
  3443  0400                     i1l1508:
  3444  0400  301A               	movlw	26
  3445  0401  00F3               	movwf	??_isr+1
  3446  0402  30F8               	movlw	248
  3447  0403  00F2               	movwf	??_isr
  3448  0404                     u126_27:
  3449  0404  0BF2               	decfsz	??_isr,f
  3450  0405  2C04               	goto	u126_27
  3451  0406  0BF3               	decfsz	??_isr+1,f
  3452  0407  2C04               	goto	u126_27
  3453  0408  0000               	nop
  3454  0409                     i1l1510:
  3455  0409  300A               	movlw	10
  3456  040A  120A  118A  257F  120A  118A  	fcall	_Valor_ADC
  3457  040F  00F2               	movwf	??_isr
  3458  0410  0872               	movf	??_isr,w
  3459  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0413  00BA               	movwf	_Valor_Canal_10
  3462  0414                     i1l1512:
  3463  0414  1E8C               	btfss	12,5	;volatile
  3464  0415  2C17               	goto	u114_21
  3465  0416  2C18               	goto	u114_20
  3466  0417                     u114_21:
  3467  0417  2C19               	goto	i1l42
  3468  0418                     u114_20:
  3469  0418                     i1l1514:
  3470  0418  128C               	bcf	12,5	;volatile
  3471  0419                     i1l42:
  3472  0419  0875               	movf	??_isr+3,w
  3473  041A  008A               	movwf	10
  3474  041B  0E74               	swapf	??_isr+2,w
  3475  041C  0083               	movwf	3
  3476  041D  0EFE               	swapf	btemp,f
  3477  041E  0E7E               	swapf	btemp,w
  3478  041F  0009               	retfie
  3479  0420                     __end_of_isr:
  3480                           
  3481                           	psect	intentry
  3482  0004                     __pintentry:	
  3483                           ;incstack = 0
  3484                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3485                           
  3486  0004                     interrupt_function:
  3487  007E                     saved_w	set	btemp
  3488  0004  00FE               	movwf	btemp
  3489  0005  0E03               	swapf	3,w
  3490  0006  00F4               	movwf	??_isr+2
  3491  0007  080A               	movf	10,w
  3492  0008  00F5               	movwf	??_isr+3
  3493  0009  120A  118A  2BE5   	ljmp	_isr
  3494                           
  3495                           	psect	text22
  3496  057F                     __ptext22:	
  3497 ;; *************** function _Valor_ADC *****************
  3498 ;; Defined at:
  3499 ;;		line 73 in file "Libreria.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  canal           1    wreg     unsigned char 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  canal           1    1[COMMON] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      unsigned char 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         0       0       0       0       0
  3514 ;;      Locals:         1       0       0       0       0
  3515 ;;      Temps:          1       0       0       0       0
  3516 ;;      Totals:         2       0       0       0       0
  3517 ;;Total ram usage:        2 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_isr
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _Valor_ADC
  3528  057F                     _Valor_ADC:
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _Valor_ADC: [wreg+status,2+status,0]
  3532                           ;Valor_ADC@canal stored from wreg
  3533  057F  00F1               	movwf	Valor_ADC@canal
  3534  0580                     i1l1428:
  3535                           
  3536                           ;Libreria.c: 74:     ADCON0bits.CHS = canal;
  3537  0580  0871               	movf	Valor_ADC@canal,w
  3538  0581  00F0               	movwf	??_Valor_ADC
  3539  0582  0DF0               	rlf	??_Valor_ADC,f
  3540  0583  0DF0               	rlf	??_Valor_ADC,f
  3541  0584  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0585  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0586  081F               	movf	31,w	;volatile
  3544  0587  0670               	xorwf	??_Valor_ADC,w
  3545  0588  39C3               	andlw	-61
  3546  0589  0670               	xorwf	??_Valor_ADC,w
  3547  058A  009F               	movwf	31	;volatile
  3548  058B                     i1l1430:
  3549                           
  3550                           ;Libreria.c: 75:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  3551  058B  3021               	movlw	33
  3552  058C  00F0               	movwf	??_Valor_ADC
  3553  058D                     u127_27:
  3554  058D  0BF0               	decfsz	??_Valor_ADC,f
  3555  058E  2D8D               	goto	u127_27
  3556  058F                     i1l1432:
  3557                           
  3558                           ;Libreria.c: 76:     ADCON0bits.GO = 1;
  3559  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0591  149F               	bsf	31,1	;volatile
  3562  0592                     i1l1434:
  3563                           
  3564                           ;Libreria.c: 77:     return ADRESH;
  3565  0592  081E               	movf	30,w	;volatile
  3566  0593                     i1l148:
  3567  0593  0008               	return
  3568  0594                     __end_of_Valor_ADC:
  3569  007E                     btemp	set	126	;btemp
  3570  007E                     wtemp0	set	126
  3571                           
  3572                           	psect	config
  3573                           
  3574                           ;Config register CONFIG1 @ 0x2007
  3575                           ;	Oscillator Selection bits
  3576                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3577                           ;	Watchdog Timer Enable bit
  3578                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3579                           ;	Power-up Timer Enable bit
  3580                           ;	PWRTE = OFF, PWRT disabled
  3581                           ;	RE3/MCLR pin function select bit
  3582                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3583                           ;	Code Protection bit
  3584                           ;	CP = OFF, Program memory code protection is disabled
  3585                           ;	Data Code Protection bit
  3586                           ;	CPD = OFF, Data memory code protection is disabled
  3587                           ;	Brown Out Reset Selection bits
  3588                           ;	BOREN = OFF, BOR disabled
  3589                           ;	Internal External Switchover bit
  3590                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3591                           ;	Fail-Safe Clock Monitor Enabled bit
  3592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3593                           ;	Low Voltage Programming Enable bit
  3594                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3595                           ;	In-Circuit Debugger Mode bit
  3596                           ;	DEBUG = 0x1, unprogrammed default
  3597  2007                     	org	8199
  3598  2007  20D4               	dw	8404
  3599                           
  3600                           ;Config register CONFIG2 @ 0x2008
  3601                           ;	Brown-out Reset Selection bit
  3602                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3603                           ;	Flash Program Memory Self Write Enable bits
  3604                           ;	WRT = OFF, Write protection off
  3605  2008                     	org	8200
  3606  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     25      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_LCD@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), 

    Texto_USART@texto	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _USART->_Texto_USART
    _Transmisor_USART->___wmul
    _Transmisor_USART->_tabla_USART
    _LCD_Init_8bits->_CMD_LCD
    _Print_Num->___wmul
    _Write_LCD->_Char_LCD
    _Char_LCD->_PORT_LCD
    _Lcd_Set_Cursor->_CMD_LCD
    _CMD_LCD->_PORT_LCD

Critical Paths under _isr in COMMON

    _isr->_Valor_ADC

Critical Paths under _main in BANK0

    _main->_LCD
    _USART->_Transmisor_USART
    _Transmisor_USART->___awdiv
    _LCD_Init_8bits->_CMD_LCD
    _LCD->_Print_Num
    _Print_Num->___awdiv
    _tabla_num->_Write_LCD
    _Write_LCD->_Char_LCD
    _Lcd_Set_Cursor->_CMD_LCD

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9641
                                             22 BANK0      3     3      0
                         _Config_ADC
                   _Config_Oscilador
                     _Config_Puertos
                        _Config_TMR0
                       _Config_USART
                                _LCD
                     _LCD_Init_8bits
                              _USART
 ---------------------------------------------------------------------------------
 (1) _USART                                                2     1      1    3198
                                             19 BANK0      2     1      1
                        _Texto_USART
                   _Transmisor_USART
 ---------------------------------------------------------------------------------
 (2) _Transmisor_USART                                    11    11      0    2889
                                              8 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                        _tabla_USART
 ---------------------------------------------------------------------------------
 (3) _tabla_USART                                          2     0      2     448
                                              6 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Texto_USART                                          4     4      0     189
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_8bits                                       2     2      0     374
                                              1 BANK0      2     2      0
                            _CMD_LCD
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  3     2      1    6024
                                             19 BANK0      3     2      1
                     _Lcd_Set_Cursor
                          _Print_Num
                          _Write_LCD
 ---------------------------------------------------------------------------------
 (2) _Print_Num                                           11    11      0    4551
                                              8 BANK0     11    11      0
                          _Write_LCD
                            ___awdiv
                             ___wmul
                          _tabla_num
 ---------------------------------------------------------------------------------
 (3) _tabla_num                                            2     0      2    1393
                                              4 BANK0      2     0      2
                          _Write_LCD
 ---------------------------------------------------------------------------------
 (2) _Write_LCD                                            3     3      0     717
                                              1 BANK0      3     3      0
                           _Char_LCD
 ---------------------------------------------------------------------------------
 (3) _Char_LCD                                             2     2      0     198
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1004
                                              6 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1212
                                              6 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     636
                                              1 BANK0      4     3      1
                            _CMD_LCD
 ---------------------------------------------------------------------------------
 (2) _CMD_LCD                                              2     2      0     198
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (2) _PORT_LCD                                             1     1      0     176
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0                                          1     1      0      45
 ---------------------------------------------------------------------------------
 (1) _Config_Puertos                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Oscilador                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_ADC                                           1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0      22
                                              2 COMMON     4     4      0
                          _Valor_ADC
 ---------------------------------------------------------------------------------
 (8) _Valor_ADC                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_ADC
   _Config_Oscilador
   _Config_Puertos
   _Config_TMR0
   _Config_USART
   _LCD
     _Lcd_Set_Cursor
       _CMD_LCD
         _PORT_LCD
     _Print_Num
       _Write_LCD
         _Char_LCD
           _PORT_LCD
       ___awdiv
       ___wmul
       _tabla_num
         _Write_LCD
     _Write_LCD
   _LCD_Init_8bits
     _CMD_LCD
     _PORT_LCD
   _USART
     _Texto_USART
     _Transmisor_USART
       ___awdiv
       ___wmul
       _tabla_USART

 _isr (ROOT)
   _Valor_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 27 19:56:19 2021

                        pc 0002               ___awdiv@sign 0025                         fsr 0004  
      ___wmul@multiplicand 0022                        l200 034C                        l203 02FD  
                      l212 0521                        l133 05BD                        l142 05A6  
                      l206 0551                        l151 00B9                        l136 05B5  
                      l224 04FB                        l145 057E                        l218 0539  
                      l139 0569                        l227 01CB                        l340 04D5  
                      l252 0146                        l173 0242                        l246 0146  
                      l182 04AE                        l167 0242                        l176 0483  
                      l185 03E4                        l338 04BD                        l491 02AB  
                      _LCD 039B                        _PS0 0408                        _PS1 0409  
                      u600 02BE                        _PS2 040A                        u601 02BA  
                      u700 02F0                        u620 02C8                        u701 02EC  
                      u621 02C4                        u614 02C1                        u720 02FA  
                      u640 02D2                        u800 020E                        u721 02F6  
                      u641 02CE                        u801 020D                        u714 02F3  
                      u634 02CB                        u810 021A                        u811 0219  
                      u660 02DC                        u580 02B4                        u740 04FB  
                      u900 0108                        u820 0226                        u661 02D8  
                      u581 02B0                        u741 04FA                        u901 0107  
                      u821 0225                        u734 02FD                        u654 02D5  
                      u910 0116                        u830 0232                        u750 01D2  
                      u911 0115                        u831 0231                        u751 01D1  
                      _PSA 040B                        u680 02E6                        u920 0124  
                      u840 023D                        u760 01DE                        u681 02E2  
                      u921 0123                        u841 023C                        u761 01DD  
                      u674 02DF                        u594 02B7                        u930 0132  
                      u850 00C2                        u770 01EA                        u931 0131  
                      u851 00C1                        u771 01E9                        u940 013F  
                      u860 00D0                        u780 01F6                        u941 013E  
                      u861 00CF                        u781 01F5                        u694 02E9  
                      u950 04B7                        u870 00DE                        u790 0202  
                      u951 04B6                        u871 00DD                        u791 0201  
                      u880 00EC                        u881 00EB                        u890 00FA  
                      u891 00F9                        u980 04D1                        u981 04D0  
                      u965 04BE                        u990 024A                        u991 0249  
                      u975 04C5                        _isr 03E5                        fsr0 0004  
          __end_of_CMD_LCD 0552                       ?_LCD 0033                       l1200 0525  
                     l1202 0526                       l1210 04D9                       l1204 052C  
                     l1212 04DB                       l1300 012B                       l1220 01D2  
                     l1310 04B1                       l1206 052F                       l1214 04E8  
                     l1302 0132                       l1230 01EF                       l1222 01D7  
                     l1400 0504                       l1312 04B7                       l1208 0536  
                     l1216 04EE                       l1304 0139                       l1240 020E  
                     l1232 01F6                       l1224 01DE                       l1402 0509  
                     l1330 0251                       l1322 0243                       l1314 04C4  
                     l1306 013F                       l1410 014A                       l1250 022B  
                     l1242 0213                       l1234 01FB                       l1226 01E3  
                     l1218 01CC                       l1260 053E                       l1404 0510  
                     l1340 0266                       l1332 0255                       l1324 0246  
                     l1316 04CB                       l1308 04AF                       l1420 01A6  
                     l1412 0152                       l1252 0232                       l1244 021A  
                     l1236 0202                       l1228 01EA                       l1262 0544  
                     l1406 0516                       l1350 0289                       l1342 0269  
                     l1334 025A                       l1326 024A                       l1318 04D1  
                     l1270 00C2                       l1422 01AF                       l1414 0165  
                     l1254 0237                       l1246 021F                       l1238 0207  
                     l1440 05BB                       l1264 0547                       l1408 051B  
                     l1360 02A2                       l1352 028F                       l1344 0270  
                     l1336 025E                       l1328 024F                       l1280 00E5  
                     l1272 00C9                       l1424 01B5                       l1416 017C  
                     l1256 023D                       l1248 0226                       l1520 035C  
                     l1450 0562                       l1442 05A7                       l1266 054E  
                     l1258 053D                       l1362 02A7                       l1354 0290  
                     l1346 0274                       l1338 0260                       l1290 0108  
                     l1282 00EC                       l1274 00D0                       l1426 01C0  
                     l1418 018F                       l1370 0039                       l1530 037C  
                     l1522 0361                       l1452 0566                       l1460 0571  
                     l1444 05AE                       l1356 0297                       l1348 0278  
                     l1292 010F                       l1284 00F3                       l1276 00D7  
                     l1268 00BA                       l1380 008D                       l1372 0050  
                     l1532 0388                       l1524 0366                       l1516 034D  
                     l1438 05B6                       l1462 0573                       l1454 0594  
                     l1198 02AD                       l1358 029D                       l1294 0116  
                     l1286 00FA                       l1278 00DE                       l1470 031E  
                     l1390 0489                       l1382 0091                       l1374 0063  
                     l1366 001E                       l1526 036B                       l1518 0352  
                     l1448 0552                       l1456 05A2                       l1296 011D  
                     l1288 0101                       l1472 0324                       l1464 02FE  
                     l1392 0492                       l1384 00A4                       l1376 007A  
                     l1368 0026                       l1480 0471                       l1528 0370  
                     l1458 056A                       l1298 0124                       l1490 03BE  
                     l1466 0304                       l1394 0496                       l1386 00AF  
                     l1378 0083                       l1482 0477                       l1474 045B  
                     l1492 03CA                       l1484 039E                       l1468 030E  
                     l1396 049F                       l1388 0487                       l1476 0467  
                     l1398 04FF                       l1494 03DC                       l1486 03A6  
                     l1478 046B                       l1488 03AC                       _ADIF 0066  
                     ?_isr 0070                       STR_1 0426                       STR_2 0436  
                     STR_3 0430                       STR_4 043C                       STR_5 0441  
                     STR_6 0446                       STR_7 043F                       STR_8 043A  
                     STR_9 044A                       u1000 0255                       _T0IF 005A  
                     _CREN 00C4                       u1001 0254                       _T0CS 040D  
                     u1010 0266                       u1011 0265                       u1100 0504  
                     u1101 0503                       u1110 0516                       u1030 0278  
                     u1111 0515                       u1031 0277                       u1025 026A  
                     u1050 0289                       u1051 0288                       u1045 0279  
                     u1070 029D                       u1071 029C                       u1055 0285  
                     u1207 030A                       u1080 02A2                       u1081 02A1  
                     u1065 0291                       u1217 031A                       u1090 04AE  
                     u1227 032A                       u1091 04AD                       u1237 0531  
                     u1157 0390                       u1247 0549                       u1167 0089  
                     u1257 0564                       u1177 00A0                       u1187 00B5  
                     u1197 049A                       i1l42 0419                       _RCIF 0065  
                     _TMR0 0001                       _SPEN 00C7                       _TXEN 04C5  
                     _SYNC 04C4     __end_of_LCD_Init_8bits 034D                       _main 034D  
                     btemp 007E                       start 000C     Transmisor_USART@decena 002D  
      __end_of_Config_TMR0 05B6                      ??_LCD 0034     Transmisor_USART@unidad 002A  
                    ??_isr 0072                      ?_main 0070            __end_of___awdiv 02AC  
                    STR_10 044C                      STR_11 044E                      STR_12 0450  
                    STR_13 0452                      STR_14 0454                      STR_15 0456  
                    STR_16 0448                      _ANSEL 0188            ___awdiv@divisor 0020  
                    _IRCF0 047C                      _IRCF1 047D                      _IRCF2 047E  
               _Config_ADC 0552                      i1l148 0593            ___awdiv@counter 0024  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _USART 0458                      _TXREG 0019           __end_of_PORT_LCD 02FE  
             ?_tabla_USART 0076                      pclath 000A            ?_LCD_Init_8bits 0070  
         __end_of_Char_LCD 053A                      status 0003                      wtemp0 007E  
            USART@canal_10 0034              USART@canal_12 0033    Transmisor_USART@centena 002F  
     __end_of_Config_USART 05A7            __initialization 000F               __end_of_main 039B  
                   ??_main 0036                  ??_CMD_LCD 0077                     ?_USART 0033  
                   _ADRESH 001E           ___awdiv@dividend 0022                     _ANSELH 0189  
                   i1l1500 03EA                     i1l1430 058B                     i1l1510 0409  
                   i1l1502 03EE                     i1l1432 058F                     i1l1504 03F4  
                   i1l1512 0414                     u112_20 03E9                     u112_21 03E8  
                   i1l1434 0592                     i1l1514 0418                     i1l1506 03F5  
                   i1l1428 0580                     i1l1508 0400                     u113_20 03F4  
                   u113_21 03F3                     u114_20 0418                     i1l1496 03E5  
                   u114_21 0417                     i1l1498 03E9                     u126_27 0404  
                   u127_27 058D                     _INTCON 000B                _Config_TMR0 05A7  
           _Valor_Canal_10 003A             _Valor_Canal_12 0039                 _Valor_TMR0 003B  
                   ___wmul 04AF                  ??___awdiv 0076   __end_of_Config_Oscilador 05BE  
         ___awdiv@quotient 0026         __size_of_Valor_ADC 0015                ?_Config_ADC 0070  
       __size_of_Print_Num 0085                     saved_w 007E            Lcd_Set_Cursor@a 0023  
          Lcd_Set_Cursor@b 0021  __size_of_Transmisor_USART 009F    __end_of__initialization 0017  
       __size_of_Write_LCD 0026              ??_Texto_USART 0076              __end_of_USART 0484  
           __pcstackCOMMON 0070               __pidataBANK0 05BE                  ?_PORT_LCD 0070  
           _Lcd_Set_Cursor 04FC                  ?_Char_LCD 0070                    ??_USART 0078  
  __size_of_Config_Puertos 0015                 __pbssBANK0 0039       __size_of_tabla_USART 0077  
    __size_of_Config_USART 0013          __end_of_Valor_ADC 0594                 Write_LCD@a 0023  
               Write_LCD@i 0022        __size_of_Config_ADC 0018          __end_of_Print_Num 01CC  
       __size_of_tabla_num 008D                 __pmaintext 034D                    ?___wmul 0020  
      __end_of_Texto_USART 04AF                 __pintentry 0004                 ??_PORT_LCD 0076  
   __end_of_Lcd_Set_Cursor 0522                    _CMD_LCD 053A          __end_of_Write_LCD 04FC  
               ??_Char_LCD 0077                  PORT_LCD@v 0076               _Config_USART 0594  
         ??_LCD_Init_8bits 0021                 __stringtab 0420                    ___awdiv 0243  
          __size_of___wmul 0027            ?_Lcd_Set_Cursor 0021                    __ptext1 0458  
                  __ptext2 001B                    __ptext3 01CC                    __ptext4 0484  
                  __ptext5 02FE                    __ptext6 039B                    __ptext7 0147  
                  __ptext8 00BA                    __ptext9 04D6                  Char_LCD@a 0020  
             __size_of_LCD 004A            tabla_num@numero 0024           Texto_USART@texto 0021  
             __size_of_isr 003B          __end_of_tabla_num 0147       end_of_initialization 0017  
         _Transmisor_USART 001B               ?_Config_TMR0 0070                _Texto_USART 0484  
        ?_Config_Oscilador 0070                  _PORTAbits 0005         ??_Config_Oscilador 0076  
                _PORTEbits 0009               ??_Config_ADC 0076             Print_Num@valor 002C  
           _Config_Puertos 056A         __end_of_Config_ADC 056A      Transmisor_USART@valor 002C  
           __end_of___wmul 04D6          __size_of_PORT_LCD 0052     __end_of_Config_Puertos 057F  
      start_initialization 000F                __end_of_LCD 03E5          __size_of_Char_LCD 0018  
              __end_of_isr 0420                  _Valor_ADC 057F                   ??___wmul 0076  
                 CMD_LCD@v 0020                  _Print_Num 0147                __pdataBANK0 003B  
                 ?_CMD_LCD 0070            ?_Config_Puertos 0070                  ___latbits 0002  
            __pcstackBANK0 0020                  _Write_LCD 04D6              ??_tabla_USART 0078  
     __size_of_Config_TMR0 000F                 ?_Valor_ADC 0070           ??_Lcd_Set_Cursor 0022  
                 ?___awdiv 0020                 ?_Print_Num 0070   __end_of_Transmisor_USART 00BA  
                __pstrings 0420             __size_of_USART 002C                 ?_Write_LCD 0070  
                _tabla_num 00BA          interrupt_function 0004             ___wmul@product 0076  
      __end_of_tabla_USART 0243               ?_Texto_USART 0070                   _PIE1bits 008C  
                 _PIR1bits 000C                   _PORT_LCD 02AC              Print_Num@temp 0031  
               _ADCON0bits 001F                __stringbase 0425                 _ADCON1bits 009F  
        ___wmul@multiplier 0020                   _Char_LCD 0522           __size_of_CMD_LCD 0018  
     Transmisor_USART@temp 0031  __size_of_Config_Oscilador 0008                 ?_tabla_num 0024  
  __size_of_LCD_Init_8bits 004F                ??_Valor_ADC 0070                ??_Print_Num 0028  
           Valor_ADC@canal 0071           __size_of___awdiv 0069         __end_of__stringtab 0426  
              ??_Write_LCD 0021                   __ptext10 0522                   __ptext11 04AF  
                 __ptext20 0552                   __ptext12 0243                   __ptext21 03E5  
                 __ptext13 04FC                   __ptext22 057F                   __ptext14 053A  
                 __ptext15 02AC                   __ptext16 0594                   __ptext17 05A7  
                 __ptext18 056A                   __ptext19 05B6                _tabla_USART 01CC  
            __size_of_main 004E          tabla_USART@numero 0076           ??_Config_Puertos 0076  
            ?_Config_USART 0070                   intlevel1 0000                ??_tabla_num 0078  
                stringcode 0420       __size_of_Texto_USART 002B         Lcd_Set_Cursor@temp 0024  
        ?_Transmisor_USART 0070           Print_Num@centena 002F         ??_Transmisor_USART 0028  
           ??_Config_USART 0076               Texto_USART@i 0020                   stringdir 0420  
                 stringtab 0420            Print_Num@decena 002D           _Config_Oscilador 05B6  
              LCD@canal_10 0035                LCD@canal_12 0033              ??_Config_TMR0 0076  
          Print_Num@unidad 002A             _LCD_Init_8bits 02FE  
