

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 24 16:44:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297                           
   298                           	psect	idataBANK0
   299  060F                     __pidataBANK0:
   300                           
   301                           ;initializer for _Pos_Servo_6
   302  060F  345B               	retlw	91
   303                           
   304                           ;initializer for _Pos_Servo_5
   305  0610  345B               	retlw	91
   306                           
   307                           ;initializer for _Pos_Servo_4
   308  0611  345B               	retlw	91
   309                           
   310                           ;initializer for _Pos_Servo_3
   311  0612  345B               	retlw	91
   312                           
   313                           ;initializer for _Pos_Servo_2
   314  0613  345B               	retlw	91
   315                           
   316                           ;initializer for _Pos_Servo_1
   317  0614  345B               	retlw	91
   318                           
   319                           ;initializer for _V_Min_Servo
   320  0615  3431               	retlw	49
   321                           
   322                           ;initializer for _V_Max_Servo
   323  0616  34DC               	retlw	220
   324                           
   325                           	psect	strings
   326  0475                     __pstrings:
   327  0475                     stringtab:
   328  0475                     __stringtab:
   329                           
   330                           ;	String table - string pointers are 1 byte each
   331  0475  1BFF               	btfsc	btemp+1,7
   332  0476  2C7F               	ljmp	stringcode
   333  0477  1383               	bcf	3,7
   334  0478  187F               	btfsc	btemp+1,0
   335  0479  1783               	bsf	3,7
   336  047A  0800               	movf	0,w
   337  047B  0A84               	incf	4,f
   338  047C  1903               	skipnz
   339  047D  0AFF               	incf	btemp+1,f
   340  047E  0008               	return
   341  047F                     stringcode:
   342  047F                     stringdir:
   343  047F  3004               	movlw	high stringdir
   344  0480  008A               	movwf	10
   345  0481  0804               	movf	4,w
   346  0482  0A84               	incf	4,f
   347  0483  0782               	addwf	2,f
   348  0484                     __stringbase:
   349  0484  3400               	retlw	0
   350  0485                     __end_of__stringtab:
   351  0485                     _dpowers:
   352  0485  3401               	retlw	1
   353  0486  3400               	retlw	0
   354  0487  340A               	retlw	10
   355  0488  3400               	retlw	0
   356  0489  3464               	retlw	100
   357  048A  3400               	retlw	0
   358  048B  34E8               	retlw	232
   359  048C  3403               	retlw	3
   360  048D  3410               	retlw	16
   361  048E  3427               	retlw	39
   362  048F                     __end_of_dpowers:
   363  048F                     STR_1:
   364  048F  3453               	retlw	83	;'S'
   365  0490  3465               	retlw	101	;'e'
   366  0491  3472               	retlw	114	;'r'
   367  0492  3476               	retlw	118	;'v'
   368  0493  346F               	retlw	111	;'o'
   369  0494  3420               	retlw	32	;' '
   370  0495  3431               	retlw	49	;'1'
   371  0496  343A               	retlw	58	;':'
   372  0497  3420               	retlw	32	;' '
   373  0498  3425               	retlw	37	;'%'
   374  0499  3464               	retlw	100	;'d'
   375  049A  3400               	retlw	0
   376  049B                     STR_5:
   377  049B  3453               	retlw	83	;'S'
   378  049C  3465               	retlw	101	;'e'
   379  049D  3472               	retlw	114	;'r'
   380  049E  3476               	retlw	118	;'v'
   381  049F  346F               	retlw	111	;'o'
   382  04A0  3420               	retlw	32	;' '
   383  04A1  3432               	retlw	50	;'2'
   384  04A2  343A               	retlw	58	;':'
   385  04A3  3420               	retlw	32	;' '
   386  04A4  3425               	retlw	37	;'%'
   387  04A5  3464               	retlw	100	;'d'
   388  04A6  3400               	retlw	0
   389  04A7                     STR_9:
   390  04A7  3453               	retlw	83	;'S'
   391  04A8  3465               	retlw	101	;'e'
   392  04A9  3472               	retlw	114	;'r'
   393  04AA  3476               	retlw	118	;'v'
   394  04AB  346F               	retlw	111	;'o'
   395  04AC  3420               	retlw	32	;' '
   396  04AD  3433               	retlw	51	;'3'
   397  04AE  343A               	retlw	58	;':'
   398  04AF  3420               	retlw	32	;' '
   399  04B0  3425               	retlw	37	;'%'
   400  04B1  3464               	retlw	100	;'d'
   401  04B2  3400               	retlw	0
   402  04B3                     STR_13:
   403  04B3  3453               	retlw	83	;'S'
   404  04B4  3465               	retlw	101	;'e'
   405  04B5  3472               	retlw	114	;'r'
   406  04B6  3476               	retlw	118	;'v'
   407  04B7  346F               	retlw	111	;'o'
   408  04B8  3420               	retlw	32	;' '
   409  04B9  3434               	retlw	52	;'4'
   410  04BA  343A               	retlw	58	;':'
   411  04BB  3420               	retlw	32	;' '
   412  04BC  3425               	retlw	37	;'%'
   413  04BD  3464               	retlw	100	;'d'
   414  04BE  3400               	retlw	0
   415  04BF                     STR_17:
   416  04BF  3453               	retlw	83	;'S'
   417  04C0  3465               	retlw	101	;'e'
   418  04C1  3472               	retlw	114	;'r'
   419  04C2  3476               	retlw	118	;'v'
   420  04C3  346F               	retlw	111	;'o'
   421  04C4  3420               	retlw	32	;' '
   422  04C5  3435               	retlw	53	;'5'
   423  04C6  343A               	retlw	58	;':'
   424  04C7  3420               	retlw	32	;' '
   425  04C8  3425               	retlw	37	;'%'
   426  04C9  3464               	retlw	100	;'d'
   427  04CA  3400               	retlw	0
   428  04CB                     STR_21:
   429  04CB  3453               	retlw	83	;'S'
   430  04CC  3465               	retlw	101	;'e'
   431  04CD  3472               	retlw	114	;'r'
   432  04CE  3476               	retlw	118	;'v'
   433  04CF  346F               	retlw	111	;'o'
   434  04D0  3420               	retlw	32	;' '
   435  04D1  3436               	retlw	54	;'6'
   436  04D2  343A               	retlw	58	;':'
   437  04D3  3420               	retlw	32	;' '
   438  04D4  3425               	retlw	37	;'%'
   439  04D5  3464               	retlw	100	;'d'
   440  04D6  3400               	retlw	0
   441  04D7                     STR_25:
   442  04D7  3450               	retlw	80	;'P'
   443  04D8  344F               	retlw	79	;'O'
   444  04D9  3454               	retlw	84	;'T'
   445  04DA  3420               	retlw	32	;' '
   446  04DB  3431               	retlw	49	;'1'
   447  04DC  343A               	retlw	58	;':'
   448  04DD  3420               	retlw	32	;' '
   449  04DE  3400               	retlw	0
   450  04DF                     STR_26:
   451  04DF  3450               	retlw	80	;'P'
   452  04E0  344F               	retlw	79	;'O'
   453  04E1  3454               	retlw	84	;'T'
   454  04E2  3420               	retlw	32	;' '
   455  04E3  3432               	retlw	50	;'2'
   456  04E4  343A               	retlw	58	;':'
   457  04E5  3420               	retlw	32	;' '
   458  04E6  3400               	retlw	0
   459  048F                     
   460                           	psect	nvBANK0
   461  0058                     __pnvBANK0:
   462  0058                     _Valor_TMR0:
   463  0058                     	ds	1
   464  0007                     _PORTCbits	set	7
   465  0019                     _TXREG	set	25
   466  001E                     _ADRESH	set	30
   467  0007                     _PORTC	set	7
   468  000C                     _PIR1bits	set	12
   469  000B                     _INTCONbits	set	11
   470  001F                     _ADCON0bits	set	31
   471  000B                     _INTCON	set	11
   472  0009                     _PORTE	set	9
   473  0008                     _PORTD	set	8
   474  0006                     _PORTB	set	6
   475  0005                     _PORTA	set	5
   476  001A                     _RCREG	set	26
   477  0001                     _TMR0	set	1
   478  0028                     _RA0	set	40
   479  00C4                     _CREN	set	196
   480  00C7                     _SPEN	set	199
   481  0066                     _ADIF	set	102
   482  005B                     _RBIE	set	91
   483  0031                     _RB1	set	49
   484  0030                     _RB0	set	48
   485  0065                     _RCIF	set	101
   486  0045                     _RD5	set	69
   487  0044                     _RD4	set	68
   488  0043                     _RD3	set	67
   489  0042                     _RD2	set	66
   490  0041                     _RD1	set	65
   491  0040                     _RD0	set	64
   492  005A                     _T0IF	set	90
   493  0087                     _TRISC	set	135
   494  0099                     _SPBRG	set	153
   495  008C                     _PIE1bits	set	140
   496  009F                     _ADCON1bits	set	159
   497  0095                     _WPUBbits	set	149
   498  0081                     _OPTION_REGbits	set	129
   499  0088                     _TRISD	set	136
   500  0089                     _TRISE	set	137
   501  0086                     _TRISB	set	134
   502  0085                     _TRISA	set	133
   503  04C4                     _SYNC	set	1220
   504  04C5                     _TXEN	set	1221
   505  04B1                     _IOCB1	set	1201
   506  04B0                     _IOCB0	set	1200
   507  040B                     _PSA	set	1035
   508  040D                     _T0CS	set	1037
   509  040A                     _PS2	set	1034
   510  0409                     _PS1	set	1033
   511  0408                     _PS0	set	1032
   512  047E                     _IRCF2	set	1150
   513  047D                     _IRCF1	set	1149
   514  047C                     _IRCF0	set	1148
   515  0189                     _ANSELH	set	393
   516  0188                     _ANSEL	set	392
   517                           
   518                           	psect	cinit
   519  0015                     start_initialization:	
   520                           ; #config settings
   521                           
   522  0015                     __initialization:
   523                           
   524                           ; Initialize objects allocated to BANK0
   525  0015  1383               	bcf	3,7	;select IRP bank0
   526  0016  3058               	movlw	low (__pdataBANK0+8)
   527  0017  00FD               	movwf	btemp+-1
   528  0018  3006               	movlw	high __pidataBANK0
   529  0019  00FE               	movwf	btemp
   530  001A  300F               	movlw	low __pidataBANK0
   531  001B  00FF               	movwf	btemp+1
   532  001C  3050               	movlw	low __pdataBANK0
   533  001D  0084               	movwf	4
   534  001E  120A  118A  25E0  120A  118A  	fcall	init_ram0
   535                           
   536                           ; Clear objects allocated to BANK0
   537  0023  3040               	movlw	low __pbssBANK0
   538  0024  0084               	movwf	4
   539  0025  3050               	movlw	low (__pbssBANK0+16)
   540  0026  120A  118A  2617  120A  118A  	fcall	clear_ram0
   541  002B                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  002B                     __end_of__initialization:
   545  002B  0183               	clrf	3
   546  002C  120A  118A  2D99   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssBANK0
   549  0040                     __pbssBANK0:
   550  0040                     _text:
   551  0040                     	ds	16
   552                           
   553                           	psect	dataBANK0
   554  0050                     __pdataBANK0:
   555  0050                     _Pos_Servo_6:
   556  0050                     	ds	1
   557  0051                     _Pos_Servo_5:
   558  0051                     	ds	1
   559  0052                     _Pos_Servo_4:
   560  0052                     	ds	1
   561  0053                     _Pos_Servo_3:
   562  0053                     	ds	1
   563  0054                     _Pos_Servo_2:
   564  0054                     	ds	1
   565  0055                     _Pos_Servo_1:
   566  0055                     	ds	1
   567  0056                     _V_Min_Servo:
   568  0056                     	ds	1
   569  0057                     _V_Max_Servo:
   570  0057                     	ds	1
   571                           
   572                           	psect	inittext
   573  05DC                     init_fetch0:	
   574                           ;	Called with low address in FSR and high address in W
   575                           
   576  05DC  087E               	movf	btemp,w
   577  05DD  008A               	movwf	10
   578  05DE  087F               	movf	btemp+1,w
   579  05DF  0082               	movwf	2
   580  05E0                     init_ram0:	
   581                           ;Called with:
   582                           ;	high address of idata address in btemp 
   583                           ;	low address of idata address in btemp+1 
   584                           ;	low address of data in FSR
   585                           ;	high address + 1 of data in btemp-1
   586                           
   587  05E0  120A  118A  25DC  120A  118A  	fcall	init_fetch0
   588  05E5  0080               	movwf	0
   589  05E6  0A84               	incf	4,f
   590  05E7  0804               	movf	4,w
   591  05E8  067D               	xorwf	btemp+-1,w
   592  05E9  1903               	btfsc	3,2
   593  05EA  3400               	retlw	0
   594  05EB  0AFF               	incf	btemp+1,f
   595  05EC  1903               	btfsc	3,2
   596  05ED  0AFE               	incf	btemp,f
   597  05EE  2DE0               	goto	init_ram0
   598                           
   599                           	psect	clrtext
   600  0617                     clear_ram0:	
   601                           ;	Called with FSR containing the base address, and
   602                           ;	W with the last address+1
   603                           
   604  0617  0064               	clrwdt	;clear the watchdog before getting into this loop
   605  0618                     clrloop0:
   606  0618  0180               	clrf	0	;clear RAM location pointed to by FSR
   607  0619  0A84               	incf	4,f	;increment pointer
   608  061A  0604               	xorwf	4,w	;XOR with final address
   609  061B  1903               	btfsc	3,2	;have we reached the end yet?
   610  061C  3400               	retlw	0	;all done for this memory range, return
   611  061D  0604               	xorwf	4,w	;XOR again to restore value
   612  061E  2E18               	goto	clrloop0	;do the next byte
   613                           
   614                           	psect	cstackBANK1
   615  00A0                     __pcstackBANK1:
   616  00A0                     ??_config:
   617  00A0                     ??_Config_Oscilador:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  00A0                     ??_Config_TMR0:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  00A0                     ??_Config_USART:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  00A0                     ??_main:	
   627                           ; 1 bytes @ 0x0
   628                           
   629                           
   630                           ; 1 bytes @ 0x0
   631  00A0                     	ds	3
   632                           
   633                           	psect	cstackCOMMON
   634  0070                     __pcstackCOMMON:
   635  0070                     ?_Texto_USART:
   636  0070                     ?_config:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_Config_Oscilador:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Config_TMR0:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_Config_USART:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_isr:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_main:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?___lwdiv:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     Texto_USART@texto:	
   658                           ; 2 bytes @ 0x0
   659                           
   660  0070                     ___lwdiv@divisor:	
   661                           ; 2 bytes @ 0x0
   662                           
   663                           
   664                           ; 2 bytes @ 0x0
   665  0070                     	ds	2
   666  0072                     ??_Texto_USART:
   667  0072                     ___lwdiv@dividend:	
   668                           ; 1 bytes @ 0x2
   669                           
   670                           
   671                           ; 2 bytes @ 0x2
   672  0072                     	ds	2
   673  0074                     ??___lwdiv:
   674  0074                     Texto_USART@i:	
   675                           ; 1 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679  0074                     	ds	1
   680  0075                     ___lwdiv@quotient:
   681                           
   682                           ; 2 bytes @ 0x5
   683  0075                     	ds	2
   684  0077                     ___lwdiv@counter:
   685                           
   686                           ; 1 bytes @ 0x7
   687  0077                     	ds	1
   688  0078                     ?___lwmod:
   689  0078                     ___lwmod@divisor:	
   690                           ; 2 bytes @ 0x8
   691                           
   692                           
   693                           ; 2 bytes @ 0x8
   694  0078                     	ds	2
   695  007A                     ___lwmod@dividend:
   696                           
   697                           ; 2 bytes @ 0xA
   698  007A                     	ds	2
   699  007C                     ??___lwmod:
   700                           
   701                           ; 1 bytes @ 0xC
   702  007C                     	ds	1
   703  007D                     ___lwmod@counter:
   704                           
   705                           ; 1 bytes @ 0xD
   706  007D                     	ds	1
   707                           
   708                           	psect	cstackBANK0
   709  0020                     __pcstackBANK0:
   710  0020                     ?_sprintf:
   711  0020                     sprintf@f:	
   712                           ; 2 bytes @ 0x0
   713                           
   714                           
   715                           ; 1 bytes @ 0x0
   716  0020                     	ds	3
   717  0023                     ??_sprintf:
   718                           
   719                           ; 1 bytes @ 0x3
   720  0023                     	ds	3
   721  0026                     sprintf@ap:
   722                           
   723                           ; 1 bytes @ 0x6
   724  0026                     	ds	1
   725  0027                     sprintf@flag:
   726                           
   727                           ; 1 bytes @ 0x7
   728  0027                     	ds	1
   729  0028                     sprintf@prec:
   730                           
   731                           ; 1 bytes @ 0x8
   732  0028                     	ds	1
   733  0029                     sprintf@val:
   734                           
   735                           ; 2 bytes @ 0x9
   736  0029                     	ds	2
   737  002B                     sprintf@c:
   738                           
   739                           ; 1 bytes @ 0xB
   740  002B                     	ds	1
   741  002C                     sprintf@sp:
   742                           
   743                           ; 1 bytes @ 0xC
   744  002C                     	ds	1
   745  002D                     ??_isr:
   746                           
   747                           ; 1 bytes @ 0xD
   748  002D                     	ds	7
   749  0034                     isr@i:
   750                           
   751                           ; 2 bytes @ 0x14
   752  0034                     	ds	2
   753  0036                     isr@i_91:
   754                           
   755                           ; 2 bytes @ 0x16
   756  0036                     	ds	2
   757  0038                     isr@i_92:
   758                           
   759                           ; 2 bytes @ 0x18
   760  0038                     	ds	2
   761  003A                     isr@i_93:
   762                           
   763                           ; 2 bytes @ 0x1A
   764  003A                     	ds	2
   765  003C                     isr@i_94:
   766                           
   767                           ; 2 bytes @ 0x1C
   768  003C                     	ds	2
   769  003E                     isr@i_95:
   770                           
   771                           ; 2 bytes @ 0x1E
   772  003E                     	ds	2
   773                           
   774                           	psect	maintext
   775  0599                     __pmaintext:	
   776 ;;
   777 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   778 ;;
   779 ;; *************** function _main *****************
   780 ;; Defined at:
   781 ;;		line 238 in file "Proyecto_I_Esclavo_I.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : B00/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          0       0       3       0       0
   798 ;;      Totals:         0       0       3       0       0
   799 ;;Total ram usage:        3 bytes
   800 ;; Hardware stack levels required when called: 4
   801 ;; This function calls:
   802 ;;		_Config_Oscilador
   803 ;;		_Config_TMR0
   804 ;;		_Config_USART
   805 ;;		_config
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function _main
   813  0599                     _main:
   814  0599                     l1924:	
   815                           ;incstack = 0
   816                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   817                           
   818  0599  120A  118A  25EF  120A  118A  	fcall	_config
   819  059E                     l1926:
   820  059E  120A  118A  261F  120A  118A  	fcall	_Config_Oscilador
   821  05A3                     l1928:
   822  05A3  120A  118A  2600  120A  118A  	fcall	_Config_TMR0
   823  05A8  1683               	bsf	3,5	;RP0=1, select bank1
   824  05A9  1303               	bcf	3,6	;RP1=0, select bank1
   825  05AA  00A0               	movwf	??_main^(0+128)
   826  05AB  0820               	movf	??_main^(0+128),w
   827  05AC  1283               	bcf	3,5	;RP0=0, select bank0
   828  05AD  1303               	bcf	3,6	;RP1=0, select bank0
   829  05AE  00D8               	movwf	_Valor_TMR0
   830  05AF                     l1930:
   831  05AF  120A  118A  25C7  120A  118A  	fcall	_Config_USART
   832  05B4                     l1932:
   833  05B4  3015               	movlw	21
   834  05B5  1683               	bsf	3,5	;RP0=1, select bank1
   835  05B6  1303               	bcf	3,6	;RP1=0, select bank1
   836  05B7  00A2               	movwf	(??_main^(0+128)+2)
   837  05B8  304B               	movlw	75
   838  05B9  00A1               	movwf	(??_main^(0+128)+1)
   839  05BA  30BD               	movlw	189
   840  05BB  00A0               	movwf	??_main^(0+128)
   841  05BC                     u1187:
   842  05BC  0BA0               	decfsz	??_main^(0+128),f
   843  05BD  2DBC               	goto	u1187
   844  05BE  0BA1               	decfsz	(??_main^(0+128)+1),f
   845  05BF  2DBC               	goto	u1187
   846  05C0  0BA2               	decfsz	(??_main^(0+128)+2),f
   847  05C1  2DBC               	goto	u1187
   848  05C2  2DC3               	nop2
   849  05C3  2DB4               	goto	l1932
   850  05C4  120A  118A  2812   	ljmp	start
   851  05C7                     __end_of_main:
   852                           
   853                           	psect	text1
   854  05EF                     __ptext1:	
   855 ;; *************** function _config *****************
   856 ;; Defined at:
   857 ;;		line 253 in file "Proyecto_I_Esclavo_I.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		status,2
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 3
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _config
   887  05EF                     _config:
   888  05EF                     l1908:	
   889                           ;incstack = 0
   890                           ; Regs used in _config: [status,2]
   891                           
   892  05EF  1683               	bsf	3,5	;RP0=1, select bank1
   893  05F0  1303               	bcf	3,6	;RP1=0, select bank1
   894  05F1  0185               	clrf	5	;volatile
   895  05F2  0186               	clrf	6	;volatile
   896  05F3  0189               	clrf	9	;volatile
   897  05F4  0188               	clrf	8	;volatile
   898  05F5  1683               	bsf	3,5	;RP0=1, select bank3
   899  05F6  1703               	bsf	3,6	;RP1=1, select bank3
   900  05F7  0188               	clrf	8	;volatile
   901  05F8  0189               	clrf	9	;volatile
   902  05F9  1283               	bcf	3,5	;RP0=0, select bank0
   903  05FA  1303               	bcf	3,6	;RP1=0, select bank0
   904  05FB  0185               	clrf	5	;volatile
   905  05FC  0186               	clrf	6	;volatile
   906  05FD  0188               	clrf	8	;volatile
   907  05FE  0189               	clrf	9	;volatile
   908  05FF                     l157:
   909  05FF  0008               	return
   910  0600                     __end_of_config:
   911                           
   912                           	psect	text2
   913  05C7                     __ptext2:	
   914 ;; *************** function _Config_USART *****************
   915 ;; Defined at:
   916 ;;		line 71 in file "../../LIB/LIB.X/LIB.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; Hardware stack levels required when called: 3
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _Config_USART
   946  05C7                     _Config_USART:
   947  05C7                     l1920:	
   948                           ;incstack = 0
   949                           ; Regs used in _Config_USART: [wreg]
   950                           
   951                           
   952                           ;../../LIB/LIB.X/LIB.c: 73:     TXEN = 1;
   953  05C7  1683               	bsf	3,5	;RP0=1, select bank1
   954  05C8  1303               	bcf	3,6	;RP1=0, select bank1
   955  05C9  1698               	bsf	24,5	;volatile
   956                           
   957                           ;../../LIB/LIB.X/LIB.c: 74:     SYNC = 0;
   958  05CA  1218               	bcf	24,4	;volatile
   959                           
   960                           ;../../LIB/LIB.X/LIB.c: 75:     SPEN = 1;
   961  05CB  1283               	bcf	3,5	;RP0=0, select bank0
   962  05CC  1303               	bcf	3,6	;RP1=0, select bank0
   963  05CD  1798               	bsf	24,7	;volatile
   964                           
   965                           ;../../LIB/LIB.X/LIB.c: 78:     CREN = 1;
   966  05CE  1618               	bsf	24,4	;volatile
   967                           
   968                           ;../../LIB/LIB.X/LIB.c: 79:     PIE1bits.RCIE = 1;
   969  05CF  1683               	bsf	3,5	;RP0=1, select bank1
   970  05D0  1303               	bcf	3,6	;RP1=0, select bank1
   971  05D1  168C               	bsf	12,5	;volatile
   972                           
   973                           ;../../LIB/LIB.X/LIB.c: 80:     PIR1bits.RCIF = 0;
   974  05D2  1283               	bcf	3,5	;RP0=0, select bank0
   975  05D3  1303               	bcf	3,6	;RP1=0, select bank0
   976  05D4  128C               	bcf	12,5	;volatile
   977  05D5                     l1922:
   978                           
   979                           ;../../LIB/LIB.X/LIB.c: 81:     SPBRG=12;
   980  05D5  300C               	movlw	12
   981  05D6  1683               	bsf	3,5	;RP0=1, select bank1
   982  05D7  1303               	bcf	3,6	;RP1=0, select bank1
   983  05D8  0099               	movwf	25	;volatile
   984                           
   985                           ;../../LIB/LIB.X/LIB.c: 82:     TRISC = 0b10000000;
   986  05D9  3080               	movlw	128
   987  05DA  0087               	movwf	7	;volatile
   988  05DB                     l268:
   989  05DB  0008               	return
   990  05DC                     __end_of_Config_USART:
   991                           
   992                           	psect	text3
   993  0600                     __ptext3:	
   994 ;; *************** function _Config_TMR0 *****************
   995 ;; Defined at:
   996 ;;		line 14 in file "../../LIB/LIB.X/LIB.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  valor_tmr0      1    0        unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      unsigned char 
  1003 ;; Registers used:
  1004 ;;		wreg
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 3
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _Config_TMR0
  1026  0600                     _Config_TMR0:
  1027  0600                     l1914:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _Config_TMR0: [wreg]
  1030                           
  1031                           
  1032                           ;../../LIB/LIB.X/LIB.c: 18:     char valor_tmr0;;../../LIB/LIB.X/LIB.c: 19:     PS0 = 1;
  1033  0600  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0601  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0602  1401               	bsf	1,0	;volatile
  1036                           
  1037                           ;../../LIB/LIB.X/LIB.c: 20:     PS1 = 1;
  1038  0603  1481               	bsf	1,1	;volatile
  1039                           
  1040                           ;../../LIB/LIB.X/LIB.c: 21:     PS2 = 1;
  1041  0604  1501               	bsf	1,2	;volatile
  1042                           
  1043                           ;../../LIB/LIB.X/LIB.c: 22:     T0CS = 0;
  1044  0605  1281               	bcf	1,5	;volatile
  1045                           
  1046                           ;../../LIB/LIB.X/LIB.c: 23:     PSA = 0;
  1047  0606  1181               	bcf	1,3	;volatile
  1048  0607                     l1916:
  1049                           
  1050                           ;../../LIB/LIB.X/LIB.c: 24:     INTCON = 0b10101000;
  1051  0607  30A8               	movlw	168
  1052  0608  008B               	movwf	11	;volatile
  1053                           
  1054                           ;../../LIB/LIB.X/LIB.c: 26:     TMR0 = valor_tmr0;
  1055  0609  3064               	movlw	100
  1056  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1057  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1058  060C  0081               	movwf	1	;volatile
  1059                           
  1060                           ;../../LIB/LIB.X/LIB.c: 27:     return valor_tmr0;
  1061  060D  3064               	movlw	100
  1062  060E                     l259:
  1063  060E  0008               	return
  1064  060F                     __end_of_Config_TMR0:
  1065                           
  1066                           	psect	text4
  1067  061F                     __ptext4:	
  1068 ;; *************** function _Config_Oscilador *****************
  1069 ;; Defined at:
  1070 ;;		line 7 in file "../../LIB/LIB.X/LIB.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; Hardware stack levels required when called: 3
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _Config_Oscilador
  1100  061F                     _Config_Oscilador:
  1101  061F                     l1910:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _Config_Oscilador: [wreg]
  1104                           
  1105                           
  1106                           ;../../LIB/LIB.X/LIB.c: 9:     IRCF0 = 1;
  1107  061F  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0620  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0621  160F               	bsf	15,4	;volatile
  1110                           
  1111                           ;../../LIB/LIB.X/LIB.c: 10:     IRCF1 = 1;
  1112  0622  168F               	bsf	15,5	;volatile
  1113                           
  1114                           ;../../LIB/LIB.X/LIB.c: 11:     IRCF2 = 1;
  1115  0623  170F               	bsf	15,6	;volatile
  1116  0624                     l1912:
  1117                           
  1118                           ;../../LIB/LIB.X/LIB.c: 12:     INTCON = 0b11101000;
  1119  0624  30E8               	movlw	232
  1120  0625  008B               	movwf	11	;volatile
  1121  0626                     l256:
  1122  0626  0008               	return
  1123  0627                     __end_of_Config_Oscilador:
  1124                           
  1125                           	psect	text5
  1126  002F                     __ptext5:	
  1127 ;; *************** function _isr *****************
  1128 ;; Defined at:
  1129 ;;		line 71 in file "Proyecto_I_Esclavo_I.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  i               2   30[BANK0 ] int 
  1134 ;;  i               2   28[BANK0 ] int 
  1135 ;;  i               2   26[BANK0 ] int 
  1136 ;;  i               2   24[BANK0 ] int 
  1137 ;;  i               2   22[BANK0 ] int 
  1138 ;;  i               2   20[BANK0 ] int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       0       0       0       0
  1149 ;;      Locals:         0      12       0       0       0
  1150 ;;      Temps:          0       7       0       0       0
  1151 ;;      Totals:         0      19       0       0       0
  1152 ;;Total ram usage:       19 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 2
  1155 ;; This function calls:
  1156 ;;		_Texto_USART
  1157 ;;		_sprintf
  1158 ;; This function is called by:
  1159 ;;		Interrupt level 1
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _isr
  1165  002F                     _isr:
  1166  002F                     i1l1628:
  1167                           
  1168                           ;Proyecto_I_Esclavo_I.c: 73:             }else {
  1169  002F  1D0B               	btfss	11,2	;volatile
  1170  0030  2832               	goto	u86_21
  1171  0031  2833               	goto	u86_20
  1172  0032                     u86_21:
  1173  0032  28DE               	goto	i1l79
  1174  0033                     u86_20:
  1175  0033                     i1l1630:
  1176                           
  1177                           ;Proyecto_I_Esclavo_I.c: 75:                 sprintf(text,"Servo 1: %d",Pos_Servo_1);
  1178  0033  110B               	bcf	11,2	;volatile
  1179  0034                     i1l1632:
  1180                           
  1181                           ;Proyecto_I_Esclavo_I.c: 76:                 Texto_USART(text);
  1182  0034  0858               	movf	_Valor_TMR0,w
  1183  0035  0081               	movwf	1	;volatile
  1184  0036                     i1l1634:
  1185                           
  1186                           ;Proyecto_I_Esclavo_I.c: 79:         else if (RCREG == '3'){
  1187  0036  1408               	bsf	8,0	;volatile
  1188  0037                     i1l1636:
  1189                           
  1190                           ;Proyecto_I_Esclavo_I.c: 80:             if(Pos_Servo_2 <V_Max_Servo){
  1191  0037  01B4               	clrf	isr@i
  1192  0038  01B5               	clrf	isr@i+1
  1193  0039  2842               	goto	i1l80
  1194  003A                     i1l1638:
  1195  003A  3001               	movlw	1
  1196  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1197  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1198  003D  07B4               	addwf	isr@i,f
  1199  003E  1803               	skipnc
  1200  003F  0AB5               	incf	isr@i+1,f
  1201  0040  3000               	movlw	0
  1202  0041  07B5               	addwf	isr@i+1,f
  1203  0042                     i1l80:
  1204  0042  0835               	movf	isr@i+1,w
  1205  0043  3A80               	xorlw	128
  1206  0044  00AD               	movwf	??_isr
  1207  0045  3080               	movlw	128
  1208  0046  022D               	subwf	??_isr,w
  1209  0047  1D03               	skipz
  1210  0048  284B               	goto	u87_25
  1211  0049  0855               	movf	_Pos_Servo_1,w
  1212  004A  0234               	subwf	isr@i,w
  1213  004B                     u87_25:
  1214  004B  1C03               	skipc
  1215  004C  284E               	goto	u87_21
  1216  004D  284F               	goto	u87_20
  1217  004E                     u87_21:
  1218  004E  283A               	goto	i1l1638
  1219  004F                     u87_20:
  1220  004F                     i1l82:
  1221                           
  1222                           ;Proyecto_I_Esclavo_I.c: 81:                 Pos_Servo_2++;
  1223  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0051  1008               	bcf	8,0	;volatile
  1226                           
  1227                           ;Proyecto_I_Esclavo_I.c: 83:                 Texto_USART(text);
  1228  0052  1488               	bsf	8,1	;volatile
  1229  0053                     i1l1640:
  1230                           
  1231                           ;Proyecto_I_Esclavo_I.c: 84:             }else {
  1232  0053  01B6               	clrf	isr@i_91
  1233  0054  01B7               	clrf	isr@i_91+1
  1234  0055  285E               	goto	i1l83
  1235  0056                     i1l1642:
  1236  0056  3001               	movlw	1
  1237  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0059  07B6               	addwf	isr@i_91,f
  1240  005A  1803               	skipnc
  1241  005B  0AB7               	incf	isr@i_91+1,f
  1242  005C  3000               	movlw	0
  1243  005D  07B7               	addwf	isr@i_91+1,f
  1244  005E                     i1l83:
  1245  005E  0837               	movf	isr@i_91+1,w
  1246  005F  3A80               	xorlw	128
  1247  0060  00AD               	movwf	??_isr
  1248  0061  3080               	movlw	128
  1249  0062  022D               	subwf	??_isr,w
  1250  0063  1D03               	skipz
  1251  0064  2867               	goto	u88_25
  1252  0065  0854               	movf	_Pos_Servo_2,w
  1253  0066  0236               	subwf	isr@i_91,w
  1254  0067                     u88_25:
  1255  0067  1C03               	skipc
  1256  0068  286A               	goto	u88_21
  1257  0069  286B               	goto	u88_20
  1258  006A                     u88_21:
  1259  006A  2856               	goto	i1l1642
  1260  006B                     u88_20:
  1261  006B                     i1l85:
  1262                           
  1263                           ;Proyecto_I_Esclavo_I.c: 85:                 Pos_Servo_2 = V_Min_Servo;
  1264  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  006D  1088               	bcf	8,1	;volatile
  1267                           
  1268                           ;Proyecto_I_Esclavo_I.c: 87:                 Texto_USART(text);
  1269  006E  1508               	bsf	8,2	;volatile
  1270  006F                     i1l1644:
  1271                           
  1272                           ;Proyecto_I_Esclavo_I.c: 88:             }
  1273  006F  01B8               	clrf	isr@i_92
  1274  0070  01B9               	clrf	isr@i_92+1
  1275  0071  287A               	goto	i1l86
  1276  0072                     i1l1646:
  1277  0072  3001               	movlw	1
  1278  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0075  07B8               	addwf	isr@i_92,f
  1281  0076  1803               	skipnc
  1282  0077  0AB9               	incf	isr@i_92+1,f
  1283  0078  3000               	movlw	0
  1284  0079  07B9               	addwf	isr@i_92+1,f
  1285  007A                     i1l86:
  1286  007A  0839               	movf	isr@i_92+1,w
  1287  007B  3A80               	xorlw	128
  1288  007C  00AD               	movwf	??_isr
  1289  007D  3080               	movlw	128
  1290  007E  022D               	subwf	??_isr,w
  1291  007F  1D03               	skipz
  1292  0080  2883               	goto	u89_25
  1293  0081  0853               	movf	_Pos_Servo_3,w
  1294  0082  0238               	subwf	isr@i_92,w
  1295  0083                     u89_25:
  1296  0083  1C03               	skipc
  1297  0084  2886               	goto	u89_21
  1298  0085  2887               	goto	u89_20
  1299  0086                     u89_21:
  1300  0086  2872               	goto	i1l1646
  1301  0087                     u89_20:
  1302  0087                     i1l88:
  1303                           
  1304                           ;Proyecto_I_Esclavo_I.c: 89:         } else if(RCREG == '4'){
  1305  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0089  1108               	bcf	8,2	;volatile
  1308                           
  1309                           ;Proyecto_I_Esclavo_I.c: 91:                 Pos_Servo_2--;
  1310  008A  1588               	bsf	8,3	;volatile
  1311  008B                     i1l1648:
  1312                           
  1313                           ;Proyecto_I_Esclavo_I.c: 92:                 sprintf(text,"Servo 2: %d",Pos_Servo_2);
  1314  008B  01BA               	clrf	isr@i_93
  1315  008C  01BB               	clrf	isr@i_93+1
  1316  008D  2896               	goto	i1l89
  1317  008E                     i1l1650:
  1318  008E  3001               	movlw	1
  1319  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0091  07BA               	addwf	isr@i_93,f
  1322  0092  1803               	skipnc
  1323  0093  0ABB               	incf	isr@i_93+1,f
  1324  0094  3000               	movlw	0
  1325  0095  07BB               	addwf	isr@i_93+1,f
  1326  0096                     i1l89:
  1327  0096  083B               	movf	isr@i_93+1,w
  1328  0097  3A80               	xorlw	128
  1329  0098  00AD               	movwf	??_isr
  1330  0099  3080               	movlw	128
  1331  009A  022D               	subwf	??_isr,w
  1332  009B  1D03               	skipz
  1333  009C  289F               	goto	u90_25
  1334  009D  0852               	movf	_Pos_Servo_4,w
  1335  009E  023A               	subwf	isr@i_93,w
  1336  009F                     u90_25:
  1337  009F  1C03               	skipc
  1338  00A0  28A2               	goto	u90_21
  1339  00A1  28A3               	goto	u90_20
  1340  00A2                     u90_21:
  1341  00A2  288E               	goto	i1l1650
  1342  00A3                     u90_20:
  1343  00A3                     i1l91:
  1344                           
  1345                           ;Proyecto_I_Esclavo_I.c: 93:                 Texto_USART(text);
  1346  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1347  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1348  00A5  1188               	bcf	8,3	;volatile
  1349                           
  1350                           ;Proyecto_I_Esclavo_I.c: 95:                 Pos_Servo_2 = V_Max_Servo;
  1351  00A6  1608               	bsf	8,4	;volatile
  1352  00A7                     i1l1652:
  1353                           
  1354                           ;Proyecto_I_Esclavo_I.c: 96:                 sprintf(text,"Servo 2: %d",Pos_Servo_2);
  1355  00A7  01BC               	clrf	isr@i_94
  1356  00A8  01BD               	clrf	isr@i_94+1
  1357  00A9  28B2               	goto	i1l92
  1358  00AA                     i1l1654:
  1359  00AA  3001               	movlw	1
  1360  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1361  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1362  00AD  07BC               	addwf	isr@i_94,f
  1363  00AE  1803               	skipnc
  1364  00AF  0ABD               	incf	isr@i_94+1,f
  1365  00B0  3000               	movlw	0
  1366  00B1  07BD               	addwf	isr@i_94+1,f
  1367  00B2                     i1l92:
  1368  00B2  083D               	movf	isr@i_94+1,w
  1369  00B3  3A80               	xorlw	128
  1370  00B4  00AD               	movwf	??_isr
  1371  00B5  3080               	movlw	128
  1372  00B6  022D               	subwf	??_isr,w
  1373  00B7  1D03               	skipz
  1374  00B8  28BB               	goto	u91_25
  1375  00B9  0851               	movf	_Pos_Servo_5,w
  1376  00BA  023C               	subwf	isr@i_94,w
  1377  00BB                     u91_25:
  1378  00BB  1C03               	skipc
  1379  00BC  28BE               	goto	u91_21
  1380  00BD  28BF               	goto	u91_20
  1381  00BE                     u91_21:
  1382  00BE  28AA               	goto	i1l1654
  1383  00BF                     u91_20:
  1384  00BF                     i1l94:
  1385                           
  1386                           ;Proyecto_I_Esclavo_I.c: 97:                 Texto_USART(text);
  1387  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1388  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1389  00C1  1208               	bcf	8,4	;volatile
  1390                           
  1391                           ;Proyecto_I_Esclavo_I.c: 99:         }
  1392  00C2  1688               	bsf	8,5	;volatile
  1393  00C3                     i1l1656:
  1394                           
  1395                           ;Proyecto_I_Esclavo_I.c: 100:         else if (RCREG == '5'){
  1396  00C3  01BE               	clrf	isr@i_95
  1397  00C4  01BF               	clrf	isr@i_95+1
  1398  00C5  28CE               	goto	i1l95
  1399  00C6                     i1l1658:
  1400  00C6  3001               	movlw	1
  1401  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1402  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1403  00C9  07BE               	addwf	isr@i_95,f
  1404  00CA  1803               	skipnc
  1405  00CB  0ABF               	incf	isr@i_95+1,f
  1406  00CC  3000               	movlw	0
  1407  00CD  07BF               	addwf	isr@i_95+1,f
  1408  00CE                     i1l95:
  1409  00CE  083F               	movf	isr@i_95+1,w
  1410  00CF  3A80               	xorlw	128
  1411  00D0  00AD               	movwf	??_isr
  1412  00D1  3080               	movlw	128
  1413  00D2  022D               	subwf	??_isr,w
  1414  00D3  1D03               	skipz
  1415  00D4  28D7               	goto	u92_25
  1416  00D5  0850               	movf	_Pos_Servo_6,w
  1417  00D6  023E               	subwf	isr@i_95,w
  1418  00D7                     u92_25:
  1419  00D7  1C03               	skipc
  1420  00D8  28DA               	goto	u92_21
  1421  00D9  28DB               	goto	u92_20
  1422  00DA                     u92_21:
  1423  00DA  28C6               	goto	i1l1658
  1424  00DB                     u92_20:
  1425  00DB                     i1l97:
  1426                           
  1427                           ;Proyecto_I_Esclavo_I.c: 101:             if(Pos_Servo_3 <V_Max_Servo){
  1428  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1429  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1430  00DD  1288               	bcf	8,5	;volatile
  1431  00DE                     i1l79:	
  1432                           ;Proyecto_I_Esclavo_I.c: 102:                 Pos_Servo_3++;
  1433                           
  1434                           
  1435                           ;Proyecto_I_Esclavo_I.c: 105:             }else {
  1436  00DE  1E8C               	btfss	12,5	;volatile
  1437  00DF  28E1               	goto	u93_21
  1438  00E0  28E2               	goto	u93_20
  1439  00E1                     u93_21:
  1440  00E1  2B82               	goto	i1l146
  1441  00E2                     u93_20:
  1442  00E2                     i1l1660:
  1443                           
  1444                           ;Proyecto_I_Esclavo_I.c: 108:                 Texto_USART(text);
  1445  00E2  3031               	movlw	49
  1446  00E3  061A               	xorwf	26,w	;volatile
  1447  00E4  1D03               	btfss	3,2
  1448  00E5  28E7               	goto	u94_21
  1449  00E6  28E8               	goto	u94_20
  1450  00E7                     u94_21:
  1451  00E7  2923               	goto	i1l1676
  1452  00E8                     u94_20:
  1453  00E8                     i1l1662:
  1454                           
  1455                           ;Proyecto_I_Esclavo_I.c: 109:             }
  1456  00E8  0857               	movf	_V_Max_Servo,w
  1457  00E9  0255               	subwf	_Pos_Servo_1,w
  1458  00EA  1803               	skipnc
  1459  00EB  28ED               	goto	u95_21
  1460  00EC  28EE               	goto	u95_20
  1461  00ED                     u95_21:
  1462  00ED  290D               	goto	i1l1670
  1463  00EE                     u95_20:
  1464  00EE                     i1l1664:
  1465                           
  1466                           ;Proyecto_I_Esclavo_I.c: 110:         } else if(RCREG == '6'){
  1467  00EE  3001               	movlw	1
  1468  00EF  00AD               	movwf	??_isr
  1469  00F0  082D               	movf	??_isr,w
  1470  00F1  07D5               	addwf	_Pos_Servo_1,f
  1471  00F2                     i1l1666:
  1472                           
  1473                           ;Proyecto_I_Esclavo_I.c: 111:             if(Pos_Servo_3 > V_Min_Servo){
  1474  00F2  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1475  00F3  00AD               	movwf	??_isr
  1476  00F4  082D               	movf	??_isr,w
  1477  00F5  00A0               	movwf	sprintf@f
  1478  00F6  0855               	movf	_Pos_Servo_1,w
  1479  00F7  00AE               	movwf	??_isr+1
  1480  00F8  01AF               	clrf	??_isr+2
  1481  00F9  082E               	movf	??_isr+1,w
  1482  00FA  00A1               	movwf	?_sprintf+1
  1483  00FB  082F               	movf	??_isr+2,w
  1484  00FC  00A2               	movwf	?_sprintf+2
  1485  00FD  3040               	movlw	(low (_text| 0))& (0+255)
  1486  00FE  120A  118A  238D  120A  118A  	fcall	_sprintf
  1487  0103                     i1l1668:
  1488                           
  1489                           ;Proyecto_I_Esclavo_I.c: 112:                 Pos_Servo_3--;
  1490  0103  3040               	movlw	(low (_text| 0))& (0+255)
  1491  0104  00F0               	movwf	Texto_USART@texto
  1492  0105  3000               	movlw	0
  1493  0106  00F1               	movwf	Texto_USART@texto+1
  1494  0107  120A  118A  2565  120A  118A  	fcall	_Texto_USART
  1495                           
  1496                           ;Proyecto_I_Esclavo_I.c: 113:                 sprintf(text,"Servo 3: %d",Pos_Servo_3);
  1497  010C  2B7F               	goto	i1l1852
  1498  010D                     i1l1670:
  1499                           
  1500                           ;Proyecto_I_Esclavo_I.c: 114:                 Texto_USART(text);
  1501  010D  0856               	movf	_V_Min_Servo,w
  1502  010E  00AD               	movwf	??_isr
  1503  010F  082D               	movf	??_isr,w
  1504  0110  00D5               	movwf	_Pos_Servo_1
  1505  0111                     i1l1672:
  1506                           
  1507                           ;Proyecto_I_Esclavo_I.c: 115:             }else {
  1508  0111  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1509  0112  00AD               	movwf	??_isr
  1510  0113  082D               	movf	??_isr,w
  1511  0114  00A0               	movwf	sprintf@f
  1512  0115  0855               	movf	_Pos_Servo_1,w
  1513  0116  00AE               	movwf	??_isr+1
  1514  0117  01AF               	clrf	??_isr+2
  1515  0118  082E               	movf	??_isr+1,w
  1516  0119  00A1               	movwf	?_sprintf+1
  1517  011A  082F               	movf	??_isr+2,w
  1518  011B  00A2               	movwf	?_sprintf+2
  1519  011C  3040               	movlw	(low (_text| 0))& (0+255)
  1520  011D  120A  118A  238D  120A  118A  	fcall	_sprintf
  1521  0122  2903               	goto	i1l1668
  1522  0123                     i1l1676:
  1523  0123  3032               	movlw	50
  1524  0124  061A               	xorwf	26,w	;volatile
  1525  0125  1D03               	btfss	3,2
  1526  0126  2928               	goto	u96_21
  1527  0127  2929               	goto	u96_20
  1528  0128                     u96_21:
  1529  0128  2959               	goto	i1l1692
  1530  0129                     u96_20:
  1531  0129                     i1l1678:
  1532                           
  1533                           ;Proyecto_I_Esclavo_I.c: 119:             }
  1534  0129  0855               	movf	_Pos_Servo_1,w
  1535  012A  0256               	subwf	_V_Min_Servo,w
  1536  012B  1803               	skipnc
  1537  012C  292E               	goto	u97_21
  1538  012D  292F               	goto	u97_20
  1539  012E                     u97_21:
  1540  012E  2943               	goto	i1l1686
  1541  012F                     u97_20:
  1542  012F                     i1l1680:
  1543                           
  1544                           ;Proyecto_I_Esclavo_I.c: 120:         }
  1545  012F  3001               	movlw	1
  1546  0130  02D5               	subwf	_Pos_Servo_1,f
  1547  0131                     i1l1682:
  1548                           
  1549                           ;Proyecto_I_Esclavo_I.c: 121:         else if (RCREG == '7'){
  1550  0131  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1551  0132  00AD               	movwf	??_isr
  1552  0133  082D               	movf	??_isr,w
  1553  0134  00A0               	movwf	sprintf@f
  1554  0135  0855               	movf	_Pos_Servo_1,w
  1555  0136  00AE               	movwf	??_isr+1
  1556  0137  01AF               	clrf	??_isr+2
  1557  0138  082E               	movf	??_isr+1,w
  1558  0139  00A1               	movwf	?_sprintf+1
  1559  013A  082F               	movf	??_isr+2,w
  1560  013B  00A2               	movwf	?_sprintf+2
  1561  013C  3040               	movlw	(low (_text| 0))& (0+255)
  1562  013D  120A  118A  238D  120A  118A  	fcall	_sprintf
  1563  0142  2903               	goto	i1l1668
  1564  0143                     i1l1686:
  1565                           
  1566                           ;Proyecto_I_Esclavo_I.c: 124:                 sprintf(text,"Servo 4: %d",Pos_Servo_4);
  1567  0143  0857               	movf	_V_Max_Servo,w
  1568  0144  00AD               	movwf	??_isr
  1569  0145  082D               	movf	??_isr,w
  1570  0146  00D5               	movwf	_Pos_Servo_1
  1571  0147                     i1l1688:
  1572                           
  1573                           ;Proyecto_I_Esclavo_I.c: 125:                 Texto_USART(text);
  1574  0147  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1575  0148  00AD               	movwf	??_isr
  1576  0149  082D               	movf	??_isr,w
  1577  014A  00A0               	movwf	sprintf@f
  1578  014B  0855               	movf	_Pos_Servo_1,w
  1579  014C  00AE               	movwf	??_isr+1
  1580  014D  01AF               	clrf	??_isr+2
  1581  014E  082E               	movf	??_isr+1,w
  1582  014F  00A1               	movwf	?_sprintf+1
  1583  0150  082F               	movf	??_isr+2,w
  1584  0151  00A2               	movwf	?_sprintf+2
  1585  0152  3040               	movlw	(low (_text| 0))& (0+255)
  1586  0153  120A  118A  238D  120A  118A  	fcall	_sprintf
  1587  0158  2903               	goto	i1l1668
  1588  0159                     i1l1692:
  1589  0159  3033               	movlw	51
  1590  015A  061A               	xorwf	26,w	;volatile
  1591  015B  1D03               	btfss	3,2
  1592  015C  295E               	goto	u98_21
  1593  015D  295F               	goto	u98_20
  1594  015E                     u98_21:
  1595  015E  2991               	goto	i1l1708
  1596  015F                     u98_20:
  1597  015F                     i1l1694:
  1598                           
  1599                           ;Proyecto_I_Esclavo_I.c: 130:             }
  1600  015F  0857               	movf	_V_Max_Servo,w
  1601  0160  0254               	subwf	_Pos_Servo_2,w
  1602  0161  1803               	skipnc
  1603  0162  2964               	goto	u99_21
  1604  0163  2965               	goto	u99_20
  1605  0164                     u99_21:
  1606  0164  297B               	goto	i1l1702
  1607  0165                     u99_20:
  1608  0165                     i1l1696:
  1609                           
  1610                           ;Proyecto_I_Esclavo_I.c: 131:         } else if(RCREG == '8'){
  1611  0165  3001               	movlw	1
  1612  0166  00AD               	movwf	??_isr
  1613  0167  082D               	movf	??_isr,w
  1614  0168  07D4               	addwf	_Pos_Servo_2,f
  1615  0169                     i1l1698:
  1616                           
  1617                           ;Proyecto_I_Esclavo_I.c: 132:             if(Pos_Servo_4 > V_Min_Servo){
  1618  0169  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1619  016A  00AD               	movwf	??_isr
  1620  016B  082D               	movf	??_isr,w
  1621  016C  00A0               	movwf	sprintf@f
  1622  016D  0854               	movf	_Pos_Servo_2,w
  1623  016E  00AE               	movwf	??_isr+1
  1624  016F  01AF               	clrf	??_isr+2
  1625  0170  082E               	movf	??_isr+1,w
  1626  0171  00A1               	movwf	?_sprintf+1
  1627  0172  082F               	movf	??_isr+2,w
  1628  0173  00A2               	movwf	?_sprintf+2
  1629  0174  3040               	movlw	(low (_text| 0))& (0+255)
  1630  0175  120A  118A  238D  120A  118A  	fcall	_sprintf
  1631  017A  2903               	goto	i1l1668
  1632  017B                     i1l1702:
  1633                           
  1634                           ;Proyecto_I_Esclavo_I.c: 135:                 Texto_USART(text);
  1635  017B  0856               	movf	_V_Min_Servo,w
  1636  017C  00AD               	movwf	??_isr
  1637  017D  082D               	movf	??_isr,w
  1638  017E  00D4               	movwf	_Pos_Servo_2
  1639  017F                     i1l1704:
  1640                           
  1641                           ;Proyecto_I_Esclavo_I.c: 136:             }else {
  1642  017F  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1643  0180  00AD               	movwf	??_isr
  1644  0181  082D               	movf	??_isr,w
  1645  0182  00A0               	movwf	sprintf@f
  1646  0183  0854               	movf	_Pos_Servo_2,w
  1647  0184  00AE               	movwf	??_isr+1
  1648  0185  01AF               	clrf	??_isr+2
  1649  0186  082E               	movf	??_isr+1,w
  1650  0187  00A1               	movwf	?_sprintf+1
  1651  0188  082F               	movf	??_isr+2,w
  1652  0189  00A2               	movwf	?_sprintf+2
  1653  018A  3040               	movlw	(low (_text| 0))& (0+255)
  1654  018B  120A  118A  238D  120A  118A  	fcall	_sprintf
  1655  0190  2903               	goto	i1l1668
  1656  0191                     i1l1708:
  1657  0191  3034               	movlw	52
  1658  0192  061A               	xorwf	26,w	;volatile
  1659  0193  1D03               	btfss	3,2
  1660  0194  2996               	goto	u100_21
  1661  0195  2997               	goto	u100_20
  1662  0196                     u100_21:
  1663  0196  29C7               	goto	i1l1724
  1664  0197                     u100_20:
  1665  0197                     i1l1710:
  1666                           
  1667                           ;Proyecto_I_Esclavo_I.c: 140:             }
  1668  0197  0854               	movf	_Pos_Servo_2,w
  1669  0198  0256               	subwf	_V_Min_Servo,w
  1670  0199  1803               	skipnc
  1671  019A  299C               	goto	u101_21
  1672  019B  299D               	goto	u101_20
  1673  019C                     u101_21:
  1674  019C  29B1               	goto	i1l1718
  1675  019D                     u101_20:
  1676  019D                     i1l1712:
  1677                           
  1678                           ;Proyecto_I_Esclavo_I.c: 141:         }
  1679  019D  3001               	movlw	1
  1680  019E  02D4               	subwf	_Pos_Servo_2,f
  1681  019F                     i1l1714:
  1682                           
  1683                           ;Proyecto_I_Esclavo_I.c: 142:         else if (RCREG == '9'){
  1684  019F  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1685  01A0  00AD               	movwf	??_isr
  1686  01A1  082D               	movf	??_isr,w
  1687  01A2  00A0               	movwf	sprintf@f
  1688  01A3  0854               	movf	_Pos_Servo_2,w
  1689  01A4  00AE               	movwf	??_isr+1
  1690  01A5  01AF               	clrf	??_isr+2
  1691  01A6  082E               	movf	??_isr+1,w
  1692  01A7  00A1               	movwf	?_sprintf+1
  1693  01A8  082F               	movf	??_isr+2,w
  1694  01A9  00A2               	movwf	?_sprintf+2
  1695  01AA  3040               	movlw	(low (_text| 0))& (0+255)
  1696  01AB  120A  118A  238D  120A  118A  	fcall	_sprintf
  1697  01B0  2903               	goto	i1l1668
  1698  01B1                     i1l1718:
  1699                           
  1700                           ;Proyecto_I_Esclavo_I.c: 145:                 sprintf(text,"Servo 5: %d",Pos_Servo_5);
  1701  01B1  0857               	movf	_V_Max_Servo,w
  1702  01B2  00AD               	movwf	??_isr
  1703  01B3  082D               	movf	??_isr,w
  1704  01B4  00D4               	movwf	_Pos_Servo_2
  1705  01B5                     i1l1720:
  1706                           
  1707                           ;Proyecto_I_Esclavo_I.c: 146:                 Texto_USART(text);
  1708  01B5  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1709  01B6  00AD               	movwf	??_isr
  1710  01B7  082D               	movf	??_isr,w
  1711  01B8  00A0               	movwf	sprintf@f
  1712  01B9  0854               	movf	_Pos_Servo_2,w
  1713  01BA  00AE               	movwf	??_isr+1
  1714  01BB  01AF               	clrf	??_isr+2
  1715  01BC  082E               	movf	??_isr+1,w
  1716  01BD  00A1               	movwf	?_sprintf+1
  1717  01BE  082F               	movf	??_isr+2,w
  1718  01BF  00A2               	movwf	?_sprintf+2
  1719  01C0  3040               	movlw	(low (_text| 0))& (0+255)
  1720  01C1  120A  118A  238D  120A  118A  	fcall	_sprintf
  1721  01C6  2903               	goto	i1l1668
  1722  01C7                     i1l1724:
  1723  01C7  3035               	movlw	53
  1724  01C8  061A               	xorwf	26,w	;volatile
  1725  01C9  1D03               	btfss	3,2
  1726  01CA  29CC               	goto	u102_21
  1727  01CB  29CD               	goto	u102_20
  1728  01CC                     u102_21:
  1729  01CC  29FF               	goto	i1l1740
  1730  01CD                     u102_20:
  1731  01CD                     i1l1726:
  1732                           
  1733                           ;Proyecto_I_Esclavo_I.c: 151:             }
  1734  01CD  0857               	movf	_V_Max_Servo,w
  1735  01CE  0253               	subwf	_Pos_Servo_3,w
  1736  01CF  1803               	skipnc
  1737  01D0  29D2               	goto	u103_21
  1738  01D1  29D3               	goto	u103_20
  1739  01D2                     u103_21:
  1740  01D2  29E9               	goto	i1l1734
  1741  01D3                     u103_20:
  1742  01D3                     i1l1728:
  1743                           
  1744                           ;Proyecto_I_Esclavo_I.c: 152:         } else if(RCREG == '0'){
  1745  01D3  3001               	movlw	1
  1746  01D4  00AD               	movwf	??_isr
  1747  01D5  082D               	movf	??_isr,w
  1748  01D6  07D3               	addwf	_Pos_Servo_3,f
  1749  01D7                     i1l1730:
  1750                           
  1751                           ;Proyecto_I_Esclavo_I.c: 153:             if(Pos_Servo_5 > V_Min_Servo){
  1752  01D7  3023               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1753  01D8  00AD               	movwf	??_isr
  1754  01D9  082D               	movf	??_isr,w
  1755  01DA  00A0               	movwf	sprintf@f
  1756  01DB  0853               	movf	_Pos_Servo_3,w
  1757  01DC  00AE               	movwf	??_isr+1
  1758  01DD  01AF               	clrf	??_isr+2
  1759  01DE  082E               	movf	??_isr+1,w
  1760  01DF  00A1               	movwf	?_sprintf+1
  1761  01E0  082F               	movf	??_isr+2,w
  1762  01E1  00A2               	movwf	?_sprintf+2
  1763  01E2  3040               	movlw	(low (_text| 0))& (0+255)
  1764  01E3  120A  118A  238D  120A  118A  	fcall	_sprintf
  1765  01E8  2903               	goto	i1l1668
  1766  01E9                     i1l1734:
  1767                           
  1768                           ;Proyecto_I_Esclavo_I.c: 156:                 Texto_USART(text);
  1769  01E9  0856               	movf	_V_Min_Servo,w
  1770  01EA  00AD               	movwf	??_isr
  1771  01EB  082D               	movf	??_isr,w
  1772  01EC  00D3               	movwf	_Pos_Servo_3
  1773  01ED                     i1l1736:
  1774                           
  1775                           ;Proyecto_I_Esclavo_I.c: 157:             }else {
  1776  01ED  3023               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1777  01EE  00AD               	movwf	??_isr
  1778  01EF  082D               	movf	??_isr,w
  1779  01F0  00A0               	movwf	sprintf@f
  1780  01F1  0853               	movf	_Pos_Servo_3,w
  1781  01F2  00AE               	movwf	??_isr+1
  1782  01F3  01AF               	clrf	??_isr+2
  1783  01F4  082E               	movf	??_isr+1,w
  1784  01F5  00A1               	movwf	?_sprintf+1
  1785  01F6  082F               	movf	??_isr+2,w
  1786  01F7  00A2               	movwf	?_sprintf+2
  1787  01F8  3040               	movlw	(low (_text| 0))& (0+255)
  1788  01F9  120A  118A  238D  120A  118A  	fcall	_sprintf
  1789  01FE  2903               	goto	i1l1668
  1790  01FF                     i1l1740:
  1791  01FF  3036               	movlw	54
  1792  0200  061A               	xorwf	26,w	;volatile
  1793  0201  1D03               	btfss	3,2
  1794  0202  2A04               	goto	u104_21
  1795  0203  2A05               	goto	u104_20
  1796  0204                     u104_21:
  1797  0204  2A35               	goto	i1l1756
  1798  0205                     u104_20:
  1799  0205                     i1l1742:
  1800                           
  1801                           ;Proyecto_I_Esclavo_I.c: 161:             }
  1802  0205  0853               	movf	_Pos_Servo_3,w
  1803  0206  0256               	subwf	_V_Min_Servo,w
  1804  0207  1803               	skipnc
  1805  0208  2A0A               	goto	u105_21
  1806  0209  2A0B               	goto	u105_20
  1807  020A                     u105_21:
  1808  020A  2A1F               	goto	i1l1750
  1809  020B                     u105_20:
  1810  020B                     i1l1744:
  1811                           
  1812                           ;Proyecto_I_Esclavo_I.c: 162:         }
  1813  020B  3001               	movlw	1
  1814  020C  02D3               	subwf	_Pos_Servo_3,f
  1815  020D                     i1l1746:
  1816                           
  1817                           ;Proyecto_I_Esclavo_I.c: 163:         else if (RCREG == 'q'){
  1818  020D  3023               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1819  020E  00AD               	movwf	??_isr
  1820  020F  082D               	movf	??_isr,w
  1821  0210  00A0               	movwf	sprintf@f
  1822  0211  0853               	movf	_Pos_Servo_3,w
  1823  0212  00AE               	movwf	??_isr+1
  1824  0213  01AF               	clrf	??_isr+2
  1825  0214  082E               	movf	??_isr+1,w
  1826  0215  00A1               	movwf	?_sprintf+1
  1827  0216  082F               	movf	??_isr+2,w
  1828  0217  00A2               	movwf	?_sprintf+2
  1829  0218  3040               	movlw	(low (_text| 0))& (0+255)
  1830  0219  120A  118A  238D  120A  118A  	fcall	_sprintf
  1831  021E  2903               	goto	i1l1668
  1832  021F                     i1l1750:
  1833                           
  1834                           ;Proyecto_I_Esclavo_I.c: 166:                 sprintf(text,"Servo 6: %d",Pos_Servo_6);
  1835  021F  0857               	movf	_V_Max_Servo,w
  1836  0220  00AD               	movwf	??_isr
  1837  0221  082D               	movf	??_isr,w
  1838  0222  00D3               	movwf	_Pos_Servo_3
  1839  0223                     i1l1752:
  1840                           
  1841                           ;Proyecto_I_Esclavo_I.c: 167:                 Texto_USART(text);
  1842  0223  3023               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1843  0224  00AD               	movwf	??_isr
  1844  0225  082D               	movf	??_isr,w
  1845  0226  00A0               	movwf	sprintf@f
  1846  0227  0853               	movf	_Pos_Servo_3,w
  1847  0228  00AE               	movwf	??_isr+1
  1848  0229  01AF               	clrf	??_isr+2
  1849  022A  082E               	movf	??_isr+1,w
  1850  022B  00A1               	movwf	?_sprintf+1
  1851  022C  082F               	movf	??_isr+2,w
  1852  022D  00A2               	movwf	?_sprintf+2
  1853  022E  3040               	movlw	(low (_text| 0))& (0+255)
  1854  022F  120A  118A  238D  120A  118A  	fcall	_sprintf
  1855  0234  2903               	goto	i1l1668
  1856  0235                     i1l1756:
  1857  0235  3037               	movlw	55
  1858  0236  061A               	xorwf	26,w	;volatile
  1859  0237  1D03               	btfss	3,2
  1860  0238  2A3A               	goto	u106_21
  1861  0239  2A3B               	goto	u106_20
  1862  023A                     u106_21:
  1863  023A  2A6D               	goto	i1l1772
  1864  023B                     u106_20:
  1865  023B                     i1l1758:
  1866                           
  1867                           ;Proyecto_I_Esclavo_I.c: 172:             }
  1868  023B  0857               	movf	_V_Max_Servo,w
  1869  023C  0252               	subwf	_Pos_Servo_4,w
  1870  023D  1803               	skipnc
  1871  023E  2A40               	goto	u107_21
  1872  023F  2A41               	goto	u107_20
  1873  0240                     u107_21:
  1874  0240  2A57               	goto	i1l1766
  1875  0241                     u107_20:
  1876  0241                     i1l1760:
  1877                           
  1878                           ;Proyecto_I_Esclavo_I.c: 173:         } else if(RCREG == 'w'){
  1879  0241  3001               	movlw	1
  1880  0242  00AD               	movwf	??_isr
  1881  0243  082D               	movf	??_isr,w
  1882  0244  07D2               	addwf	_Pos_Servo_4,f
  1883  0245                     i1l1762:
  1884                           
  1885                           ;Proyecto_I_Esclavo_I.c: 174:             if(Pos_Servo_6 > V_Min_Servo){
  1886  0245  302F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1887  0246  00AD               	movwf	??_isr
  1888  0247  082D               	movf	??_isr,w
  1889  0248  00A0               	movwf	sprintf@f
  1890  0249  0852               	movf	_Pos_Servo_4,w
  1891  024A  00AE               	movwf	??_isr+1
  1892  024B  01AF               	clrf	??_isr+2
  1893  024C  082E               	movf	??_isr+1,w
  1894  024D  00A1               	movwf	?_sprintf+1
  1895  024E  082F               	movf	??_isr+2,w
  1896  024F  00A2               	movwf	?_sprintf+2
  1897  0250  3040               	movlw	(low (_text| 0))& (0+255)
  1898  0251  120A  118A  238D  120A  118A  	fcall	_sprintf
  1899  0256  2903               	goto	i1l1668
  1900  0257                     i1l1766:
  1901                           
  1902                           ;Proyecto_I_Esclavo_I.c: 177:                 Texto_USART(text);
  1903  0257  0856               	movf	_V_Min_Servo,w
  1904  0258  00AD               	movwf	??_isr
  1905  0259  082D               	movf	??_isr,w
  1906  025A  00D2               	movwf	_Pos_Servo_4
  1907  025B                     i1l1768:
  1908                           
  1909                           ;Proyecto_I_Esclavo_I.c: 178:             }else {
  1910  025B  302F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1911  025C  00AD               	movwf	??_isr
  1912  025D  082D               	movf	??_isr,w
  1913  025E  00A0               	movwf	sprintf@f
  1914  025F  0852               	movf	_Pos_Servo_4,w
  1915  0260  00AE               	movwf	??_isr+1
  1916  0261  01AF               	clrf	??_isr+2
  1917  0262  082E               	movf	??_isr+1,w
  1918  0263  00A1               	movwf	?_sprintf+1
  1919  0264  082F               	movf	??_isr+2,w
  1920  0265  00A2               	movwf	?_sprintf+2
  1921  0266  3040               	movlw	(low (_text| 0))& (0+255)
  1922  0267  120A  118A  238D  120A  118A  	fcall	_sprintf
  1923  026C  2903               	goto	i1l1668
  1924  026D                     i1l1772:
  1925  026D  3038               	movlw	56
  1926  026E  061A               	xorwf	26,w	;volatile
  1927  026F  1D03               	btfss	3,2
  1928  0270  2A72               	goto	u108_21
  1929  0271  2A73               	goto	u108_20
  1930  0272                     u108_21:
  1931  0272  2AA3               	goto	i1l1788
  1932  0273                     u108_20:
  1933  0273                     i1l1774:
  1934                           
  1935                           ;Proyecto_I_Esclavo_I.c: 182:             }
  1936  0273  0852               	movf	_Pos_Servo_4,w
  1937  0274  0256               	subwf	_V_Min_Servo,w
  1938  0275  1803               	skipnc
  1939  0276  2A78               	goto	u109_21
  1940  0277  2A79               	goto	u109_20
  1941  0278                     u109_21:
  1942  0278  2A8D               	goto	i1l1782
  1943  0279                     u109_20:
  1944  0279                     i1l1776:
  1945                           
  1946                           ;Proyecto_I_Esclavo_I.c: 183:         }
  1947  0279  3001               	movlw	1
  1948  027A  02D2               	subwf	_Pos_Servo_4,f
  1949  027B                     i1l1778:
  1950                           
  1951                           ;Proyecto_I_Esclavo_I.c: 184:         RCIF = 0;
  1952  027B  302F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1953  027C  00AD               	movwf	??_isr
  1954  027D  082D               	movf	??_isr,w
  1955  027E  00A0               	movwf	sprintf@f
  1956  027F  0852               	movf	_Pos_Servo_4,w
  1957  0280  00AE               	movwf	??_isr+1
  1958  0281  01AF               	clrf	??_isr+2
  1959  0282  082E               	movf	??_isr+1,w
  1960  0283  00A1               	movwf	?_sprintf+1
  1961  0284  082F               	movf	??_isr+2,w
  1962  0285  00A2               	movwf	?_sprintf+2
  1963  0286  3040               	movlw	(low (_text| 0))& (0+255)
  1964  0287  120A  118A  238D  120A  118A  	fcall	_sprintf
  1965  028C  2903               	goto	i1l1668
  1966  028D                     i1l1782:
  1967                           
  1968                           ;Proyecto_I_Esclavo_I.c: 187: 
  1969  028D  0857               	movf	_V_Max_Servo,w
  1970  028E  00AD               	movwf	??_isr
  1971  028F  082D               	movf	??_isr,w
  1972  0290  00D2               	movwf	_Pos_Servo_4
  1973  0291                     i1l1784:
  1974                           
  1975                           ;Proyecto_I_Esclavo_I.c: 188: void main(void) {
  1976  0291  302F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1977  0292  00AD               	movwf	??_isr
  1978  0293  082D               	movf	??_isr,w
  1979  0294  00A0               	movwf	sprintf@f
  1980  0295  0852               	movf	_Pos_Servo_4,w
  1981  0296  00AE               	movwf	??_isr+1
  1982  0297  01AF               	clrf	??_isr+2
  1983  0298  082E               	movf	??_isr+1,w
  1984  0299  00A1               	movwf	?_sprintf+1
  1985  029A  082F               	movf	??_isr+2,w
  1986  029B  00A2               	movwf	?_sprintf+2
  1987  029C  3040               	movlw	(low (_text| 0))& (0+255)
  1988  029D  120A  118A  238D  120A  118A  	fcall	_sprintf
  1989  02A2  2903               	goto	i1l1668
  1990  02A3                     i1l1788:
  1991  02A3  3039               	movlw	57
  1992  02A4  061A               	xorwf	26,w	;volatile
  1993  02A5  1D03               	btfss	3,2
  1994  02A6  2AA8               	goto	u110_21
  1995  02A7  2AA9               	goto	u110_20
  1996  02A8                     u110_21:
  1997  02A8  2ADB               	goto	i1l1804
  1998  02A9                     u110_20:
  1999  02A9                     i1l1790:
  2000                           
  2001                           ;Proyecto_I_Esclavo_I.c: 193:     Config_Oscilador();
  2002  02A9  0857               	movf	_V_Max_Servo,w
  2003  02AA  0251               	subwf	_Pos_Servo_5,w
  2004  02AB  1803               	skipnc
  2005  02AC  2AAE               	goto	u111_21
  2006  02AD  2AAF               	goto	u111_20
  2007  02AE                     u111_21:
  2008  02AE  2AC5               	goto	i1l1798
  2009  02AF                     u111_20:
  2010  02AF                     i1l1792:
  2011                           
  2012                           ;Proyecto_I_Esclavo_I.c: 194:     Valor_TMR0 = Config_TMR0();
  2013  02AF  3001               	movlw	1
  2014  02B0  00AD               	movwf	??_isr
  2015  02B1  082D               	movf	??_isr,w
  2016  02B2  07D1               	addwf	_Pos_Servo_5,f
  2017  02B3                     i1l1794:
  2018                           
  2019                           ;Proyecto_I_Esclavo_I.c: 195:     Config_USART();
  2020  02B3  303B               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2021  02B4  00AD               	movwf	??_isr
  2022  02B5  082D               	movf	??_isr,w
  2023  02B6  00A0               	movwf	sprintf@f
  2024  02B7  0851               	movf	_Pos_Servo_5,w
  2025  02B8  00AE               	movwf	??_isr+1
  2026  02B9  01AF               	clrf	??_isr+2
  2027  02BA  082E               	movf	??_isr+1,w
  2028  02BB  00A1               	movwf	?_sprintf+1
  2029  02BC  082F               	movf	??_isr+2,w
  2030  02BD  00A2               	movwf	?_sprintf+2
  2031  02BE  3040               	movlw	(low (_text| 0))& (0+255)
  2032  02BF  120A  118A  238D  120A  118A  	fcall	_sprintf
  2033  02C4  2903               	goto	i1l1668
  2034  02C5                     i1l1798:
  2035                           
  2036                           ;Proyecto_I_Esclavo_I.c: 198:     while(1){
  2037  02C5  0856               	movf	_V_Min_Servo,w
  2038  02C6  00AD               	movwf	??_isr
  2039  02C7  082D               	movf	??_isr,w
  2040  02C8  00D1               	movwf	_Pos_Servo_5
  2041  02C9                     i1l1800:
  2042                           
  2043                           ;Proyecto_I_Esclavo_I.c: 199:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  2044  02C9  303B               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2045  02CA  00AD               	movwf	??_isr
  2046  02CB  082D               	movf	??_isr,w
  2047  02CC  00A0               	movwf	sprintf@f
  2048  02CD  0851               	movf	_Pos_Servo_5,w
  2049  02CE  00AE               	movwf	??_isr+1
  2050  02CF  01AF               	clrf	??_isr+2
  2051  02D0  082E               	movf	??_isr+1,w
  2052  02D1  00A1               	movwf	?_sprintf+1
  2053  02D2  082F               	movf	??_isr+2,w
  2054  02D3  00A2               	movwf	?_sprintf+2
  2055  02D4  3040               	movlw	(low (_text| 0))& (0+255)
  2056  02D5  120A  118A  238D  120A  118A  	fcall	_sprintf
  2057  02DA  2903               	goto	i1l1668
  2058  02DB                     i1l1804:
  2059  02DB  3030               	movlw	48
  2060  02DC  061A               	xorwf	26,w	;volatile
  2061  02DD  1D03               	btfss	3,2
  2062  02DE  2AE0               	goto	u112_21
  2063  02DF  2AE1               	goto	u112_20
  2064  02E0                     u112_21:
  2065  02E0  2B11               	goto	i1l1820
  2066  02E1                     u112_20:
  2067  02E1                     i1l1806:
  2068                           
  2069                           ;Proyecto_I_Esclavo_I.c: 203: void config(void){
  2070  02E1  0851               	movf	_Pos_Servo_5,w
  2071  02E2  0256               	subwf	_V_Min_Servo,w
  2072  02E3  1803               	skipnc
  2073  02E4  2AE6               	goto	u113_21
  2074  02E5  2AE7               	goto	u113_20
  2075  02E6                     u113_21:
  2076  02E6  2AFB               	goto	i1l1814
  2077  02E7                     u113_20:
  2078  02E7                     i1l1808:
  2079                           
  2080                           ;Proyecto_I_Esclavo_I.c: 204:     TRISA = 0;
  2081  02E7  3001               	movlw	1
  2082  02E8  02D1               	subwf	_Pos_Servo_5,f
  2083  02E9                     i1l1810:
  2084                           
  2085                           ;Proyecto_I_Esclavo_I.c: 205:     TRISB = 0;
  2086  02E9  303B               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2087  02EA  00AD               	movwf	??_isr
  2088  02EB  082D               	movf	??_isr,w
  2089  02EC  00A0               	movwf	sprintf@f
  2090  02ED  0851               	movf	_Pos_Servo_5,w
  2091  02EE  00AE               	movwf	??_isr+1
  2092  02EF  01AF               	clrf	??_isr+2
  2093  02F0  082E               	movf	??_isr+1,w
  2094  02F1  00A1               	movwf	?_sprintf+1
  2095  02F2  082F               	movf	??_isr+2,w
  2096  02F3  00A2               	movwf	?_sprintf+2
  2097  02F4  3040               	movlw	(low (_text| 0))& (0+255)
  2098  02F5  120A  118A  238D  120A  118A  	fcall	_sprintf
  2099  02FA  2903               	goto	i1l1668
  2100  02FB                     i1l1814:
  2101                           
  2102                           ;Proyecto_I_Esclavo_I.c: 208: 
  2103  02FB  0857               	movf	_V_Max_Servo,w
  2104  02FC  00AD               	movwf	??_isr
  2105  02FD  082D               	movf	??_isr,w
  2106  02FE  00D1               	movwf	_Pos_Servo_5
  2107  02FF                     i1l1816:
  2108                           
  2109                           ;Proyecto_I_Esclavo_I.c: 209:     ANSEL = 0;
  2110  02FF  303B               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2111  0300  00AD               	movwf	??_isr
  2112  0301  082D               	movf	??_isr,w
  2113  0302  00A0               	movwf	sprintf@f
  2114  0303  0851               	movf	_Pos_Servo_5,w
  2115  0304  00AE               	movwf	??_isr+1
  2116  0305  01AF               	clrf	??_isr+2
  2117  0306  082E               	movf	??_isr+1,w
  2118  0307  00A1               	movwf	?_sprintf+1
  2119  0308  082F               	movf	??_isr+2,w
  2120  0309  00A2               	movwf	?_sprintf+2
  2121  030A  3040               	movlw	(low (_text| 0))& (0+255)
  2122  030B  120A  118A  238D  120A  118A  	fcall	_sprintf
  2123  0310  2903               	goto	i1l1668
  2124  0311                     i1l1820:
  2125  0311  3071               	movlw	113
  2126  0312  061A               	xorwf	26,w	;volatile
  2127  0313  1D03               	btfss	3,2
  2128  0314  2B16               	goto	u114_21
  2129  0315  2B17               	goto	u114_20
  2130  0316                     u114_21:
  2131  0316  2B49               	goto	i1l1836
  2132  0317                     u114_20:
  2133  0317                     i1l1822:
  2134                           
  2135                           ;Proyecto_I_Esclavo_I.c: 214:     PORTB = 0;
  2136  0317  0857               	movf	_V_Max_Servo,w
  2137  0318  0250               	subwf	_Pos_Servo_6,w
  2138  0319  1803               	skipnc
  2139  031A  2B1C               	goto	u115_21
  2140  031B  2B1D               	goto	u115_20
  2141  031C                     u115_21:
  2142  031C  2B33               	goto	i1l1830
  2143  031D                     u115_20:
  2144  031D                     i1l1824:
  2145                           
  2146                           ;Proyecto_I_Esclavo_I.c: 215: 
  2147  031D  3001               	movlw	1
  2148  031E  00AD               	movwf	??_isr
  2149  031F  082D               	movf	??_isr,w
  2150  0320  07D0               	addwf	_Pos_Servo_6,f
  2151  0321                     i1l1826:
  2152                           
  2153                           ;Proyecto_I_Esclavo_I.c: 216:     PORTD = 0;
  2154  0321  3047               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2155  0322  00AD               	movwf	??_isr
  2156  0323  082D               	movf	??_isr,w
  2157  0324  00A0               	movwf	sprintf@f
  2158  0325  0850               	movf	_Pos_Servo_6,w
  2159  0326  00AE               	movwf	??_isr+1
  2160  0327  01AF               	clrf	??_isr+2
  2161  0328  082E               	movf	??_isr+1,w
  2162  0329  00A1               	movwf	?_sprintf+1
  2163  032A  082F               	movf	??_isr+2,w
  2164  032B  00A2               	movwf	?_sprintf+2
  2165  032C  3040               	movlw	(low (_text| 0))& (0+255)
  2166  032D  120A  118A  238D  120A  118A  	fcall	_sprintf
  2167  0332  2903               	goto	i1l1668
  2168  0333                     i1l1830:
  2169  0333  0856               	movf	_V_Min_Servo,w
  2170  0334  00AD               	movwf	??_isr
  2171  0335  082D               	movf	??_isr,w
  2172  0336  00D0               	movwf	_Pos_Servo_6
  2173  0337                     i1l1832:
  2174  0337  3047               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2175  0338  00AD               	movwf	??_isr
  2176  0339  082D               	movf	??_isr,w
  2177  033A  00A0               	movwf	sprintf@f
  2178  033B  0850               	movf	_Pos_Servo_6,w
  2179  033C  00AE               	movwf	??_isr+1
  2180  033D  01AF               	clrf	??_isr+2
  2181  033E  082E               	movf	??_isr+1,w
  2182  033F  00A1               	movwf	?_sprintf+1
  2183  0340  082F               	movf	??_isr+2,w
  2184  0341  00A2               	movwf	?_sprintf+2
  2185  0342  3040               	movlw	(low (_text| 0))& (0+255)
  2186  0343  120A  118A  238D  120A  118A  	fcall	_sprintf
  2187  0348  2903               	goto	i1l1668
  2188  0349                     i1l1836:
  2189  0349  3077               	movlw	119
  2190  034A  061A               	xorwf	26,w	;volatile
  2191  034B  1D03               	btfss	3,2
  2192  034C  2B4E               	goto	u116_21
  2193  034D  2B4F               	goto	u116_20
  2194  034E                     u116_21:
  2195  034E  2B7F               	goto	i1l1852
  2196  034F                     u116_20:
  2197  034F                     i1l1838:
  2198  034F  0850               	movf	_Pos_Servo_6,w
  2199  0350  0256               	subwf	_V_Min_Servo,w
  2200  0351  1803               	skipnc
  2201  0352  2B54               	goto	u117_21
  2202  0353  2B55               	goto	u117_20
  2203  0354                     u117_21:
  2204  0354  2B69               	goto	i1l1846
  2205  0355                     u117_20:
  2206  0355                     i1l1840:
  2207  0355  3001               	movlw	1
  2208  0356  02D0               	subwf	_Pos_Servo_6,f
  2209  0357                     i1l1842:
  2210  0357  3047               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2211  0358  00AD               	movwf	??_isr
  2212  0359  082D               	movf	??_isr,w
  2213  035A  00A0               	movwf	sprintf@f
  2214  035B  0850               	movf	_Pos_Servo_6,w
  2215  035C  00AE               	movwf	??_isr+1
  2216  035D  01AF               	clrf	??_isr+2
  2217  035E  082E               	movf	??_isr+1,w
  2218  035F  00A1               	movwf	?_sprintf+1
  2219  0360  082F               	movf	??_isr+2,w
  2220  0361  00A2               	movwf	?_sprintf+2
  2221  0362  3040               	movlw	(low (_text| 0))& (0+255)
  2222  0363  120A  118A  238D  120A  118A  	fcall	_sprintf
  2223  0368  2903               	goto	i1l1668
  2224  0369                     i1l1846:
  2225  0369  0857               	movf	_V_Max_Servo,w
  2226  036A  00AD               	movwf	??_isr
  2227  036B  082D               	movf	??_isr,w
  2228  036C  00D0               	movwf	_Pos_Servo_6
  2229  036D                     i1l1848:
  2230  036D  3047               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2231  036E  00AD               	movwf	??_isr
  2232  036F  082D               	movf	??_isr,w
  2233  0370  00A0               	movwf	sprintf@f
  2234  0371  0850               	movf	_Pos_Servo_6,w
  2235  0372  00AE               	movwf	??_isr+1
  2236  0373  01AF               	clrf	??_isr+2
  2237  0374  082E               	movf	??_isr+1,w
  2238  0375  00A1               	movwf	?_sprintf+1
  2239  0376  082F               	movf	??_isr+2,w
  2240  0377  00A2               	movwf	?_sprintf+2
  2241  0378  3040               	movlw	(low (_text| 0))& (0+255)
  2242  0379  120A  118A  238D  120A  118A  	fcall	_sprintf
  2243  037E  2903               	goto	i1l1668
  2244  037F                     i1l1852:
  2245  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0381  128C               	bcf	12,5	;volatile
  2248  0382                     i1l146:
  2249  0382  0833               	movf	??_isr+6,w
  2250  0383  00FF               	movwf	btemp+1
  2251  0384  0832               	movf	??_isr+5,w
  2252  0385  008A               	movwf	10
  2253  0386  0831               	movf	??_isr+4,w
  2254  0387  0084               	movwf	4
  2255  0388  0E30               	swapf	??_isr+3,w
  2256  0389  0083               	movwf	3
  2257  038A  0EFE               	swapf	btemp,f
  2258  038B  0E7E               	swapf	btemp,w
  2259  038C  0009               	retfie
  2260  038D                     __end_of_isr:
  2261                           
  2262                           	psect	intentry
  2263  0004                     __pintentry:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2266                           
  2267  0004                     interrupt_function:
  2268  007E                     saved_w	set	btemp
  2269  0004  00FE               	movwf	btemp
  2270  0005  0E03               	swapf	3,w
  2271  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0008  00B0               	movwf	??_isr+3
  2274  0009  0804               	movf	4,w
  2275  000A  00B1               	movwf	??_isr+4
  2276  000B  080A               	movf	10,w
  2277  000C  00B2               	movwf	??_isr+5
  2278  000D  087F               	movf	btemp+1,w
  2279  000E  00B3               	movwf	??_isr+6
  2280  000F  120A  118A  282F   	ljmp	_isr
  2281                           
  2282                           	psect	text6
  2283  038D                     __ptext6:	
  2284 ;; *************** function _sprintf *****************
  2285 ;; Defined at:
  2286 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  sp              1    wreg     PTR unsigned char 
  2289 ;;		 -> text(16), 
  2290 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2291 ;;		 -> STR_24(12), STR_23(12), STR_22(12), STR_21(12), 
  2292 ;;		 -> STR_20(12), STR_19(12), STR_18(12), STR_17(12), 
  2293 ;;		 -> STR_16(12), STR_15(12), STR_14(12), STR_13(12), 
  2294 ;;		 -> STR_12(12), STR_11(12), STR_10(12), STR_9(12), 
  2295 ;;		 -> STR_8(12), STR_7(12), STR_6(12), STR_5(12), 
  2296 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  sp              1   12[BANK0 ] PTR unsigned char 
  2299 ;;		 -> text(16), 
  2300 ;;  tmpval          4    0        struct .
  2301 ;;  val             2    9[BANK0 ] unsigned int 
  2302 ;;  cp              2    0        PTR const unsigned char 
  2303 ;;  len             2    0        unsigned int 
  2304 ;;  c               1   11[BANK0 ] unsigned char 
  2305 ;;  prec            1    8[BANK0 ] char 
  2306 ;;  flag            1    7[BANK0 ] unsigned char 
  2307 ;;  ap              1    6[BANK0 ] PTR void [1]
  2308 ;;		 -> ?_sprintf(2), 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  2    0[BANK0 ] int 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2318 ;;      Params:         0       3       0       0       0
  2319 ;;      Locals:         0       7       0       0       0
  2320 ;;      Temps:          0       3       0       0       0
  2321 ;;      Totals:         0      13       0       0       0
  2322 ;;Total ram usage:       13 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 1
  2325 ;; This function calls:
  2326 ;;		___lwdiv
  2327 ;;		___lwmod
  2328 ;; This function is called by:
  2329 ;;		_isr
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _sprintf
  2335  038D                     _sprintf:
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2339                           ;sprintf@sp stored from wreg
  2340  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2341  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2342  038F  00AC               	movwf	sprintf@sp
  2343  0390                     i1l1536:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2346  0390  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2347  0391  00A3               	movwf	??_sprintf
  2348  0392  0823               	movf	??_sprintf,w
  2349  0393  00A6               	movwf	sprintf@ap
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2352  0394  2C5E               	goto	i1l1588
  2353  0395                     i1l1538:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2356  0395  3025               	movlw	37
  2357  0396  062B               	xorwf	sprintf@c,w
  2358  0397  1903               	btfsc	3,2
  2359  0398  2B9A               	goto	u78_21
  2360  0399  2B9B               	goto	u78_20
  2361  039A                     u78_21:
  2362  039A  2BA7               	goto	i1l1544
  2363  039B                     u78_20:
  2364  039B                     i1l1540:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2367  039B  082B               	movf	sprintf@c,w
  2368  039C  00A3               	movwf	??_sprintf
  2369  039D  082C               	movf	sprintf@sp,w
  2370  039E  0084               	movwf	4
  2371  039F  0823               	movf	??_sprintf,w
  2372  03A0  1383               	bcf	3,7	;select IRP bank0
  2373  03A1  0080               	movwf	0
  2374  03A2                     i1l1542:
  2375  03A2  3001               	movlw	1
  2376  03A3  00A3               	movwf	??_sprintf
  2377  03A4  0823               	movf	??_sprintf,w
  2378  03A5  07AC               	addwf	sprintf@sp,f
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2381  03A6  2C5E               	goto	i1l1588
  2382  03A7                     i1l1544:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2385  03A7  01A7               	clrf	sprintf@flag
  2386  03A8                     i1l1548:	
  2387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2388                           
  2389  03A8  3001               	movlw	1
  2390  03A9  07A0               	addwf	sprintf@f,f
  2391  03AA  30FF               	movlw	-1
  2392  03AB  0720               	addwf	sprintf@f,w
  2393  03AC  0084               	movwf	4
  2394  03AD  120A  118A  247F  120A  118A  	fcall	stringdir
  2395  03B2  00AB               	movwf	sprintf@c
  2396  03B3  00A3               	movwf	??_sprintf
  2397  03B4  01A4               	clrf	??_sprintf+1
  2398                           
  2399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2400                           ; Switch size 1, requested type "simple"
  2401                           ; Number of cases is 1, Range of values is 0 to 0
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte            4     3 (average)
  2405                           ; direct_byte           11     8 (fixed)
  2406                           ; jumptable            260     6 (fixed)
  2407                           ;	Chosen strategy is simple_byte
  2408  03B5  0824               	movf	??_sprintf+1,w
  2409  03B6  3A00               	xorlw	0	; case 0
  2410  03B7  1903               	skipnz
  2411  03B8  2BBA               	goto	i1l1954
  2412  03B9  2C5E               	goto	i1l1588
  2413  03BA                     i1l1954:
  2414                           
  2415                           ; Switch size 1, requested type "simple"
  2416                           ; Number of cases is 3, Range of values is 0 to 105
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte           10     6 (average)
  2420                           ; jumptable            260     6 (fixed)
  2421                           ;	Chosen strategy is simple_byte
  2422  03BA  0823               	movf	??_sprintf,w
  2423  03BB  3A00               	xorlw	0	; case 0
  2424  03BC  1903               	skipnz
  2425  03BD  2C70               	goto	i1l1590
  2426  03BE  3A64               	xorlw	100	; case 100
  2427  03BF  1903               	skipnz
  2428  03C0  2BC5               	goto	i1l1550
  2429  03C1  3A0D               	xorlw	13	; case 105
  2430  03C2  1903               	skipnz
  2431  03C3  2BC5               	goto	i1l1550
  2432  03C4  2C5E               	goto	i1l1588
  2433  03C5                     i1l1550:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2436  03C5  0826               	movf	sprintf@ap,w
  2437  03C6  0084               	movwf	4
  2438  03C7  1383               	bcf	3,7	;select IRP bank0
  2439  03C8  0800               	movf	0,w
  2440  03C9  00A9               	movwf	sprintf@val
  2441  03CA  0A84               	incf	4,f
  2442  03CB  0800               	movf	0,w
  2443  03CC  00AA               	movwf	sprintf@val+1
  2444  03CD                     i1l1552:
  2445  03CD  3002               	movlw	2
  2446  03CE  00A3               	movwf	??_sprintf
  2447  03CF  0823               	movf	??_sprintf,w
  2448  03D0  07A6               	addwf	sprintf@ap,f
  2449  03D1                     i1l1554:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2452  03D1  1FAA               	btfss	sprintf@val+1,7
  2453  03D2  2BD4               	goto	u79_21
  2454  03D3  2BD5               	goto	u79_20
  2455  03D4                     u79_21:
  2456  03D4  2BDE               	goto	i1l1560
  2457  03D5                     u79_20:
  2458  03D5                     i1l1556:
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2461  03D5  3003               	movlw	3
  2462  03D6  00A3               	movwf	??_sprintf
  2463  03D7  0823               	movf	??_sprintf,w
  2464  03D8  04A7               	iorwf	sprintf@flag,f
  2465  03D9                     i1l1558:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2468  03D9  09A9               	comf	sprintf@val,f
  2469  03DA  09AA               	comf	sprintf@val+1,f
  2470  03DB  0AA9               	incf	sprintf@val,f
  2471  03DC  1903               	skipnz
  2472  03DD  0AAA               	incf	sprintf@val+1,f
  2473  03DE                     i1l1560:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2476  03DE  01AB               	clrf	sprintf@c
  2477  03DF  0AAB               	incf	sprintf@c,f
  2478  03E0                     i1l1566:
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2481  03E0  082B               	movf	sprintf@c,w
  2482  03E1  00A3               	movwf	??_sprintf
  2483  03E2  0723               	addwf	??_sprintf,w
  2484  03E3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2485  03E4  0084               	movwf	4
  2486  03E5  120A  118A  247F  120A  118A  	fcall	stringdir
  2487  03EA  00A4               	movwf	??_sprintf+1
  2488  03EB  120A  118A  247F  120A  118A  	fcall	stringdir
  2489  03F0  00A5               	movwf	??_sprintf+2
  2490  03F1  0825               	movf	??_sprintf+2,w
  2491  03F2  022A               	subwf	sprintf@val+1,w
  2492  03F3  1D03               	skipz
  2493  03F4  2BF7               	goto	u80_25
  2494  03F5  0824               	movf	??_sprintf+1,w
  2495  03F6  0229               	subwf	sprintf@val,w
  2496  03F7                     u80_25:
  2497  03F7  1803               	skipnc
  2498  03F8  2BFA               	goto	u80_21
  2499  03F9  2BFB               	goto	u80_20
  2500  03FA                     u80_21:
  2501  03FA  2BFC               	goto	i1l1570
  2502  03FB                     u80_20:
  2503  03FB  2C06               	goto	i1l1572
  2504  03FC                     i1l1570:
  2505  03FC  3001               	movlw	1
  2506  03FD  00A3               	movwf	??_sprintf
  2507  03FE  0823               	movf	??_sprintf,w
  2508  03FF  07AB               	addwf	sprintf@c,f
  2509  0400  3005               	movlw	5
  2510  0401  062B               	xorwf	sprintf@c,w
  2511  0402  1D03               	btfss	3,2
  2512  0403  2C05               	goto	u81_21
  2513  0404  2C06               	goto	u81_20
  2514  0405                     u81_21:
  2515  0405  2BE0               	goto	i1l1566
  2516  0406                     u81_20:
  2517  0406                     i1l1572:
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2520  0406  0827               	movf	sprintf@flag,w
  2521  0407  3903               	andlw	3
  2522  0408  1903               	btfsc	3,2
  2523  0409  2C0B               	goto	u82_21
  2524  040A  2C0C               	goto	u82_20
  2525  040B                     u82_21:
  2526  040B  2C17               	goto	i1l1578
  2527  040C                     u82_20:
  2528  040C                     i1l1574:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2531  040C  302D               	movlw	45
  2532  040D  00A3               	movwf	??_sprintf
  2533  040E  082C               	movf	sprintf@sp,w
  2534  040F  0084               	movwf	4
  2535  0410  0823               	movf	??_sprintf,w
  2536  0411  1383               	bcf	3,7	;select IRP bank0
  2537  0412  0080               	movwf	0
  2538  0413                     i1l1576:
  2539  0413  3001               	movlw	1
  2540  0414  00A3               	movwf	??_sprintf
  2541  0415  0823               	movf	??_sprintf,w
  2542  0416  07AC               	addwf	sprintf@sp,f
  2543  0417                     i1l1578:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2546  0417  082B               	movf	sprintf@c,w
  2547  0418  00A3               	movwf	??_sprintf
  2548  0419  0823               	movf	??_sprintf,w
  2549  041A  00A8               	movwf	sprintf@prec
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2552  041B  2C55               	goto	i1l1586
  2553  041C                     i1l1580:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2556  041C  300A               	movlw	10
  2557  041D  00F8               	movwf	___lwmod@divisor
  2558  041E  3000               	movlw	0
  2559  041F  00F9               	movwf	___lwmod@divisor+1
  2560  0420  0828               	movf	sprintf@prec,w
  2561  0421  00A3               	movwf	??_sprintf
  2562  0422  0723               	addwf	??_sprintf,w
  2563  0423  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2564  0424  0084               	movwf	4
  2565  0425  120A  118A  247F  120A  118A  	fcall	stringdir
  2566  042A  00F0               	movwf	___lwdiv@divisor
  2567  042B  120A  118A  247F  120A  118A  	fcall	stringdir
  2568  0430  00F1               	movwf	___lwdiv@divisor+1
  2569  0431  082A               	movf	sprintf@val+1,w
  2570  0432  00F3               	movwf	___lwdiv@dividend+1
  2571  0433  0829               	movf	sprintf@val,w
  2572  0434  00F2               	movwf	___lwdiv@dividend
  2573  0435  120A  118A  24E7  120A  118A  	fcall	___lwdiv
  2574  043A  0871               	movf	?___lwdiv+1,w
  2575  043B  00FB               	movwf	___lwmod@dividend+1
  2576  043C  0870               	movf	?___lwdiv,w
  2577  043D  00FA               	movwf	___lwmod@dividend
  2578  043E  120A  118A  252B  120A  118A  	fcall	___lwmod
  2579  0443  0878               	movf	?___lwmod,w
  2580  0444  3E30               	addlw	48
  2581  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0447  00A4               	movwf	??_sprintf+1
  2584  0448  0824               	movf	??_sprintf+1,w
  2585  0449  00AB               	movwf	sprintf@c
  2586  044A                     i1l1582:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2589  044A  082B               	movf	sprintf@c,w
  2590  044B  00A3               	movwf	??_sprintf
  2591  044C  082C               	movf	sprintf@sp,w
  2592  044D  0084               	movwf	4
  2593  044E  0823               	movf	??_sprintf,w
  2594  044F  1383               	bcf	3,7	;select IRP bank0
  2595  0450  0080               	movwf	0
  2596  0451                     i1l1584:
  2597  0451  3001               	movlw	1
  2598  0452  00A3               	movwf	??_sprintf
  2599  0453  0823               	movf	??_sprintf,w
  2600  0454  07AC               	addwf	sprintf@sp,f
  2601  0455                     i1l1586:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2604  0455  30FF               	movlw	255
  2605  0456  00A3               	movwf	??_sprintf
  2606  0457  0823               	movf	??_sprintf,w
  2607  0458  07A8               	addwf	sprintf@prec,f
  2608  0459  0A28               	incf	sprintf@prec,w
  2609  045A  1D03               	btfss	3,2
  2610  045B  2C5D               	goto	u83_21
  2611  045C  2C5E               	goto	u83_20
  2612  045D                     u83_21:
  2613  045D  2C1C               	goto	i1l1580
  2614  045E                     u83_20:
  2615  045E                     i1l1588:
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2618  045E  3001               	movlw	1
  2619  045F  07A0               	addwf	sprintf@f,f
  2620  0460  30FF               	movlw	-1
  2621  0461  0720               	addwf	sprintf@f,w
  2622  0462  0084               	movwf	4
  2623  0463  120A  118A  247F  120A  118A  	fcall	stringdir
  2624  0468  00A3               	movwf	??_sprintf
  2625  0469  0823               	movf	??_sprintf,w
  2626  046A  00AB               	movwf	sprintf@c
  2627  046B  082B               	movf	sprintf@c,w
  2628  046C  1D03               	btfss	3,2
  2629  046D  2C6F               	goto	u84_21
  2630  046E  2C70               	goto	u84_20
  2631  046F                     u84_21:
  2632  046F  2B95               	goto	i1l1538
  2633  0470                     u84_20:
  2634  0470                     i1l1590:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2637  0470  082C               	movf	sprintf@sp,w
  2638  0471  0084               	movwf	4
  2639  0472  1383               	bcf	3,7	;select IRP bank0
  2640  0473  0180               	clrf	0
  2641  0474                     i1l426:
  2642  0474  0008               	return
  2643  0475                     __end_of_sprintf:
  2644                           
  2645                           	psect	text7
  2646  052B                     __ptext7:	
  2647 ;; *************** function ___lwmod *****************
  2648 ;; Defined at:
  2649 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  divisor         2    8[COMMON] unsigned int 
  2652 ;;  dividend        2   10[COMMON] unsigned int 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  counter         1   13[COMMON] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2    8[COMMON] unsigned int 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         4       0       0       0       0
  2665 ;;      Locals:         1       0       0       0       0
  2666 ;;      Temps:          1       0       0       0       0
  2667 ;;      Totals:         6       0       0       0       0
  2668 ;;Total ram usage:        6 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_sprintf
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function ___lwmod
  2679  052B                     ___lwmod:
  2680  052B                     i1l1514:	
  2681                           ;incstack = 0
  2682                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2683                           
  2684  052B  0878               	movf	___lwmod@divisor,w
  2685  052C  0479               	iorwf	___lwmod@divisor+1,w
  2686  052D  1903               	btfsc	3,2
  2687  052E  2D30               	goto	u72_21
  2688  052F  2D31               	goto	u72_20
  2689  0530                     u72_21:
  2690  0530  2D60               	goto	i1l1532
  2691  0531                     u72_20:
  2692  0531                     i1l1516:
  2693  0531  01FD               	clrf	___lwmod@counter
  2694  0532  0AFD               	incf	___lwmod@counter,f
  2695  0533  2D3F               	goto	i1l1522
  2696  0534                     i1l1518:
  2697  0534  3001               	movlw	1
  2698  0535                     u73_25:
  2699  0535  1003               	clrc
  2700  0536  0DF8               	rlf	___lwmod@divisor,f
  2701  0537  0DF9               	rlf	___lwmod@divisor+1,f
  2702  0538  3EFF               	addlw	-1
  2703  0539  1D03               	skipz
  2704  053A  2D35               	goto	u73_25
  2705  053B                     i1l1520:
  2706  053B  3001               	movlw	1
  2707  053C  00FC               	movwf	??___lwmod
  2708  053D  087C               	movf	??___lwmod,w
  2709  053E  07FD               	addwf	___lwmod@counter,f
  2710  053F                     i1l1522:
  2711  053F  1FF9               	btfss	___lwmod@divisor+1,7
  2712  0540  2D42               	goto	u74_21
  2713  0541  2D43               	goto	u74_20
  2714  0542                     u74_21:
  2715  0542  2D34               	goto	i1l1518
  2716  0543                     u74_20:
  2717  0543                     i1l1524:
  2718  0543  0879               	movf	___lwmod@divisor+1,w
  2719  0544  027B               	subwf	___lwmod@dividend+1,w
  2720  0545  1D03               	skipz
  2721  0546  2D49               	goto	u75_25
  2722  0547  0878               	movf	___lwmod@divisor,w
  2723  0548  027A               	subwf	___lwmod@dividend,w
  2724  0549                     u75_25:
  2725  0549  1C03               	skipc
  2726  054A  2D4C               	goto	u75_21
  2727  054B  2D4D               	goto	u75_20
  2728  054C                     u75_21:
  2729  054C  2D53               	goto	i1l1528
  2730  054D                     u75_20:
  2731  054D                     i1l1526:
  2732  054D  0878               	movf	___lwmod@divisor,w
  2733  054E  02FA               	subwf	___lwmod@dividend,f
  2734  054F  0879               	movf	___lwmod@divisor+1,w
  2735  0550  1C03               	skipc
  2736  0551  03FB               	decf	___lwmod@dividend+1,f
  2737  0552  02FB               	subwf	___lwmod@dividend+1,f
  2738  0553                     i1l1528:
  2739  0553  3001               	movlw	1
  2740  0554                     u76_25:
  2741  0554  1003               	clrc
  2742  0555  0CF9               	rrf	___lwmod@divisor+1,f
  2743  0556  0CF8               	rrf	___lwmod@divisor,f
  2744  0557  3EFF               	addlw	-1
  2745  0558  1D03               	skipz
  2746  0559  2D54               	goto	u76_25
  2747  055A                     i1l1530:
  2748  055A  3001               	movlw	1
  2749  055B  02FD               	subwf	___lwmod@counter,f
  2750  055C  1D03               	btfss	3,2
  2751  055D  2D5F               	goto	u77_21
  2752  055E  2D60               	goto	u77_20
  2753  055F                     u77_21:
  2754  055F  2D43               	goto	i1l1524
  2755  0560                     u77_20:
  2756  0560                     i1l1532:
  2757  0560  087B               	movf	___lwmod@dividend+1,w
  2758  0561  00F9               	movwf	?___lwmod+1
  2759  0562  087A               	movf	___lwmod@dividend,w
  2760  0563  00F8               	movwf	?___lwmod
  2761  0564                     i1l712:
  2762  0564  0008               	return
  2763  0565                     __end_of___lwmod:
  2764                           
  2765                           	psect	text8
  2766  04E7                     __ptext8:	
  2767 ;; *************** function ___lwdiv *****************
  2768 ;; Defined at:
  2769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  divisor         2    0[COMMON] unsigned int 
  2772 ;;  dividend        2    2[COMMON] unsigned int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  quotient        2    5[COMMON] unsigned int 
  2775 ;;  counter         1    7[COMMON] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  2    0[COMMON] unsigned int 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         4       0       0       0       0
  2786 ;;      Locals:         3       0       0       0       0
  2787 ;;      Temps:          1       0       0       0       0
  2788 ;;      Totals:         8       0       0       0       0
  2789 ;;Total ram usage:        8 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_sprintf
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function ___lwdiv
  2800  04E7                     ___lwdiv:
  2801  04E7                     i1l1488:	
  2802                           ;incstack = 0
  2803                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2804                           
  2805  04E7  01F5               	clrf	___lwdiv@quotient
  2806  04E8  01F6               	clrf	___lwdiv@quotient+1
  2807  04E9                     i1l1490:
  2808  04E9  0870               	movf	___lwdiv@divisor,w
  2809  04EA  0471               	iorwf	___lwdiv@divisor+1,w
  2810  04EB  1903               	btfsc	3,2
  2811  04EC  2CEE               	goto	u65_21
  2812  04ED  2CEF               	goto	u65_20
  2813  04EE                     u65_21:
  2814  04EE  2D26               	goto	i1l1510
  2815  04EF                     u65_20:
  2816  04EF                     i1l1492:
  2817  04EF  01F7               	clrf	___lwdiv@counter
  2818  04F0  0AF7               	incf	___lwdiv@counter,f
  2819  04F1  2CFD               	goto	i1l1498
  2820  04F2                     i1l1494:
  2821  04F2  3001               	movlw	1
  2822  04F3                     u66_25:
  2823  04F3  1003               	clrc
  2824  04F4  0DF0               	rlf	___lwdiv@divisor,f
  2825  04F5  0DF1               	rlf	___lwdiv@divisor+1,f
  2826  04F6  3EFF               	addlw	-1
  2827  04F7  1D03               	skipz
  2828  04F8  2CF3               	goto	u66_25
  2829  04F9                     i1l1496:
  2830  04F9  3001               	movlw	1
  2831  04FA  00F4               	movwf	??___lwdiv
  2832  04FB  0874               	movf	??___lwdiv,w
  2833  04FC  07F7               	addwf	___lwdiv@counter,f
  2834  04FD                     i1l1498:
  2835  04FD  1FF1               	btfss	___lwdiv@divisor+1,7
  2836  04FE  2D00               	goto	u67_21
  2837  04FF  2D01               	goto	u67_20
  2838  0500                     u67_21:
  2839  0500  2CF2               	goto	i1l1494
  2840  0501                     u67_20:
  2841  0501                     i1l1500:
  2842  0501  3001               	movlw	1
  2843  0502                     u68_25:
  2844  0502  1003               	clrc
  2845  0503  0DF5               	rlf	___lwdiv@quotient,f
  2846  0504  0DF6               	rlf	___lwdiv@quotient+1,f
  2847  0505  3EFF               	addlw	-1
  2848  0506  1D03               	skipz
  2849  0507  2D02               	goto	u68_25
  2850  0508  0871               	movf	___lwdiv@divisor+1,w
  2851  0509  0273               	subwf	___lwdiv@dividend+1,w
  2852  050A  1D03               	skipz
  2853  050B  2D0E               	goto	u69_25
  2854  050C  0870               	movf	___lwdiv@divisor,w
  2855  050D  0272               	subwf	___lwdiv@dividend,w
  2856  050E                     u69_25:
  2857  050E  1C03               	skipc
  2858  050F  2D11               	goto	u69_21
  2859  0510  2D12               	goto	u69_20
  2860  0511                     u69_21:
  2861  0511  2D19               	goto	i1l1506
  2862  0512                     u69_20:
  2863  0512                     i1l1502:
  2864  0512  0870               	movf	___lwdiv@divisor,w
  2865  0513  02F2               	subwf	___lwdiv@dividend,f
  2866  0514  0871               	movf	___lwdiv@divisor+1,w
  2867  0515  1C03               	skipc
  2868  0516  03F3               	decf	___lwdiv@dividend+1,f
  2869  0517  02F3               	subwf	___lwdiv@dividend+1,f
  2870  0518                     i1l1504:
  2871  0518  1475               	bsf	___lwdiv@quotient,0
  2872  0519                     i1l1506:
  2873  0519  3001               	movlw	1
  2874  051A                     u70_25:
  2875  051A  1003               	clrc
  2876  051B  0CF1               	rrf	___lwdiv@divisor+1,f
  2877  051C  0CF0               	rrf	___lwdiv@divisor,f
  2878  051D  3EFF               	addlw	-1
  2879  051E  1D03               	skipz
  2880  051F  2D1A               	goto	u70_25
  2881  0520                     i1l1508:
  2882  0520  3001               	movlw	1
  2883  0521  02F7               	subwf	___lwdiv@counter,f
  2884  0522  1D03               	btfss	3,2
  2885  0523  2D25               	goto	u71_21
  2886  0524  2D26               	goto	u71_20
  2887  0525                     u71_21:
  2888  0525  2D01               	goto	i1l1500
  2889  0526                     u71_20:
  2890  0526                     i1l1510:
  2891  0526  0876               	movf	___lwdiv@quotient+1,w
  2892  0527  00F1               	movwf	?___lwdiv+1
  2893  0528  0875               	movf	___lwdiv@quotient,w
  2894  0529  00F0               	movwf	?___lwdiv
  2895  052A                     i1l702:
  2896  052A  0008               	return
  2897  052B                     __end_of___lwdiv:
  2898                           
  2899                           	psect	text9
  2900  0565                     __ptext9:	
  2901 ;; *************** function _Texto_USART *****************
  2902 ;; Defined at:
  2903 ;;		line 162 in file "../../LIB/LIB.X/LIB.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  texto           2    0[COMMON] PTR unsigned char 
  2906 ;;		 -> STR_26(8), STR_25(8), text(16), 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  i               1    4[COMMON] unsigned char 
  2909 ;;  temp            1    0        unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2919 ;;      Params:         2       0       0       0       0
  2920 ;;      Locals:         1       0       0       0       0
  2921 ;;      Temps:          2       0       0       0       0
  2922 ;;      Totals:         5       0       0       0       0
  2923 ;;Total ram usage:        5 bytes
  2924 ;; Hardware stack levels used: 2
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_isr
  2929 ;;		_texto_Programa
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           
  2934                           ;psect for function _Texto_USART
  2935  0565                     _Texto_USART:
  2936  0565                     i1l1598:	
  2937                           ;incstack = 0
  2938                           ; Regs used in _Texto_USART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2939                           
  2940  0565                     i1l1600:
  2941                           
  2942                           ;../../LIB/LIB.X/LIB.c: 164:     char i = 0;
  2943  0565  01F4               	clrf	Texto_USART@i
  2944                           
  2945                           ;../../LIB/LIB.X/LIB.c: 165:     while(texto[i] != '\0'){
  2946  0566  2D81               	goto	i1l1608
  2947  0567                     i1l1602:
  2948                           
  2949                           ;../../LIB/LIB.X/LIB.c: 166:         TXREG = texto[i];
  2950  0567  0874               	movf	Texto_USART@i,w
  2951  0568  0770               	addwf	Texto_USART@texto,w
  2952  0569  0084               	movwf	4
  2953  056A  0871               	movf	Texto_USART@texto+1,w
  2954  056B  1803               	skipnc
  2955  056C  0A71               	incf	Texto_USART@texto+1,w
  2956  056D  00FF               	movwf	btemp+1
  2957  056E  120A  118A  2475  120A  118A  	fcall	stringtab
  2958  0573  0099               	movwf	25	;volatile
  2959  0574                     i1l1604:
  2960                           
  2961                           ;../../LIB/LIB.X/LIB.c: 167:         i++;
  2962  0574  3001               	movlw	1
  2963  0575  00F2               	movwf	??_Texto_USART
  2964  0576  0872               	movf	??_Texto_USART,w
  2965  0577  07F4               	addwf	Texto_USART@i,f
  2966  0578                     i1l1606:
  2967                           
  2968                           ;../../LIB/LIB.X/LIB.c: 168:         _delay((unsigned long)((5)*(8000000/4000.0)));
  2969  0578  300D               	movlw	13
  2970  0579  00F3               	movwf	??_Texto_USART+1
  2971  057A  30FB               	movlw	251
  2972  057B  00F2               	movwf	??_Texto_USART
  2973  057C                     u119_27:
  2974  057C  0BF2               	decfsz	??_Texto_USART,f
  2975  057D  2D7C               	goto	u119_27
  2976  057E  0BF3               	decfsz	??_Texto_USART+1,f
  2977  057F  2D7C               	goto	u119_27
  2978  0580  2D81               	nop2
  2979  0581                     i1l1608:
  2980                           
  2981                           ;../../LIB/LIB.X/LIB.c: 165:     while(texto[i] != '\0'){
  2982  0581  0874               	movf	Texto_USART@i,w
  2983  0582  0770               	addwf	Texto_USART@texto,w
  2984  0583  0084               	movwf	4
  2985  0584  0871               	movf	Texto_USART@texto+1,w
  2986  0585  1803               	skipnc
  2987  0586  0A71               	incf	Texto_USART@texto+1,w
  2988  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0589  00FF               	movwf	btemp+1
  2991  058A  120A  118A  2475  120A  118A  	fcall	stringtab
  2992  058F  3A00               	xorlw	0
  2993  0590  1D03               	skipz
  2994  0591  2D93               	goto	u85_21
  2995  0592  2D94               	goto	u85_20
  2996  0593                     u85_21:
  2997  0593  2D67               	goto	i1l1602
  2998  0594                     u85_20:
  2999  0594                     i1l1610:
  3000                           
  3001                           ;../../LIB/LIB.X/LIB.c: 170:     TXREG = '\r';
  3002  0594  300D               	movlw	13
  3003  0595  0099               	movwf	25	;volatile
  3004                           
  3005                           ;../../LIB/LIB.X/LIB.c: 171:     TXREG = '\n';
  3006  0596  300A               	movlw	10
  3007  0597  0099               	movwf	25	;volatile
  3008  0598                     i1l305:
  3009  0598  0008               	return
  3010  0599                     __end_of_Texto_USART:
  3011  007E                     btemp	set	126	;btemp
  3012  007E                     wtemp0	set	126
  3013                           
  3014                           	psect	config
  3015                           
  3016                           ;Config register CONFIG1 @ 0x2007
  3017                           ;	Oscillator Selection bits
  3018                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3019                           ;	Watchdog Timer Enable bit
  3020                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3021                           ;	Power-up Timer Enable bit
  3022                           ;	PWRTE = OFF, PWRT disabled
  3023                           ;	RE3/MCLR pin function select bit
  3024                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3025                           ;	Code Protection bit
  3026                           ;	CP = OFF, Program memory code protection is disabled
  3027                           ;	Data Code Protection bit
  3028                           ;	CPD = OFF, Data memory code protection is disabled
  3029                           ;	Brown Out Reset Selection bits
  3030                           ;	BOREN = OFF, BOR disabled
  3031                           ;	Internal External Switchover bit
  3032                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3033                           ;	Fail-Safe Clock Monitor Enabled bit
  3034                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3035                           ;	Low Voltage Programming Enable bit
  3036                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3037                           ;	In-Circuit Debugger Mode bit
  3038                           ;	DEBUG = 0x1, unprogrammed default
  3039  2007                     	org	8199
  3040  2007  20D4               	dw	8404
  3041                           
  3042                           ;Config register CONFIG2 @ 0x2008
  3043                           ;	Brown-out Reset Selection bit
  3044                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3045                           ;	Flash Program Memory Self Write Enable bits
  3046                           ;	WRT = OFF, Write protection off
  3047  2008                     	org	8200
  3048  2008  3FFF               	dw	16383

Data Sizes:
    Strings     88
    Constant    10
    Data        8
    BSS         16
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      57
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_24(CODE[12]), STR_23(CODE[12]), STR_22(CODE[12]), STR_21(CODE[12]), 
		 -> STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[12]), STR_17(CODE[12]), 
		 -> STR_16(CODE[12]), STR_15(CODE[12]), STR_14(CODE[12]), STR_13(CODE[12]), 
		 -> STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[12]), 
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[12]), STR_5(CODE[12]), 
		 -> STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> text(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Texto_USART@texto	PTR unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[8]), STR_25(CODE[8]), text(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      65
                                              0 BANK1      3     3      0
                   _Config_Oscilador
                        _Config_TMR0
                       _Config_USART
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0                                          1     1      0      65
 ---------------------------------------------------------------------------------
 (1) _Config_Oscilador                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 19    19      0    5929
                                             13 BANK0     19    19      0
                        _Texto_USART
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    3718
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _Texto_USART                                          6     4      2    2067
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Oscilador
   _Config_TMR0
   _Config_USART
   _config

 _isr (ROOT)
   _Texto_USART
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3       3       7        3.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 24 16:44:47 2021

                        pc 0002                         fsr 0004                        l157 05FF  
                      l256 0626                        l259 060E                        l268 05DB  
                      _RA0 0028                        _RB0 0030                        _RB1 0031  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _PS0 0408                        _PS1 0409                        _PS2 040A  
                      _PSA 040B                        _isr 002F                        fsr0 0004  
                      indf 0000                       l1910 061F                       l1912 0624  
                     l1920 05C7                       l1914 0600                       l1922 05D5  
                     l1930 05AF                       l1916 0607                       l1908 05EF  
                     l1932 05B4                       l1924 0599                       l1926 059E  
                     l1928 05A3                       _ADIF 0066                       ?_isr 0070  
                     STR_1 048F                       STR_2 048F                       STR_3 048F  
                     STR_4 048F                       STR_5 049B                       STR_6 049B  
                     STR_7 049B                       STR_8 049B                       STR_9 04A7  
                     _T0IF 005A                       _CREN 00C4                       _T0CS 040D  
                     u1187 05BC                       _RBIE 005B                       _RCIF 0065  
                     i1l80 0042                       i1l82 004F                       i1l91 00A3  
                     i1l83 005E                       i1l92 00B2                       i1l85 006B  
                     i1l94 00BF                       i1l86 007A                       i1l95 00CE  
                     i1l79 00DE                       i1l88 0087                       i1l97 00DB  
                     i1l89 0096                       _TMR0 0001                       _SPEN 00C7  
                     _TXEN 04C5                       _SYNC 04C4                       _main 0599  
                     _text 0040                       btemp 007E                       isr@i 0034  
                     start 0012        __end_of_Config_TMR0 060F                      ??_isr 002D  
                    ?_main 0070                      STR_10 04A7                      STR_11 04A7  
                    STR_12 04A7                      STR_20 04BF                      STR_21 04CB  
                    STR_13 04B3                      STR_14 04B3                      STR_22 04CB  
                    STR_15 04B3                      STR_23 04CB                      STR_16 04B3  
                    STR_24 04CB                      STR_25 04D7                      STR_17 04BF  
                    STR_18 04BF                      STR_26 04DF                      STR_19 04BF  
                    _ANSEL 0188                      _IOCB0 04B0                      _IOCB1 04B1  
                    _IRCF0 047C                      _IRCF1 047D                      _IRCF2 047E  
          __end_of___lwdiv 052B                      i1l305 0598                      i1l146 0382  
          __end_of___lwmod 0565                      i1l426 0474                      i1l702 052A  
                    i1l712 0564                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u70_25 051A  
                    u71_20 0526                      u71_21 0525                      u72_20 0531  
                    u80_20 03FB                      u72_21 0530                      u80_21 03FA  
                    u80_25 03F7                      u65_20 04EF                      u81_20 0406  
                    u65_21 04EE                      u81_21 0405                      _TRISA 0085  
                    _TRISB 0086                      u73_25 0535                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      u74_20 0543  
                    u82_20 040C                      u90_20 00A3                      u74_21 0542  
                    u82_21 040B                      u90_21 00A2                      u66_25 04F3  
                    u90_25 009F                      u67_20 0501                      u75_20 054D  
                    u83_20 045E                      u91_20 00BF                      u67_21 0500  
                    u75_21 054C                      u83_21 045D                      u91_21 00BE  
                    u75_25 0549                      u91_25 00BB                      u84_20 0470  
                    u92_20 00DB                      u84_21 046F                      u92_21 00DA  
                    u68_25 0502                      u76_25 0554                      u92_25 00D7  
                    u85_20 0594                      u69_20 0512                      u77_20 0560  
                    u93_20 00E2                      u85_21 0593                      u69_21 0511  
                    u77_21 055F                      u93_21 00E1                      u69_25 050E  
                    u78_20 039B                      u94_20 00E8                      u86_20 0033  
                    u78_21 039A                      u94_21 00E7                      u86_21 0032  
                    u79_20 03D5                      u95_20 00EE                      u87_20 004F  
                    u79_21 03D4                      u95_21 00ED                      u87_21 004E  
                    u87_25 004B                      u96_20 0129                      u88_20 006B  
                    u96_21 0128                      u88_21 006A                      u88_25 0067  
                    u97_20 012F                      u89_20 0087                      u97_21 012E  
                    u89_21 0086                      _TXREG 0019                      u89_25 0083  
                    u98_20 015F                      u98_21 015E                      u99_20 0165  
                    u99_21 0164            __end_of_dpowers 048F                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0475  
     __end_of_Config_USART 05DC            __initialization 0015               __end_of_main 05C7  
                   ??_main 00A0                     _ADRESH 001E                     _ANSELH 0189  
                   u100_20 0197                     u100_21 0196                     u101_20 019D  
                   u101_21 019C                     u110_20 02A9                     u102_20 01CD  
                   u110_21 02A8                     u102_21 01CC                     u111_20 02AF  
                   u103_20 01D3                     u111_21 02AE                     u103_21 01D2  
                   i1l1500 0501                     i1l1502 0512                     i1l1510 0526  
                   i1l1600 0565                     i1l1504 0518                     i1l1520 053B  
                   u112_20 02E1                     u104_20 0205                     u112_21 02E0  
                   u104_21 0204                     i1l1610 0594                     i1l1602 0567  
                   i1l1506 0519                     i1l1530 055A                     i1l1522 053F  
                   i1l1514 052B                     i1l1604 0574                     i1l1508 0520  
                   i1l1524 0543                     i1l1516 0531                     i1l1532 0560  
                   i1l1540 039B                     i1l1606 0578                     i1l1526 054D  
                   i1l1518 0534                     i1l1550 03C5                     i1l1542 03A2  
                   i1l1710 0197                     i1l1702 017B                     i1l1630 0033  
                   i1l1608 0581                     i1l1528 0553                     i1l1560 03DE  
                   i1l1552 03CD                     i1l1544 03A7                     i1l1536 0390  
                   u113_20 02E7                     i1l1800 02C9                     u105_20 020B  
                   i1l1720 01B5                     i1l1712 019D                     i1l1704 017F  
                   i1l1640 0053                     i1l1632 0034                     u113_21 02E6  
                   u105_21 020A                     i1l1490 04E9                     i1l1570 03FC  
                   i1l1554 03D1                     i1l1538 0395                     i1l1810 02E9  
                   i1l1730 01D7                     i1l1714 019F                     i1l1650 008E  
                   i1l1642 0056                     i1l1634 0036                     i1l1492 04EF  
                   i1l1580 041C                     i1l1572 0406                     i1l1556 03D5  
                   i1l1548 03A8                     i1l1820 0311                     i1l1804 02DB  
                   i1l1740 01FF                     i1l1724 01C7                     i1l1708 0191  
                   i1l1660 00E2                     i1l1652 00A7                     i1l1644 006F  
                   i1l1636 0037                     i1l1628 002F                     i1l1494 04F2  
                   i1l1582 044A                     i1l1574 040C                     i1l1566 03E0  
                   i1l1558 03D9                     i1l1590 0470                     i1l1830 0333  
                   i1l1822 0317                     i1l1814 02FB                     i1l1806 02E1  
                   i1l1750 021F                     i1l1742 0205                     i1l1734 01E9  
                   i1l1726 01CD                     i1l1718 01B1                     i1l1670 010D  
                   i1l1662 00E8                     i1l1654 00AA                     i1l1646 0072  
                   i1l1638 003A                     i1l1496 04F9                     i1l1488 04E7  
                   i1l1584 0451                     i1l1576 0413                     i1l1840 0355  
                   i1l1832 0337                     i1l1824 031D                     u114_20 0317  
                   i1l1816 02FF                     i1l1808 02E7                     i1l1760 0241  
                   u106_20 023B                     i1l1752 0223                     i1l1744 020B  
                   i1l1736 01ED                     i1l1728 01D3                     i1l1680 012F  
                   i1l1672 0111                     i1l1664 00EE                     i1l1656 00C3  
                   i1l1648 008B                     u114_21 0316                     u106_21 023A  
                   i1l1498 04FD                     i1l1586 0455                     i1l1578 0417  
                   i1l1842 0357                     i1l1826 0321                     i1l1762 0245  
                   i1l1746 020D                     i1l1682 0131                     i1l1666 00F2  
                   i1l1658 00C6                     i1l1588 045E                     i1l1836 0349  
                   i1l1772 026D                     i1l1756 0235                     i1l1692 0159  
                   i1l1852 037F                     i1l1668 0103                     i1l1676 0123  
                   i1l1598 0565                     i1l1846 0369                     i1l1838 034F  
                   i1l1790 02A9                     i1l1782 028D                     i1l1774 0273  
                   i1l1766 0257                     i1l1758 023B                     i1l1694 015F  
                   i1l1686 0143                     i1l1678 0129                     i1l1848 036D  
                   u115_20 031D                     i1l1792 02AF                     i1l1784 0291  
                   i1l1776 0279                     i1l1768 025B                     u107_20 0241  
                   i1l1696 0165                     i1l1688 0147                     u115_21 031C  
                   u107_21 0240                     i1l1954 03BA                     i1l1794 02B3  
                   i1l1778 027B                     i1l1698 0169                     i1l1788 02A3  
                   i1l1798 02C5                     u116_20 034F                     u108_20 0273  
                   u116_21 034E                     u108_21 0272                     u117_20 0355  
                   u109_20 0279                     u117_21 0354                     u109_21 0278  
                   u119_27 057C                     _INTCON 000B                _Config_TMR0 0600  
               _Valor_TMR0 0058   __end_of_Config_Oscilador 0627                  ??___lwdiv 0074  
                ??___lwmod 007C                     _config 05EF                     saved_w 007E  
              _V_Max_Servo 0057                  ??_sprintf 0023                _V_Min_Servo 0056  
  __end_of__initialization 002B              ??_Texto_USART 0072             __pcstackCOMMON 0070  
             __pidataBANK0 060F             _OPTION_REGbits 0081                 __pbssBANK0 0040  
    __size_of_Config_USART 0015                 __pmaintext 0599        __end_of_Texto_USART 0599  
               __pintentry 0004                    ?_config 0070               _Config_USART 05C7  
               __stringtab 0475                _Pos_Servo_1 0055                _Pos_Servo_2 0054  
              _Pos_Servo_3 0053                _Pos_Servo_4 0052                _Pos_Servo_5 0051  
              _Pos_Servo_6 0050                    ___lwdiv 04E7                    ___lwmod 052B  
          __size_of_config 0011                    __ptext1 05EF                    __ptext2 05C7  
                  __ptext3 0600                    __ptext4 061F                    __ptext5 002F  
                  __ptext6 038D                    __ptext7 052B                    __ptext8 04E7  
                  __ptext9 0565                    _dpowers 0485           Texto_USART@texto 0070  
             __size_of_isr 035E                    _sprintf 038D                    clrloop0 0618  
     end_of_initialization 002B                    isr@i_91 0036                    isr@i_92 0038  
                  isr@i_93 003A                    isr@i_94 003C                    isr@i_95 003E  
             ?_Config_TMR0 0070                _Texto_USART 0565          ?_Config_Oscilador 0070  
                _PORTCbits 0007         ??_Config_Oscilador 00A0             __end_of_config 0600  
      start_initialization 0015                __end_of_isr 038D                 init_fetch0 05DC  
                 ??_config 00A0                __pdataBANK0 0050                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0                sprintf@flag 0027  
              sprintf@prec 0028                  __pnvBANK0 0058       __size_of_Config_TMR0 000F  
         ___lwdiv@dividend 0072                   ?___lwdiv 0070                   ?___lwmod 0078  
                __pstrings 0475           ___lwdiv@quotient 0075                   ?_sprintf 0020  
        interrupt_function 0004               ?_Texto_USART 0070                  clear_ram0 0617  
                 _PIE1bits 008C                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 0484                 _ADCON1bits 009F                   _WPUBbits 0095  
__size_of_Config_Oscilador 0008           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0485                 sprintf@val 0029            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077           __size_of_sprintf 00E8              __size_of_main 002E  
               _INTCONbits 000B              ?_Config_USART 0070                   init_ram0 05E0  
                 intlevel1 0000                  sprintf@ap 0026                  sprintf@sp 002C  
         ___lwmod@dividend 007A                  stringcode 047F       __size_of_Texto_USART 0034  
                 sprintf@c 002B                   sprintf@f 0020            ___lwmod@divisor 0078  
           ??_Config_USART 00A0            ___lwmod@counter 007D               Texto_USART@i 0074  
                 stringdir 047F                   stringtab 0475           _Config_Oscilador 061F  
            ??_Config_TMR0 00A0  
