

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 23 11:13:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0007                     _PORTCbits	set	7
   368  0019                     _TXREG	set	25
   369  001E                     _ADRESH	set	30
   370  0007                     _PORTC	set	7
   371  000C                     _PIR1bits	set	12
   372  000B                     _INTCONbits	set	11
   373  001F                     _ADCON0bits	set	31
   374  0001                     _TMR0	set	1
   375  000B                     _INTCON	set	11
   376  0009                     _PORTEbits	set	9
   377  0005                     _PORTAbits	set	5
   378  0009                     _PORTE	set	9
   379  0008                     _PORTD	set	8
   380  0006                     _PORTB	set	6
   381  0005                     _PORTA	set	5
   382  0028                     _RA0	set	40
   383  00C4                     _CREN	set	196
   384  00C7                     _SPEN	set	199
   385  0066                     _ADIF	set	102
   386  005B                     _RBIE	set	91
   387  0031                     _RB1	set	49
   388  0030                     _RB0	set	48
   389  0087                     _TRISC	set	135
   390  0099                     _SPBRG	set	153
   391  008C                     _PIE1bits	set	140
   392  009F                     _ADCON1bits	set	159
   393  0095                     _WPUBbits	set	149
   394  0081                     _OPTION_REGbits	set	129
   395  0088                     _TRISD	set	136
   396  0089                     _TRISE	set	137
   397  0086                     _TRISB	set	134
   398  0085                     _TRISA	set	133
   399  04C4                     _SYNC	set	1220
   400  04C5                     _TXEN	set	1221
   401  04B1                     _IOCB1	set	1201
   402  04B0                     _IOCB0	set	1200
   403  040B                     _PSA	set	1035
   404  040D                     _T0CS	set	1037
   405  040A                     _PS2	set	1034
   406  0409                     _PS1	set	1033
   407  0408                     _PS0	set	1032
   408  047E                     _IRCF2	set	1150
   409  047D                     _IRCF1	set	1149
   410  047C                     _IRCF0	set	1148
   411  0189                     _ANSELH	set	393
   412  0188                     _ANSEL	set	392
   413                           
   414                           	psect	strings
   415  0003                     __pstrings:
   416  0003                     stringtab:
   417  0003                     __stringtab:
   418  0003                     stringcode:	
   419                           ;	String table - string pointers are 1 byte each
   420                           
   421  0003                     stringdir:
   422  0003  3000               	movlw	high stringdir
   423  0004  008A               	movwf	10
   424  0005  0804               	movf	4,w
   425  0006  0A84               	incf	4,f
   426  0007  0782               	addwf	2,f
   427  0008                     __stringbase:
   428  0008  3400               	retlw	0
   429  0009                     __end_of__stringtab:
   430  0009                     STR_1:
   431  0009  3448               	retlw	72	;'H'
   432  000A  346F               	retlw	111	;'o'
   433  000B  346C               	retlw	108	;'l'
   434  000C  3461               	retlw	97	;'a'
   435  000D  3420               	retlw	32	;' '
   436  000E  344D               	retlw	77	;'M'
   437  000F  3475               	retlw	117	;'u'
   438  0010  346E               	retlw	110	;'n'
   439  0011  3464               	retlw	100	;'d'
   440  0012  346F               	retlw	111	;'o'
   441  0013  3400               	retlw	0
   442  0014                     STR_3:
   443  0014  3450               	retlw	80	;'P'
   444  0015  344F               	retlw	79	;'O'
   445  0016  3454               	retlw	84	;'T'
   446  0017  3420               	retlw	32	;' '
   447  0018  3431               	retlw	49	;'1'
   448  0019  343A               	retlw	58	;':'
   449  001A  3420               	retlw	32	;' '
   450  001B  3400               	retlw	0
   451  001C                     STR_4:
   452  001C  3450               	retlw	80	;'P'
   453  001D  344F               	retlw	79	;'O'
   454  001E  3454               	retlw	84	;'T'
   455  001F  3420               	retlw	32	;' '
   456  0020  3432               	retlw	50	;'2'
   457  0021  343A               	retlw	58	;':'
   458  0022  3420               	retlw	32	;' '
   459  0023  3400               	retlw	0
   460  0024                     STR_2:
   461  0024  342E               	retlw	46	;'.'
   462  0025  3400               	retlw	0
   463                           
   464                           	psect	cinit
   465  07F3                     start_initialization:	
   466                           ; #config settings
   467                           
   468  07F3                     __initialization:
   469                           
   470                           ; Clear objects allocated to BANK0
   471  07F3  1383               	bcf	3,7	;select IRP bank0
   472  07F4  3020               	movlw	low __pbssBANK0
   473  07F5  0084               	movwf	4
   474  07F6  3030               	movlw	low (__pbssBANK0+16)
   475  07F7  120A  118A  2694  120A  118A  	fcall	clear_ram0
   476  07FC                     end_of_initialization:	
   477                           ;End of C runtime variable initialization code
   478                           
   479  07FC                     __end_of__initialization:
   480  07FC  0183               	clrf	3
   481  07FD  120A  118A  2F28   	ljmp	_main	;jump to C main() function
   482                           
   483                           	psect	bssBANK0
   484  0020                     __pbssBANK0:
   485  0020                     _text:
   486  0020                     	ds	16
   487                           
   488                           	psect	clrtext
   489  0694                     clear_ram0:	
   490                           ;	Called with FSR containing the base address, and
   491                           ;	W with the last address+1
   492                           
   493  0694  0064               	clrwdt	;clear the watchdog before getting into this loop
   494  0695                     clrloop0:
   495  0695  0180               	clrf	0	;clear RAM location pointed to by FSR
   496  0696  0A84               	incf	4,f	;increment pointer
   497  0697  0604               	xorwf	4,w	;XOR with final address
   498  0698  1903               	btfsc	3,2	;have we reached the end yet?
   499  0699  3400               	retlw	0	;all done for this memory range, return
   500  069A  0604               	xorwf	4,w	;XOR again to restore value
   501  069B  2E95               	goto	clrloop0	;do the next byte
   502                           
   503                           	psect	cstackCOMMON
   504  0070                     __pcstackCOMMON:
   505  0070                     ?_config:
   506  0070                     ??_config:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_Config_Oscilador:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_Config_Oscilador:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_LCD_Init_8bits:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_Write_LCD:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_PORT_LCD:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_PORT_LCD:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_CMD_LCD:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_main:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_Char_LCD:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     PORT_LCD@v:	
   537                           ; 1 bytes @ 0x0
   538                           
   539                           
   540                           ; 1 bytes @ 0x0
   541  0070                     	ds	1
   542  0071                     ??_CMD_LCD:
   543  0071                     ??_Char_LCD:	
   544                           ; 1 bytes @ 0x1
   545                           
   546                           
   547                           ; 1 bytes @ 0x1
   548  0071                     	ds	1
   549  0072                     CMD_LCD@v:
   550  0072                     Char_LCD@a:	
   551                           ; 1 bytes @ 0x2
   552                           
   553                           
   554                           ; 1 bytes @ 0x2
   555  0072                     	ds	1
   556  0073                     ??_LCD_Init_8bits:
   557  0073                     ?_Lcd_Set_Cursor:	
   558                           ; 1 bytes @ 0x3
   559                           
   560  0073                     ??_Write_LCD:	
   561                           ; 1 bytes @ 0x3
   562                           
   563  0073                     Lcd_Set_Cursor@b:	
   564                           ; 1 bytes @ 0x3
   565                           
   566                           
   567                           ; 1 bytes @ 0x3
   568  0073                     	ds	1
   569  0074                     ??_Lcd_Set_Cursor:
   570  0074                     Write_LCD@i:	
   571                           ; 1 bytes @ 0x4
   572                           
   573                           
   574                           ; 1 bytes @ 0x4
   575  0074                     	ds	1
   576  0075                     Lcd_Set_Cursor@a:
   577  0075                     Write_LCD@a:	
   578                           ; 1 bytes @ 0x5
   579                           
   580                           
   581                           ; 1 bytes @ 0x5
   582  0075                     	ds	1
   583  0076                     Lcd_Set_Cursor@temp:
   584                           
   585                           ; 1 bytes @ 0x6
   586  0076                     	ds	1
   587  0077                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x7
   590  0077                     	ds	3
   591                           
   592                           	psect	maintext
   593  0728                     __pmaintext:	
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   596 ;;
   597 ;; *************** function _main *****************
   598 ;; Defined at:
   599 ;;		line 66 in file "Proyecto_I_Maestro.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : B00/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0
   615 ;;      Temps:          3       0       0       0       0
   616 ;;      Totals:         3       0       0       0       0
   617 ;;Total ram usage:        3 bytes
   618 ;; Hardware stack levels required when called: 3
   619 ;; This function calls:
   620 ;;		_Config_Oscilador
   621 ;;		_LCD_Init_8bits
   622 ;;		_Lcd_Set_Cursor
   623 ;;		_Write_LCD
   624 ;;		_config
   625 ;; This function is called by:
   626 ;;		Startup code after reset
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _main
   632  0728                     _main:
   633  0728                     l1225:	
   634                           ;incstack = 0
   635                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   636                           
   637  0728  120A  118A  269C  120A  118A  	fcall	_config
   638  072D                     l1227:
   639  072D  120A  118A  268C  120A  118A  	fcall	_Config_Oscilador
   640  0732                     l1229:
   641  0732  120A  118A  2755  120A  118A  	fcall	_LCD_Init_8bits
   642  0737                     l1231:
   643  0737  01F3               	clrf	Lcd_Set_Cursor@b
   644  0738  0AF3               	incf	Lcd_Set_Cursor@b,f
   645  0739  3001               	movlw	1
   646  073A  120A  118A  26DD  120A  118A  	fcall	_Lcd_Set_Cursor
   647  073F                     l1233:
   648  073F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   649  0740  120A  118A  2701  120A  118A  	fcall	_Write_LCD
   650  0745                     l1235:
   651  0745  3003               	movlw	3
   652  0746  00F9               	movwf	??_main+2
   653  0747  3008               	movlw	8
   654  0748  00F8               	movwf	??_main+1
   655  0749  3077               	movlw	119
   656  074A  00F7               	movwf	??_main
   657  074B                     u477:
   658  074B  0BF7               	decfsz	??_main,f
   659  074C  2F4B               	goto	u477
   660  074D  0BF8               	decfsz	??_main+1,f
   661  074E  2F4B               	goto	u477
   662  074F  0BF9               	decfsz	??_main+2,f
   663  0750  2F4B               	goto	u477
   664  0751  2F37               	goto	l1231
   665  0752  120A  118A  2800   	ljmp	start
   666  0755                     __end_of_main:
   667                           
   668                           	psect	text1
   669  069C                     __ptext1:	
   670 ;; *************** function _config *****************
   671 ;; Defined at:
   672 ;;		line 83 in file "Proyecto_I_Maestro.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		status,2
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _config
   701  069C                     _config:
   702  069C                     l927:	
   703                           ;incstack = 0
   704                           ; Regs used in _config: [status,2]
   705                           
   706  069C  1683               	bsf	3,5	;RP0=1, select bank1
   707  069D  1303               	bcf	3,6	;RP1=0, select bank1
   708  069E  0185               	clrf	5	;volatile
   709  069F  0186               	clrf	6	;volatile
   710  06A0  0189               	clrf	9	;volatile
   711  06A1  0188               	clrf	8	;volatile
   712  06A2  1683               	bsf	3,5	;RP0=1, select bank3
   713  06A3  1703               	bsf	3,6	;RP1=1, select bank3
   714  06A4  0188               	clrf	8	;volatile
   715  06A5  0189               	clrf	9	;volatile
   716  06A6  1283               	bcf	3,5	;RP0=0, select bank0
   717  06A7  1303               	bcf	3,6	;RP1=0, select bank0
   718  06A8  0185               	clrf	5	;volatile
   719  06A9  0186               	clrf	6	;volatile
   720  06AA  0188               	clrf	8	;volatile
   721  06AB  0189               	clrf	9	;volatile
   722  06AC                     l45:
   723  06AC  0008               	return
   724  06AD                     __end_of_config:
   725                           
   726                           	psect	text2
   727  0701                     __ptext2:	
   728 ;; *************** function _Write_LCD *****************
   729 ;; Defined at:
   730 ;;		line 58 in file "../../LIB/LIB.X/LCD.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  a               1    wreg     PTR unsigned char 
   733 ;;		 -> STR_2(2), STR_1(11), 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  a               1    5[COMMON] PTR unsigned char 
   736 ;;		 -> STR_2(2), STR_1(11), 
   737 ;;  i               1    4[COMMON] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         2       0       0       0       0
   749 ;;      Temps:          1       0       0       0       0
   750 ;;      Totals:         3       0       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 2
   754 ;; This function calls:
   755 ;;		_Char_LCD
   756 ;; This function is called by:
   757 ;;		_main
   758 ;;		_Print_Num
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _Write_LCD
   764  0701                     _Write_LCD:
   765                           
   766                           ;incstack = 0
   767                           ; Regs used in _Write_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   768                           ;Write_LCD@a stored from wreg
   769  0701  00F5               	movwf	Write_LCD@a
   770  0702                     l1201:
   771                           
   772                           ;../../LIB/LIB.X/LCD.c: 59:     char i;;../../LIB/LIB.X/LCD.c: 60:     for (i = 0; a[i] 
      +                          != '\0'; i++){
   773  0702  01F4               	clrf	Write_LCD@i
   774  0703  2F1A               	goto	l1209
   775  0704                     l1203:
   776                           
   777                           ;../../LIB/LIB.X/LCD.c: 61:         Char_LCD(a[i]);
   778  0704  0874               	movf	Write_LCD@i,w
   779  0705  0775               	addwf	Write_LCD@a,w
   780  0706  0084               	movwf	4
   781  0707  120A  118A  2003  120A  118A  	fcall	stringdir
   782  070C  120A  118A  26C5  120A  118A  	fcall	_Char_LCD
   783  0711                     l1205:
   784                           
   785                           ;../../LIB/LIB.X/LCD.c: 62:         _delay((unsigned long)((10)*(8000000/4000000.0)));
   786  0711  3006               	movlw	6
   787  0712  00F3               	movwf	??_Write_LCD
   788  0713                     u487:
   789  0713  0BF3               	decfsz	??_Write_LCD,f
   790  0714  2F13               	goto	u487
   791  0715  0000               	nop
   792  0716                     l1207:
   793                           
   794                           ;../../LIB/LIB.X/LCD.c: 63:     }
   795  0716  3001               	movlw	1
   796  0717  00F3               	movwf	??_Write_LCD
   797  0718  0873               	movf	??_Write_LCD,w
   798  0719  07F4               	addwf	Write_LCD@i,f
   799  071A                     l1209:
   800  071A  0874               	movf	Write_LCD@i,w
   801  071B  0775               	addwf	Write_LCD@a,w
   802  071C  0084               	movwf	4
   803  071D  120A  118A  2003  120A  118A  	fcall	stringdir
   804  0722  3A00               	xorlw	0
   805  0723  1D03               	skipz
   806  0724  2F26               	goto	u451
   807  0725  2F27               	goto	u450
   808  0726                     u451:
   809  0726  2F04               	goto	l1203
   810  0727                     u450:
   811  0727                     l84:
   812  0727  0008               	return
   813  0728                     __end_of_Write_LCD:
   814                           
   815                           	psect	text3
   816  06C5                     __ptext3:	
   817 ;; *************** function _Char_LCD *****************
   818 ;; Defined at:
   819 ;;		line 51 in file "../../LIB/LIB.X/LCD.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  a               1    wreg     unsigned char 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  a               1    2[COMMON] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         0       0       0       0       0
   834 ;;      Locals:         1       0       0       0       0
   835 ;;      Temps:          1       0       0       0       0
   836 ;;      Totals:         2       0       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 1
   840 ;; This function calls:
   841 ;;		_PORT_LCD
   842 ;; This function is called by:
   843 ;;		_Write_LCD
   844 ;;		_tabla_num
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _Char_LCD
   850  06C5                     _Char_LCD:
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _Char_LCD: [wreg+status,2+status,0+pclath+cstack]
   854                           ;Char_LCD@a stored from wreg
   855  06C5  00F2               	movwf	Char_LCD@a
   856  06C6                     l877:
   857                           
   858                           ;../../LIB/LIB.X/LCD.c: 52:     PORTEbits.RE0 = 1;
   859  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   860  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   861  06C8  1409               	bsf	9,0	;volatile
   862  06C9                     l879:
   863                           
   864                           ;../../LIB/LIB.X/LCD.c: 53:     PORT_LCD(a);
   865  06C9  0872               	movf	Char_LCD@a,w
   866  06CA  120A  118A  27A1  120A  118A  	fcall	_PORT_LCD
   867  06CF                     l881:
   868                           
   869                           ;../../LIB/LIB.X/LCD.c: 54:     PORTEbits.RE1 = 1;
   870  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   871  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   872  06D1  1489               	bsf	9,1	;volatile
   873  06D2                     l883:
   874                           
   875                           ;../../LIB/LIB.X/LCD.c: 55:     _delay((unsigned long)((500)*(8000000/4000000.0)));
   876  06D2  30C7               	movlw	199
   877  06D3  00F1               	movwf	??_Char_LCD
   878  06D4                     u497:
   879  06D4  2ED5               	nop2
   880  06D5  0BF1               	decfsz	??_Char_LCD,f
   881  06D6  2ED4               	goto	u497
   882  06D7  2ED8               	nop2
   883  06D8  2ED9               	nop2
   884  06D9                     l885:
   885                           
   886                           ;../../LIB/LIB.X/LCD.c: 56:     PORTEbits.RE1 = 0;
   887  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   888  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   889  06DB  1089               	bcf	9,1	;volatile
   890  06DC                     l78:
   891  06DC  0008               	return
   892  06DD                     __end_of_Char_LCD:
   893                           
   894                           	psect	text4
   895  06DD                     __ptext4:	
   896 ;; *************** function _Lcd_Set_Cursor *****************
   897 ;; Defined at:
   898 ;;		line 38 in file "../../LIB/LIB.X/LCD.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  a               1    wreg     unsigned char 
   901 ;;  b               1    3[COMMON] unsigned char 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  a               1    5[COMMON] unsigned char 
   904 ;;  temp            1    6[COMMON] unsigned char 
   905 ;;  y               1    0        unsigned char 
   906 ;;  z               1    0        unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         1       0       0       0       0
   917 ;;      Locals:         2       0       0       0       0
   918 ;;      Temps:          1       0       0       0       0
   919 ;;      Totals:         4       0       0       0       0
   920 ;;Total ram usage:        4 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 2
   923 ;; This function calls:
   924 ;;		_CMD_LCD
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _Lcd_Set_Cursor
   932  06DD                     _Lcd_Set_Cursor:
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   936                           ;Lcd_Set_Cursor@a stored from wreg
   937  06DD  00F5               	movwf	Lcd_Set_Cursor@a
   938  06DE                     l1189:
   939                           
   940                           ;../../LIB/LIB.X/LCD.c: 39:     char temp, z, y;;../../LIB/LIB.X/LCD.c: 40:     if (a ==
      +                           1) {
   941  06DE  0375               	decf	Lcd_Set_Cursor@a,w
   942  06DF  1D03               	btfss	3,2
   943  06E0  2EE2               	goto	u431
   944  06E1  2EE3               	goto	u430
   945  06E2                     u431:
   946  06E2  2EEF               	goto	l1195
   947  06E3                     u430:
   948  06E3                     l1191:
   949                           
   950                           ;../../LIB/LIB.X/LCD.c: 41:         temp = 0x80 + b - 1;
   951  06E3  0873               	movf	Lcd_Set_Cursor@b,w
   952  06E4  3E7F               	addlw	127
   953  06E5  00F4               	movwf	??_Lcd_Set_Cursor
   954  06E6  0874               	movf	??_Lcd_Set_Cursor,w
   955  06E7  00F6               	movwf	Lcd_Set_Cursor@temp
   956  06E8                     l1193:
   957                           
   958                           ;../../LIB/LIB.X/LCD.c: 42:         CMD_LCD(temp);
   959  06E8  0876               	movf	Lcd_Set_Cursor@temp,w
   960  06E9  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
   961                           
   962                           ;../../LIB/LIB.X/LCD.c: 43:     } else if (a == 2) {
   963  06EE  2F00               	goto	l72
   964  06EF                     l1195:
   965  06EF  3002               	movlw	2
   966  06F0  0675               	xorwf	Lcd_Set_Cursor@a,w
   967  06F1  1D03               	btfss	3,2
   968  06F2  2EF4               	goto	u441
   969  06F3  2EF5               	goto	u440
   970  06F4                     u441:
   971  06F4  2F00               	goto	l72
   972  06F5                     u440:
   973  06F5                     l1197:
   974                           
   975                           ;../../LIB/LIB.X/LCD.c: 44:         temp = 0xC0 + b - 1;
   976  06F5  0873               	movf	Lcd_Set_Cursor@b,w
   977  06F6  3EBF               	addlw	191
   978  06F7  00F4               	movwf	??_Lcd_Set_Cursor
   979  06F8  0874               	movf	??_Lcd_Set_Cursor,w
   980  06F9  00F6               	movwf	Lcd_Set_Cursor@temp
   981  06FA                     l1199:
   982                           
   983                           ;../../LIB/LIB.X/LCD.c: 45:         CMD_LCD(temp);
   984  06FA  0876               	movf	Lcd_Set_Cursor@temp,w
   985  06FB  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
   986  0700                     l72:
   987  0700  0008               	return
   988  0701                     __end_of_Lcd_Set_Cursor:
   989                           
   990                           	psect	text5
   991  0755                     __ptext5:	
   992 ;; *************** function _LCD_Init_8bits *****************
   993 ;; Defined at:
   994 ;;		line 5 in file "../../LIB/LIB.X/LCD.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0
  1011 ;;      Totals:         2       0       0       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 2
  1015 ;; This function calls:
  1016 ;;		_CMD_LCD
  1017 ;;		_PORT_LCD
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _LCD_Init_8bits
  1025  0755                     _LCD_Init_8bits:
  1026  0755                     l933:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _LCD_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  1029                           
  1030                           
  1031                           ;../../LIB/LIB.X/LCD.c: 6:     PORT_LCD(0);
  1032  0755  3000               	movlw	0
  1033  0756  120A  118A  27A1  120A  118A  	fcall	_PORT_LCD
  1034  075B                     l935:
  1035                           
  1036                           ;../../LIB/LIB.X/LCD.c: 7:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1037  075B  3034               	movlw	52
  1038  075C  00F4               	movwf	??_LCD_Init_8bits+1
  1039  075D  30F1               	movlw	241
  1040  075E  00F3               	movwf	??_LCD_Init_8bits
  1041  075F                     u507:
  1042  075F  0BF3               	decfsz	??_LCD_Init_8bits,f
  1043  0760  2F5F               	goto	u507
  1044  0761  0BF4               	decfsz	??_LCD_Init_8bits+1,f
  1045  0762  2F5F               	goto	u507
  1046  0763  2F64               	nop2
  1047  0764                     l937:
  1048                           
  1049                           ;../../LIB/LIB.X/LCD.c: 8:     CMD_LCD(0b111000);
  1050  0764  3038               	movlw	56
  1051  0765  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
  1052                           
  1053                           ;../../LIB/LIB.X/LCD.c: 9:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1054  076A  3034               	movlw	52
  1055  076B  00F4               	movwf	??_LCD_Init_8bits+1
  1056  076C  30F1               	movlw	241
  1057  076D  00F3               	movwf	??_LCD_Init_8bits
  1058  076E                     u517:
  1059  076E  0BF3               	decfsz	??_LCD_Init_8bits,f
  1060  076F  2F6E               	goto	u517
  1061  0770  0BF4               	decfsz	??_LCD_Init_8bits+1,f
  1062  0771  2F6E               	goto	u517
  1063  0772  2F73               	nop2
  1064  0773                     l939:
  1065                           
  1066                           ;../../LIB/LIB.X/LCD.c: 10:     CMD_LCD(0b1100);
  1067  0773  300C               	movlw	12
  1068  0774  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
  1069  0779                     l941:
  1070                           
  1071                           ;../../LIB/LIB.X/LCD.c: 11:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1072  0779  3034               	movlw	52
  1073  077A  00F4               	movwf	??_LCD_Init_8bits+1
  1074  077B  30F1               	movlw	241
  1075  077C  00F3               	movwf	??_LCD_Init_8bits
  1076  077D                     u527:
  1077  077D  0BF3               	decfsz	??_LCD_Init_8bits,f
  1078  077E  2F7D               	goto	u527
  1079  077F  0BF4               	decfsz	??_LCD_Init_8bits+1,f
  1080  0780  2F7D               	goto	u527
  1081  0781  2F82               	nop2
  1082                           
  1083                           ;../../LIB/LIB.X/LCD.c: 12:     CMD_LCD(0b1);
  1084  0782  3001               	movlw	1
  1085  0783  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
  1086                           
  1087                           ;../../LIB/LIB.X/LCD.c: 15:     CMD_LCD(0b111000);
  1088  0788  3038               	movlw	56
  1089  0789  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
  1090                           
  1091                           ;../../LIB/LIB.X/LCD.c: 16:     CMD_LCD(0b1000);
  1092  078E  3008               	movlw	8
  1093  078F  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
  1094                           
  1095                           ;../../LIB/LIB.X/LCD.c: 17:     CMD_LCD(0b1);
  1096  0794  3001               	movlw	1
  1097  0795  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
  1098                           
  1099                           ;../../LIB/LIB.X/LCD.c: 18:     CMD_LCD(0b110);
  1100  079A  3006               	movlw	6
  1101  079B  120A  118A  26AD  120A  118A  	fcall	_CMD_LCD
  1102  07A0                     l60:
  1103  07A0  0008               	return
  1104  07A1                     __end_of_LCD_Init_8bits:
  1105                           
  1106                           	psect	text6
  1107  06AD                     __ptext6:	
  1108 ;; *************** function _CMD_LCD *****************
  1109 ;; Defined at:
  1110 ;;		line 31 in file "../../LIB/LIB.X/LCD.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  v               1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  v               1    2[COMMON] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0
  1126 ;;      Temps:          1       0       0       0       0
  1127 ;;      Totals:         2       0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 1
  1131 ;; This function calls:
  1132 ;;		_PORT_LCD
  1133 ;; This function is called by:
  1134 ;;		_LCD_Init_8bits
  1135 ;;		_Lcd_Set_Cursor
  1136 ;;		_Clear_LCD
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _CMD_LCD
  1142  06AD                     _CMD_LCD:
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _CMD_LCD: [wreg+status,2+status,0+pclath+cstack]
  1146                           ;CMD_LCD@v stored from wreg
  1147  06AD  00F2               	movwf	CMD_LCD@v
  1148  06AE                     l867:
  1149                           
  1150                           ;../../LIB/LIB.X/LCD.c: 32:     PORTEbits.RE0 = 0;
  1151  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1152  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1153  06B0  1009               	bcf	9,0	;volatile
  1154  06B1                     l869:
  1155                           
  1156                           ;../../LIB/LIB.X/LCD.c: 33:     PORT_LCD(v);
  1157  06B1  0872               	movf	CMD_LCD@v,w
  1158  06B2  120A  118A  27A1  120A  118A  	fcall	_PORT_LCD
  1159  06B7                     l871:
  1160                           
  1161                           ;../../LIB/LIB.X/LCD.c: 34:     PORTEbits.RE1 = 1;
  1162  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1163  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1164  06B9  1489               	bsf	9,1	;volatile
  1165  06BA                     l873:
  1166                           
  1167                           ;../../LIB/LIB.X/LCD.c: 35:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  1168  06BA  30C7               	movlw	199
  1169  06BB  00F1               	movwf	??_CMD_LCD
  1170  06BC                     u537:
  1171  06BC  2EBD               	nop2
  1172  06BD  0BF1               	decfsz	??_CMD_LCD,f
  1173  06BE  2EBC               	goto	u537
  1174  06BF  2EC0               	nop2
  1175  06C0  2EC1               	nop2
  1176  06C1                     l875:
  1177                           
  1178                           ;../../LIB/LIB.X/LCD.c: 36:     PORTEbits.RE1 = 0;
  1179  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1180  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1181  06C3  1089               	bcf	9,1	;volatile
  1182  06C4                     l66:
  1183  06C4  0008               	return
  1184  06C5                     __end_of_CMD_LCD:
  1185                           
  1186                           	psect	text7
  1187  07A1                     __ptext7:	
  1188 ;; *************** function _PORT_LCD *****************
  1189 ;; Defined at:
  1190 ;;		line 21 in file "../../LIB/LIB.X/LCD.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  v               1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  v               1    0[COMMON] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0
  1207 ;;      Totals:         1       0       0       0       0
  1208 ;;Total ram usage:        1 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_LCD_Init_8bits
  1214 ;;		_CMD_LCD
  1215 ;;		_Char_LCD
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function _PORT_LCD
  1221  07A1                     _PORT_LCD:
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in _PORT_LCD: [wreg]
  1225                           ;PORT_LCD@v stored from wreg
  1226  07A1  00F0               	movwf	PORT_LCD@v
  1227  07A2                     l865:
  1228                           
  1229                           ;../../LIB/LIB.X/LCD.c: 22:     PORTAbits.RA0 = v & 1 ? 1 : 0;
  1230  07A2  1870               	btfsc	PORT_LCD@v,0
  1231  07A3  2FA5               	goto	u11
  1232  07A4  2FA9               	goto	u10
  1233  07A5                     u11:
  1234  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1235  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1236  07A7  1405               	bsf	5,0	;volatile
  1237  07A8  2FAC               	goto	u24
  1238  07A9                     u10:
  1239  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1240  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1241  07AB  1005               	bcf	5,0	;volatile
  1242  07AC                     u24:
  1243                           
  1244                           ;../../LIB/LIB.X/LCD.c: 23:     PORTAbits.RA1 = v & 2 ? 1 : 0;
  1245  07AC  18F0               	btfsc	PORT_LCD@v,1
  1246  07AD  2FAF               	goto	u31
  1247  07AE  2FB3               	goto	u30
  1248  07AF                     u31:
  1249  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1250  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1251  07B1  1485               	bsf	5,1	;volatile
  1252  07B2  2FB6               	goto	u44
  1253  07B3                     u30:
  1254  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1255  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1256  07B5  1085               	bcf	5,1	;volatile
  1257  07B6                     u44:
  1258                           
  1259                           ;../../LIB/LIB.X/LCD.c: 24:     PORTAbits.RA2 = v & 4 ? 1 : 0;
  1260  07B6  1970               	btfsc	PORT_LCD@v,2
  1261  07B7  2FB9               	goto	u51
  1262  07B8  2FBD               	goto	u50
  1263  07B9                     u51:
  1264  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1265  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1266  07BB  1505               	bsf	5,2	;volatile
  1267  07BC  2FC0               	goto	u64
  1268  07BD                     u50:
  1269  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1270  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1271  07BF  1105               	bcf	5,2	;volatile
  1272  07C0                     u64:
  1273                           
  1274                           ;../../LIB/LIB.X/LCD.c: 25:     PORTAbits.RA3 = v & 8 ? 1 : 0;
  1275  07C0  19F0               	btfsc	PORT_LCD@v,3
  1276  07C1  2FC3               	goto	u71
  1277  07C2  2FC7               	goto	u70
  1278  07C3                     u71:
  1279  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1280  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1281  07C5  1585               	bsf	5,3	;volatile
  1282  07C6  2FCA               	goto	u84
  1283  07C7                     u70:
  1284  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1285  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1286  07C9  1185               	bcf	5,3	;volatile
  1287  07CA                     u84:
  1288                           
  1289                           ;../../LIB/LIB.X/LCD.c: 26:     PORTAbits.RA4 = v & 16 ? 1 : 0;
  1290  07CA  1A70               	btfsc	PORT_LCD@v,4
  1291  07CB  2FCD               	goto	u91
  1292  07CC  2FD1               	goto	u90
  1293  07CD                     u91:
  1294  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1295  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1296  07CF  1605               	bsf	5,4	;volatile
  1297  07D0  2FD4               	goto	u104
  1298  07D1                     u90:
  1299  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1300  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1301  07D3  1205               	bcf	5,4	;volatile
  1302  07D4                     u104:
  1303                           
  1304                           ;../../LIB/LIB.X/LCD.c: 27:     PORTAbits.RA5 = v & 32 ? 1 : 0;
  1305  07D4  1AF0               	btfsc	PORT_LCD@v,5
  1306  07D5  2FD7               	goto	u111
  1307  07D6  2FDB               	goto	u110
  1308  07D7                     u111:
  1309  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1310  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1311  07D9  1685               	bsf	5,5	;volatile
  1312  07DA  2FDE               	goto	u124
  1313  07DB                     u110:
  1314  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1315  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1316  07DD  1285               	bcf	5,5	;volatile
  1317  07DE                     u124:
  1318                           
  1319                           ;../../LIB/LIB.X/LCD.c: 28:     PORTAbits.RA6 = v & 64 ? 1 : 0;
  1320  07DE  1B70               	btfsc	PORT_LCD@v,6
  1321  07DF  2FE1               	goto	u131
  1322  07E0  2FE5               	goto	u130
  1323  07E1                     u131:
  1324  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1325  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1326  07E3  1705               	bsf	5,6	;volatile
  1327  07E4  2FE8               	goto	u144
  1328  07E5                     u130:
  1329  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1330  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1331  07E7  1305               	bcf	5,6	;volatile
  1332  07E8                     u144:
  1333                           
  1334                           ;../../LIB/LIB.X/LCD.c: 29:     PORTAbits.RA7 = v & 128 ? 1 : 0;
  1335  07E8  1BF0               	btfsc	PORT_LCD@v,7
  1336  07E9  2FEB               	goto	u151
  1337  07EA  2FEF               	goto	u150
  1338  07EB                     u151:
  1339  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  1340  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  1341  07ED  1785               	bsf	5,7	;volatile
  1342  07EE  2FF2               	goto	u164
  1343  07EF                     u150:
  1344  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1345  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1346  07F1  1385               	bcf	5,7	;volatile
  1347  07F2                     u164:
  1348  07F2                     l63:
  1349  07F2  0008               	return
  1350  07F3                     __end_of_PORT_LCD:
  1351                           
  1352                           	psect	text8
  1353  068C                     __ptext8:	
  1354 ;; *************** function _Config_Oscilador *****************
  1355 ;; Defined at:
  1356 ;;		line 7 in file "../../LIB/LIB.X/LIB.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _Config_Oscilador
  1385  068C                     _Config_Oscilador:
  1386  068C                     l929:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _Config_Oscilador: [wreg]
  1389                           
  1390                           
  1391                           ;../../LIB/LIB.X/LIB.c: 9:     IRCF0 = 1;
  1392  068C  1683               	bsf	3,5	;RP0=1, select bank1
  1393  068D  1303               	bcf	3,6	;RP1=0, select bank1
  1394  068E  160F               	bsf	15,4	;volatile
  1395                           
  1396                           ;../../LIB/LIB.X/LIB.c: 10:     IRCF1 = 1;
  1397  068F  168F               	bsf	15,5	;volatile
  1398                           
  1399                           ;../../LIB/LIB.X/LIB.c: 11:     IRCF2 = 1;
  1400  0690  170F               	bsf	15,6	;volatile
  1401  0691                     l931:
  1402                           
  1403                           ;../../LIB/LIB.X/LIB.c: 12:     INTCON = 0b11101000;
  1404  0691  30E8               	movlw	232
  1405  0692  008B               	movwf	11	;volatile
  1406  0693                     l213:
  1407  0693  0008               	return
  1408  0694                     __end_of_Config_Oscilador:
  1409  007E                     btemp	set	126	;btemp
  1410  007E                     wtemp0	set	126
  1411                           
  1412                           	psect	config
  1413                           
  1414                           ;Config register CONFIG1 @ 0x2007
  1415                           ;	Oscillator Selection bits
  1416                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1417                           ;	Watchdog Timer Enable bit
  1418                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1419                           ;	Power-up Timer Enable bit
  1420                           ;	PWRTE = OFF, PWRT disabled
  1421                           ;	RE3/MCLR pin function select bit
  1422                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1423                           ;	Code Protection bit
  1424                           ;	CP = OFF, Program memory code protection is disabled
  1425                           ;	Data Code Protection bit
  1426                           ;	CPD = OFF, Data memory code protection is disabled
  1427                           ;	Brown Out Reset Selection bits
  1428                           ;	BOREN = OFF, BOR disabled
  1429                           ;	Internal External Switchover bit
  1430                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1431                           ;	Fail-Safe Clock Monitor Enabled bit
  1432                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1433                           ;	Low Voltage Programming Enable bit
  1434                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1435                           ;	In-Circuit Debugger Mode bit
  1436                           ;	DEBUG = 0x1, unprogrammed default
  1437  2007                     	org	8199
  1438  2007  20D4               	dw	8404
  1439                           
  1440                           ;Config register CONFIG2 @ 0x2008
  1441                           ;	Brown-out Reset Selection bit
  1442                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1443                           ;	Flash Program Memory Self Write Enable bits
  1444                           ;	WRT = OFF, Write protection off
  1445  2008                     	org	8200
  1446  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_LCD@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[2]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Write_LCD->_Char_LCD
    _Char_LCD->_PORT_LCD
    _Lcd_Set_Cursor->_CMD_LCD
    _LCD_Init_8bits->_CMD_LCD
    _CMD_LCD->_PORT_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     891
                                              7 COMMON     3     3      0
                   _Config_Oscilador
                     _LCD_Init_8bits
                     _Lcd_Set_Cursor
                          _Write_LCD
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_LCD                                            3     3      0     291
                                              3 COMMON     3     3      0
                           _Char_LCD
 ---------------------------------------------------------------------------------
 (2) _Char_LCD                                             2     2      0     135
                                              1 COMMON     2     2      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     345
                                              3 COMMON     4     3      1
                            _CMD_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_8bits                                       2     2      0     255
                                              3 COMMON     2     2      0
                            _CMD_LCD
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (2) _CMD_LCD                                              2     2      0     135
                                              1 COMMON     2     2      0
                           _PORT_LCD
 ---------------------------------------------------------------------------------
 (3) _PORT_LCD                                             1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_Oscilador                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Oscilador
   _LCD_Init_8bits
     _CMD_LCD
       _PORT_LCD
     _PORT_LCD
   _Lcd_Set_Cursor
     _CMD_LCD
   _Write_LCD
     _Char_LCD
       _PORT_LCD
   _config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 23 11:13:02 2021

                        pc 0002                         l60 07A0                         l45 06AC  
                       l63 07F2                         l72 0700                         l66 06C4  
                       l84 0727                         l78 06DC                         u10 07A9  
                       u11 07A5                         u30 07B3                         u31 07AF  
                       u24 07AC                         u50 07BD                         u51 07B9  
                       u44 07B6                         u70 07C7                         u71 07C3  
                       u64 07C0                         u90 07D1                         u91 07CD  
                       u84 07CA                         fsr 0004                        l213 0693  
                      l931 0691                        l941 0779                        l933 0755  
                      l871 06B7                        l935 075B                        l927 069C  
                      l929 068C                        l865 07A2                        l873 06BA  
                      l937 0764                        l881 06CF                        l875 06C1  
                      l867 06AE                        l939 0773                        l883 06D2  
                      l869 06B1                        l885 06D9                        l877 06C6  
                      l879 06C9                        _RA0 0028                        _RB0 0030  
                      _RB1 0031                        u110 07DB                        u111 07D7  
                      u104 07D4                        u130 07E5                        u131 07E1  
                      u124 07DE                        u150 07EF                        u151 07EB  
                      u144 07E8                        u164 07F2                        u430 06E3  
                      _PS0 0408                        u431 06E2                        _PS1 0409  
                      u440 06F5                        _PS2 040A                        u441 06F4  
                      u450 0727                        u507 075F                        u451 0726  
                      u517 076E                        u527 077D                        u537 06BC  
                      u477 074B                        u487 0713                        _PSA 040B  
                      u497 06D4                        fsr0 0004                        indf 0000  
          __end_of_CMD_LCD 06C5                       l1201 0702                       l1203 0704  
                     l1205 0711                       l1207 0716                       l1231 0737  
                     l1209 071A                       l1233 073F                       l1225 0728  
                     l1235 0745                       l1227 072D                       l1229 0732  
                     l1191 06E3                       l1193 06E8                       l1195 06EF  
                     l1197 06F5                       l1189 06DE                       l1199 06FA  
                     _ADIF 0066                       STR_1 0009                       STR_2 0024  
                     STR_3 0014                       STR_4 001C                       _CREN 00C4  
                     _T0CS 040D                       _RBIE 005B                       _TMR0 0001  
                     _SPEN 00C7                       _TXEN 04C5                       _SYNC 04C4  
   __end_of_LCD_Init_8bits 07A1                       _main 0728                       _text 0020  
                     btemp 007E                       start 0000                      ?_main 0070  
                    _ANSEL 0188                      _IOCB0 04B0                      _IOCB1 04B1  
                    _IRCF0 047C                      _IRCF1 047D                      _IRCF2 047E  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019           __end_of_PORT_LCD 07F3                      pclath 000A  
          ?_LCD_Init_8bits 0070           __end_of_Char_LCD 06DD                      status 0003  
                    wtemp0 007E            __initialization 07F3               __end_of_main 0755  
                   ??_main 0077                  ??_CMD_LCD 0071                     _ADRESH 001E  
                   _ANSELH 0189                     _INTCON 000B   __end_of_Config_Oscilador 0694  
                   _config 069C            Lcd_Set_Cursor@a 0075            Lcd_Set_Cursor@b 0073  
  __end_of__initialization 07FC         __size_of_Write_LCD 0027             __pcstackCOMMON 0070  
                ?_PORT_LCD 0070             _Lcd_Set_Cursor 06DD                  ?_Char_LCD 0070  
           _OPTION_REGbits 0081                 __pbssBANK0 0020                 Write_LCD@a 0075  
               Write_LCD@i 0074                 __pmaintext 0728                 ??_PORT_LCD 0070  
                  ?_config 0070     __end_of_Lcd_Set_Cursor 0701                    _CMD_LCD 06AD  
        __end_of_Write_LCD 0728                 ??_Char_LCD 0071                  PORT_LCD@v 0070  
         ??_LCD_Init_8bits 0073                 __stringtab 0003            __size_of_config 0011  
          ?_Lcd_Set_Cursor 0073                    __ptext1 069C                    __ptext2 0701  
                  __ptext3 06C5                    __ptext4 06DD                    __ptext5 0755  
                  __ptext6 06AD                    __ptext7 07A1                    __ptext8 068C  
                Char_LCD@a 0072                    clrloop0 0695       end_of_initialization 07FC  
        ?_Config_Oscilador 0070                  _PORTAbits 0005                  _PORTCbits 0007  
       ??_Config_Oscilador 0070                  _PORTEbits 0009             __end_of_config 06AD  
        __size_of_PORT_LCD 0052        start_initialization 07F3          __size_of_Char_LCD 0018  
                 CMD_LCD@v 0072                   ??_config 0070                   ?_CMD_LCD 0070  
                ___latbits 0002                  _Write_LCD 0701           ??_Lcd_Set_Cursor 0074  
                __pstrings 0003                 ?_Write_LCD 0070                  clear_ram0 0694  
                 _PIE1bits 008C                   _PIR1bits 000C                   _PORT_LCD 07A1  
               _ADCON0bits 001F                __stringbase 0008                 _ADCON1bits 009F  
                 _Char_LCD 06C5           __size_of_CMD_LCD 0018                   _WPUBbits 0095  
__size_of_Config_Oscilador 0008    __size_of_LCD_Init_8bits 004C         __end_of__stringtab 0009  
              ??_Write_LCD 0073              __size_of_main 002D                 _INTCONbits 000B  
                stringcode 0003         Lcd_Set_Cursor@temp 0076                   stringdir 0003  
                 stringtab 0003           _Config_Oscilador 068C             _LCD_Init_8bits 0755  
